#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



public partial class AdventureWorks : System.Data.Linq.DataContext
{
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertPerson_Address(Person_Address instance);
  partial void UpdatePerson_Address(Person_Address instance);
  partial void DeletePerson_Address(Person_Address instance);
  partial void InsertPerson_AddressType(Person_AddressType instance);
  partial void UpdatePerson_AddressType(Person_AddressType instance);
  partial void DeletePerson_AddressType(Person_AddressType instance);
  partial void InsertAWBuildVersion(AWBuildVersion instance);
  partial void UpdateAWBuildVersion(AWBuildVersion instance);
  partial void DeleteAWBuildVersion(AWBuildVersion instance);
  partial void InsertProduction_BillOfMaterials(Production_BillOfMaterials instance);
  partial void UpdateProduction_BillOfMaterials(Production_BillOfMaterials instance);
  partial void DeleteProduction_BillOfMaterials(Production_BillOfMaterials instance);
  partial void InsertPerson_Contact(Person_Contact instance);
  partial void UpdatePerson_Contact(Person_Contact instance);
  partial void DeletePerson_Contact(Person_Contact instance);
  partial void InsertSales_ContactCreditCard(Sales_ContactCreditCard instance);
  partial void UpdateSales_ContactCreditCard(Sales_ContactCreditCard instance);
  partial void DeleteSales_ContactCreditCard(Sales_ContactCreditCard instance);
  partial void InsertPerson_ContactType(Person_ContactType instance);
  partial void UpdatePerson_ContactType(Person_ContactType instance);
  partial void DeletePerson_ContactType(Person_ContactType instance);
  partial void InsertPerson_CountryRegion(Person_CountryRegion instance);
  partial void UpdatePerson_CountryRegion(Person_CountryRegion instance);
  partial void DeletePerson_CountryRegion(Person_CountryRegion instance);
  partial void InsertSales_CountryRegionCurrency(Sales_CountryRegionCurrency instance);
  partial void UpdateSales_CountryRegionCurrency(Sales_CountryRegionCurrency instance);
  partial void DeleteSales_CountryRegionCurrency(Sales_CountryRegionCurrency instance);
  partial void InsertSales_CreditCard(Sales_CreditCard instance);
  partial void UpdateSales_CreditCard(Sales_CreditCard instance);
  partial void DeleteSales_CreditCard(Sales_CreditCard instance);
  partial void InsertProduction_Culture(Production_Culture instance);
  partial void UpdateProduction_Culture(Production_Culture instance);
  partial void DeleteProduction_Culture(Production_Culture instance);
  partial void InsertSales_Currency(Sales_Currency instance);
  partial void UpdateSales_Currency(Sales_Currency instance);
  partial void DeleteSales_Currency(Sales_Currency instance);
  partial void InsertSales_CurrencyRate(Sales_CurrencyRate instance);
  partial void UpdateSales_CurrencyRate(Sales_CurrencyRate instance);
  partial void DeleteSales_CurrencyRate(Sales_CurrencyRate instance);
  partial void InsertSales_Customer(Sales_Customer instance);
  partial void UpdateSales_Customer(Sales_Customer instance);
  partial void DeleteSales_Customer(Sales_Customer instance);
  partial void InsertSales_CustomerAddress(Sales_CustomerAddress instance);
  partial void UpdateSales_CustomerAddress(Sales_CustomerAddress instance);
  partial void DeleteSales_CustomerAddress(Sales_CustomerAddress instance);
  partial void InsertDatabaseLog(DatabaseLog instance);
  partial void UpdateDatabaseLog(DatabaseLog instance);
  partial void DeleteDatabaseLog(DatabaseLog instance);
  partial void InsertHumanResources_Department(HumanResources_Department instance);
  partial void UpdateHumanResources_Department(HumanResources_Department instance);
  partial void DeleteHumanResources_Department(HumanResources_Department instance);
  partial void InsertProduction_Document(Production_Document instance);
  partial void UpdateProduction_Document(Production_Document instance);
  partial void DeleteProduction_Document(Production_Document instance);
  partial void InsertHumanResources_Employee(HumanResources_Employee instance);
  partial void UpdateHumanResources_Employee(HumanResources_Employee instance);
  partial void DeleteHumanResources_Employee(HumanResources_Employee instance);
  partial void InsertHumanResources_EmployeeAddress(HumanResources_EmployeeAddress instance);
  partial void UpdateHumanResources_EmployeeAddress(HumanResources_EmployeeAddress instance);
  partial void DeleteHumanResources_EmployeeAddress(HumanResources_EmployeeAddress instance);
  partial void InsertHumanResources_EmployeeDepartmentHistory(HumanResources_EmployeeDepartmentHistory instance);
  partial void UpdateHumanResources_EmployeeDepartmentHistory(HumanResources_EmployeeDepartmentHistory instance);
  partial void DeleteHumanResources_EmployeeDepartmentHistory(HumanResources_EmployeeDepartmentHistory instance);
  partial void InsertHumanResources_EmployeePayHistory(HumanResources_EmployeePayHistory instance);
  partial void UpdateHumanResources_EmployeePayHistory(HumanResources_EmployeePayHistory instance);
  partial void DeleteHumanResources_EmployeePayHistory(HumanResources_EmployeePayHistory instance);
  partial void InsertErrorLog(ErrorLog instance);
  partial void UpdateErrorLog(ErrorLog instance);
  partial void DeleteErrorLog(ErrorLog instance);
  partial void InsertProduction_Illustration(Production_Illustration instance);
  partial void UpdateProduction_Illustration(Production_Illustration instance);
  partial void DeleteProduction_Illustration(Production_Illustration instance);
  partial void InsertSales_Individual(Sales_Individual instance);
  partial void UpdateSales_Individual(Sales_Individual instance);
  partial void DeleteSales_Individual(Sales_Individual instance);
  partial void InsertHumanResources_JobCandidate(HumanResources_JobCandidate instance);
  partial void UpdateHumanResources_JobCandidate(HumanResources_JobCandidate instance);
  partial void DeleteHumanResources_JobCandidate(HumanResources_JobCandidate instance);
  partial void InsertProduction_Location(Production_Location instance);
  partial void UpdateProduction_Location(Production_Location instance);
  partial void DeleteProduction_Location(Production_Location instance);
  partial void InsertProduction_Product(Production_Product instance);
  partial void UpdateProduction_Product(Production_Product instance);
  partial void DeleteProduction_Product(Production_Product instance);
  partial void InsertProduction_ProductCategory(Production_ProductCategory instance);
  partial void UpdateProduction_ProductCategory(Production_ProductCategory instance);
  partial void DeleteProduction_ProductCategory(Production_ProductCategory instance);
  partial void InsertProduction_ProductCostHistory(Production_ProductCostHistory instance);
  partial void UpdateProduction_ProductCostHistory(Production_ProductCostHistory instance);
  partial void DeleteProduction_ProductCostHistory(Production_ProductCostHistory instance);
  partial void InsertProduction_ProductDescription(Production_ProductDescription instance);
  partial void UpdateProduction_ProductDescription(Production_ProductDescription instance);
  partial void DeleteProduction_ProductDescription(Production_ProductDescription instance);
  partial void InsertProduction_ProductDocument(Production_ProductDocument instance);
  partial void UpdateProduction_ProductDocument(Production_ProductDocument instance);
  partial void DeleteProduction_ProductDocument(Production_ProductDocument instance);
  partial void InsertProduction_ProductInventory(Production_ProductInventory instance);
  partial void UpdateProduction_ProductInventory(Production_ProductInventory instance);
  partial void DeleteProduction_ProductInventory(Production_ProductInventory instance);
  partial void InsertProduction_ProductListPriceHistory(Production_ProductListPriceHistory instance);
  partial void UpdateProduction_ProductListPriceHistory(Production_ProductListPriceHistory instance);
  partial void DeleteProduction_ProductListPriceHistory(Production_ProductListPriceHistory instance);
  partial void InsertProduction_ProductModel(Production_ProductModel instance);
  partial void UpdateProduction_ProductModel(Production_ProductModel instance);
  partial void DeleteProduction_ProductModel(Production_ProductModel instance);
  partial void InsertProduction_ProductModelIllustration(Production_ProductModelIllustration instance);
  partial void UpdateProduction_ProductModelIllustration(Production_ProductModelIllustration instance);
  partial void DeleteProduction_ProductModelIllustration(Production_ProductModelIllustration instance);
  partial void InsertProduction_ProductModelProductDescriptionCulture(Production_ProductModelProductDescriptionCulture instance);
  partial void UpdateProduction_ProductModelProductDescriptionCulture(Production_ProductModelProductDescriptionCulture instance);
  partial void DeleteProduction_ProductModelProductDescriptionCulture(Production_ProductModelProductDescriptionCulture instance);
  partial void InsertProduction_ProductPhoto(Production_ProductPhoto instance);
  partial void UpdateProduction_ProductPhoto(Production_ProductPhoto instance);
  partial void DeleteProduction_ProductPhoto(Production_ProductPhoto instance);
  partial void InsertProduction_ProductProductPhoto(Production_ProductProductPhoto instance);
  partial void UpdateProduction_ProductProductPhoto(Production_ProductProductPhoto instance);
  partial void DeleteProduction_ProductProductPhoto(Production_ProductProductPhoto instance);
  partial void InsertProduction_ProductReview(Production_ProductReview instance);
  partial void UpdateProduction_ProductReview(Production_ProductReview instance);
  partial void DeleteProduction_ProductReview(Production_ProductReview instance);
  partial void InsertProduction_ProductSubcategory(Production_ProductSubcategory instance);
  partial void UpdateProduction_ProductSubcategory(Production_ProductSubcategory instance);
  partial void DeleteProduction_ProductSubcategory(Production_ProductSubcategory instance);
  partial void InsertPurchasing_ProductVendor(Purchasing_ProductVendor instance);
  partial void UpdatePurchasing_ProductVendor(Purchasing_ProductVendor instance);
  partial void DeletePurchasing_ProductVendor(Purchasing_ProductVendor instance);
  partial void InsertPurchasing_PurchaseOrderDetail(Purchasing_PurchaseOrderDetail instance);
  partial void UpdatePurchasing_PurchaseOrderDetail(Purchasing_PurchaseOrderDetail instance);
  partial void DeletePurchasing_PurchaseOrderDetail(Purchasing_PurchaseOrderDetail instance);
  partial void InsertPurchasing_PurchaseOrderHeader(Purchasing_PurchaseOrderHeader instance);
  partial void UpdatePurchasing_PurchaseOrderHeader(Purchasing_PurchaseOrderHeader instance);
  partial void DeletePurchasing_PurchaseOrderHeader(Purchasing_PurchaseOrderHeader instance);
  partial void InsertSales_SalesOrderDetail(Sales_SalesOrderDetail instance);
  partial void UpdateSales_SalesOrderDetail(Sales_SalesOrderDetail instance);
  partial void DeleteSales_SalesOrderDetail(Sales_SalesOrderDetail instance);
  partial void InsertSales_SalesOrderHeader(Sales_SalesOrderHeader instance);
  partial void UpdateSales_SalesOrderHeader(Sales_SalesOrderHeader instance);
  partial void DeleteSales_SalesOrderHeader(Sales_SalesOrderHeader instance);
  partial void InsertSales_SalesOrderHeaderSalesReason(Sales_SalesOrderHeaderSalesReason instance);
  partial void UpdateSales_SalesOrderHeaderSalesReason(Sales_SalesOrderHeaderSalesReason instance);
  partial void DeleteSales_SalesOrderHeaderSalesReason(Sales_SalesOrderHeaderSalesReason instance);
  partial void InsertSales_SalesPerson(Sales_SalesPerson instance);
  partial void UpdateSales_SalesPerson(Sales_SalesPerson instance);
  partial void DeleteSales_SalesPerson(Sales_SalesPerson instance);
  partial void InsertSales_SalesPersonQuotaHistory(Sales_SalesPersonQuotaHistory instance);
  partial void UpdateSales_SalesPersonQuotaHistory(Sales_SalesPersonQuotaHistory instance);
  partial void DeleteSales_SalesPersonQuotaHistory(Sales_SalesPersonQuotaHistory instance);
  partial void InsertSales_SalesReason(Sales_SalesReason instance);
  partial void UpdateSales_SalesReason(Sales_SalesReason instance);
  partial void DeleteSales_SalesReason(Sales_SalesReason instance);
  partial void InsertSales_SalesTaxRate(Sales_SalesTaxRate instance);
  partial void UpdateSales_SalesTaxRate(Sales_SalesTaxRate instance);
  partial void DeleteSales_SalesTaxRate(Sales_SalesTaxRate instance);
  partial void InsertSales_SalesTerritory(Sales_SalesTerritory instance);
  partial void UpdateSales_SalesTerritory(Sales_SalesTerritory instance);
  partial void DeleteSales_SalesTerritory(Sales_SalesTerritory instance);
  partial void InsertSales_SalesTerritoryHistory(Sales_SalesTerritoryHistory instance);
  partial void UpdateSales_SalesTerritoryHistory(Sales_SalesTerritoryHistory instance);
  partial void DeleteSales_SalesTerritoryHistory(Sales_SalesTerritoryHistory instance);
  partial void InsertProduction_ScrapReason(Production_ScrapReason instance);
  partial void UpdateProduction_ScrapReason(Production_ScrapReason instance);
  partial void DeleteProduction_ScrapReason(Production_ScrapReason instance);
  partial void InsertHumanResources_Shift(HumanResources_Shift instance);
  partial void UpdateHumanResources_Shift(HumanResources_Shift instance);
  partial void DeleteHumanResources_Shift(HumanResources_Shift instance);
  partial void InsertPurchasing_ShipMethod(Purchasing_ShipMethod instance);
  partial void UpdatePurchasing_ShipMethod(Purchasing_ShipMethod instance);
  partial void DeletePurchasing_ShipMethod(Purchasing_ShipMethod instance);
  partial void InsertSales_ShoppingCartItem(Sales_ShoppingCartItem instance);
  partial void UpdateSales_ShoppingCartItem(Sales_ShoppingCartItem instance);
  partial void DeleteSales_ShoppingCartItem(Sales_ShoppingCartItem instance);
  partial void InsertSales_SpecialOffer(Sales_SpecialOffer instance);
  partial void UpdateSales_SpecialOffer(Sales_SpecialOffer instance);
  partial void DeleteSales_SpecialOffer(Sales_SpecialOffer instance);
  partial void InsertSales_SpecialOfferProduct(Sales_SpecialOfferProduct instance);
  partial void UpdateSales_SpecialOfferProduct(Sales_SpecialOfferProduct instance);
  partial void DeleteSales_SpecialOfferProduct(Sales_SpecialOfferProduct instance);
  partial void InsertPerson_StateProvince(Person_StateProvince instance);
  partial void UpdatePerson_StateProvince(Person_StateProvince instance);
  partial void DeletePerson_StateProvince(Person_StateProvince instance);
  partial void InsertSales_Store(Sales_Store instance);
  partial void UpdateSales_Store(Sales_Store instance);
  partial void DeleteSales_Store(Sales_Store instance);
  partial void InsertSales_StoreContact(Sales_StoreContact instance);
  partial void UpdateSales_StoreContact(Sales_StoreContact instance);
  partial void DeleteSales_StoreContact(Sales_StoreContact instance);
  partial void InsertProduction_TransactionHistory(Production_TransactionHistory instance);
  partial void UpdateProduction_TransactionHistory(Production_TransactionHistory instance);
  partial void DeleteProduction_TransactionHistory(Production_TransactionHistory instance);
  partial void InsertProduction_TransactionHistoryArchive(Production_TransactionHistoryArchive instance);
  partial void UpdateProduction_TransactionHistoryArchive(Production_TransactionHistoryArchive instance);
  partial void DeleteProduction_TransactionHistoryArchive(Production_TransactionHistoryArchive instance);
  partial void InsertProduction_UnitMeasure(Production_UnitMeasure instance);
  partial void UpdateProduction_UnitMeasure(Production_UnitMeasure instance);
  partial void DeleteProduction_UnitMeasure(Production_UnitMeasure instance);
  partial void InsertPurchasing_Vendor(Purchasing_Vendor instance);
  partial void UpdatePurchasing_Vendor(Purchasing_Vendor instance);
  partial void DeletePurchasing_Vendor(Purchasing_Vendor instance);
  partial void InsertPurchasing_VendorAddress(Purchasing_VendorAddress instance);
  partial void UpdatePurchasing_VendorAddress(Purchasing_VendorAddress instance);
  partial void DeletePurchasing_VendorAddress(Purchasing_VendorAddress instance);
  partial void InsertPurchasing_VendorContact(Purchasing_VendorContact instance);
  partial void UpdatePurchasing_VendorContact(Purchasing_VendorContact instance);
  partial void DeletePurchasing_VendorContact(Purchasing_VendorContact instance);
  partial void InsertProduction_WorkOrder(Production_WorkOrder instance);
  partial void UpdateProduction_WorkOrder(Production_WorkOrder instance);
  partial void DeleteProduction_WorkOrder(Production_WorkOrder instance);
  partial void InsertProduction_WorkOrderRouting(Production_WorkOrderRouting instance);
  partial void UpdateProduction_WorkOrderRouting(Production_WorkOrderRouting instance);
  partial void DeleteProduction_WorkOrderRouting(Production_WorkOrderRouting instance);
  #endregion
	
	public AdventureWorks(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public AdventureWorks(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Person_Address> Person_Address
	{
		get
		{
			return this.GetTable<Person_Address>();
		}
	}
	
	public System.Data.Linq.Table<Person_AddressType> Person_AddressType
	{
		get
		{
			return this.GetTable<Person_AddressType>();
		}
	}
	
	public System.Data.Linq.Table<AWBuildVersion> AWBuildVersion
	{
		get
		{
			return this.GetTable<AWBuildVersion>();
		}
	}
	
	public System.Data.Linq.Table<Production_BillOfMaterials> Production_BillOfMaterials
	{
		get
		{
			return this.GetTable<Production_BillOfMaterials>();
		}
	}
	
	public System.Data.Linq.Table<Person_Contact> Person_Contact
	{
		get
		{
			return this.GetTable<Person_Contact>();
		}
	}
	
	public System.Data.Linq.Table<Sales_ContactCreditCard> Sales_ContactCreditCard
	{
		get
		{
			return this.GetTable<Sales_ContactCreditCard>();
		}
	}
	
	public System.Data.Linq.Table<Person_ContactType> Person_ContactType
	{
		get
		{
			return this.GetTable<Person_ContactType>();
		}
	}
	
	public System.Data.Linq.Table<Person_CountryRegion> Person_CountryRegion
	{
		get
		{
			return this.GetTable<Person_CountryRegion>();
		}
	}
	
	public System.Data.Linq.Table<Sales_CountryRegionCurrency> Sales_CountryRegionCurrency
	{
		get
		{
			return this.GetTable<Sales_CountryRegionCurrency>();
		}
	}
	
	public System.Data.Linq.Table<Sales_CreditCard> Sales_CreditCard
	{
		get
		{
			return this.GetTable<Sales_CreditCard>();
		}
	}
	
	public System.Data.Linq.Table<Production_Culture> Production_Culture
	{
		get
		{
			return this.GetTable<Production_Culture>();
		}
	}
	
	public System.Data.Linq.Table<Sales_Currency> Sales_Currency
	{
		get
		{
			return this.GetTable<Sales_Currency>();
		}
	}
	
	public System.Data.Linq.Table<Sales_CurrencyRate> Sales_CurrencyRate
	{
		get
		{
			return this.GetTable<Sales_CurrencyRate>();
		}
	}
	
	public System.Data.Linq.Table<Sales_Customer> Sales_Customer
	{
		get
		{
			return this.GetTable<Sales_Customer>();
		}
	}
	
	public System.Data.Linq.Table<Sales_CustomerAddress> Sales_CustomerAddress
	{
		get
		{
			return this.GetTable<Sales_CustomerAddress>();
		}
	}
	
	public System.Data.Linq.Table<DatabaseLog> DatabaseLog
	{
		get
		{
			return this.GetTable<DatabaseLog>();
		}
	}
	
	public System.Data.Linq.Table<HumanResources_Department> HumanResources_Department
	{
		get
		{
			return this.GetTable<HumanResources_Department>();
		}
	}
	
	public System.Data.Linq.Table<Production_Document> Production_Document
	{
		get
		{
			return this.GetTable<Production_Document>();
		}
	}
	
	public System.Data.Linq.Table<HumanResources_Employee> HumanResources_Employee
	{
		get
		{
			return this.GetTable<HumanResources_Employee>();
		}
	}
	
	public System.Data.Linq.Table<HumanResources_EmployeeAddress> HumanResources_EmployeeAddress
	{
		get
		{
			return this.GetTable<HumanResources_EmployeeAddress>();
		}
	}
	
	public System.Data.Linq.Table<HumanResources_EmployeeDepartmentHistory> HumanResources_EmployeeDepartmentHistory
	{
		get
		{
			return this.GetTable<HumanResources_EmployeeDepartmentHistory>();
		}
	}
	
	public System.Data.Linq.Table<HumanResources_EmployeePayHistory> HumanResources_EmployeePayHistory
	{
		get
		{
			return this.GetTable<HumanResources_EmployeePayHistory>();
		}
	}
	
	public System.Data.Linq.Table<ErrorLog> ErrorLog
	{
		get
		{
			return this.GetTable<ErrorLog>();
		}
	}
	
	public System.Data.Linq.Table<Production_Illustration> Production_Illustration
	{
		get
		{
			return this.GetTable<Production_Illustration>();
		}
	}
	
	public System.Data.Linq.Table<Sales_Individual> Sales_Individual
	{
		get
		{
			return this.GetTable<Sales_Individual>();
		}
	}
	
	public System.Data.Linq.Table<HumanResources_JobCandidate> HumanResources_JobCandidate
	{
		get
		{
			return this.GetTable<HumanResources_JobCandidate>();
		}
	}
	
	public System.Data.Linq.Table<Production_Location> Production_Location
	{
		get
		{
			return this.GetTable<Production_Location>();
		}
	}
	
	public System.Data.Linq.Table<Production_Product> Production_Product
	{
		get
		{
			return this.GetTable<Production_Product>();
		}
	}
	
	public System.Data.Linq.Table<Production_ProductCategory> Production_ProductCategory
	{
		get
		{
			return this.GetTable<Production_ProductCategory>();
		}
	}
	
	public System.Data.Linq.Table<Production_ProductCostHistory> Production_ProductCostHistory
	{
		get
		{
			return this.GetTable<Production_ProductCostHistory>();
		}
	}
	
	public System.Data.Linq.Table<Production_ProductDescription> Production_ProductDescription
	{
		get
		{
			return this.GetTable<Production_ProductDescription>();
		}
	}
	
	public System.Data.Linq.Table<Production_ProductDocument> Production_ProductDocument
	{
		get
		{
			return this.GetTable<Production_ProductDocument>();
		}
	}
	
	public System.Data.Linq.Table<Production_ProductInventory> Production_ProductInventory
	{
		get
		{
			return this.GetTable<Production_ProductInventory>();
		}
	}
	
	public System.Data.Linq.Table<Production_ProductListPriceHistory> Production_ProductListPriceHistory
	{
		get
		{
			return this.GetTable<Production_ProductListPriceHistory>();
		}
	}
	
	public System.Data.Linq.Table<Production_ProductModel> Production_ProductModel
	{
		get
		{
			return this.GetTable<Production_ProductModel>();
		}
	}
	
	public System.Data.Linq.Table<Production_ProductModelIllustration> Production_ProductModelIllustration
	{
		get
		{
			return this.GetTable<Production_ProductModelIllustration>();
		}
	}
	
	public System.Data.Linq.Table<Production_ProductModelProductDescriptionCulture> Production_ProductModelProductDescriptionCulture
	{
		get
		{
			return this.GetTable<Production_ProductModelProductDescriptionCulture>();
		}
	}
	
	public System.Data.Linq.Table<Production_ProductPhoto> Production_ProductPhoto
	{
		get
		{
			return this.GetTable<Production_ProductPhoto>();
		}
	}
	
	public System.Data.Linq.Table<Production_ProductProductPhoto> Production_ProductProductPhoto
	{
		get
		{
			return this.GetTable<Production_ProductProductPhoto>();
		}
	}
	
	public System.Data.Linq.Table<Production_ProductReview> Production_ProductReview
	{
		get
		{
			return this.GetTable<Production_ProductReview>();
		}
	}
	
	public System.Data.Linq.Table<Production_ProductSubcategory> Production_ProductSubcategory
	{
		get
		{
			return this.GetTable<Production_ProductSubcategory>();
		}
	}
	
	public System.Data.Linq.Table<Purchasing_ProductVendor> Purchasing_ProductVendor
	{
		get
		{
			return this.GetTable<Purchasing_ProductVendor>();
		}
	}
	
	public System.Data.Linq.Table<Purchasing_PurchaseOrderDetail> Purchasing_PurchaseOrderDetail
	{
		get
		{
			return this.GetTable<Purchasing_PurchaseOrderDetail>();
		}
	}
	
	public System.Data.Linq.Table<Purchasing_PurchaseOrderHeader> Purchasing_PurchaseOrderHeader
	{
		get
		{
			return this.GetTable<Purchasing_PurchaseOrderHeader>();
		}
	}
	
	public System.Data.Linq.Table<Sales_SalesOrderDetail> Sales_SalesOrderDetail
	{
		get
		{
			return this.GetTable<Sales_SalesOrderDetail>();
		}
	}
	
	public System.Data.Linq.Table<Sales_SalesOrderHeader> Sales_SalesOrderHeader
	{
		get
		{
			return this.GetTable<Sales_SalesOrderHeader>();
		}
	}
	
	public System.Data.Linq.Table<Sales_SalesOrderHeaderSalesReason> Sales_SalesOrderHeaderSalesReason
	{
		get
		{
			return this.GetTable<Sales_SalesOrderHeaderSalesReason>();
		}
	}
	
	public System.Data.Linq.Table<Sales_SalesPerson> Sales_SalesPerson
	{
		get
		{
			return this.GetTable<Sales_SalesPerson>();
		}
	}
	
	public System.Data.Linq.Table<Sales_SalesPersonQuotaHistory> Sales_SalesPersonQuotaHistory
	{
		get
		{
			return this.GetTable<Sales_SalesPersonQuotaHistory>();
		}
	}
	
	public System.Data.Linq.Table<Sales_SalesReason> Sales_SalesReason
	{
		get
		{
			return this.GetTable<Sales_SalesReason>();
		}
	}
	
	public System.Data.Linq.Table<Sales_SalesTaxRate> Sales_SalesTaxRate
	{
		get
		{
			return this.GetTable<Sales_SalesTaxRate>();
		}
	}
	
	public System.Data.Linq.Table<Sales_SalesTerritory> Sales_SalesTerritory
	{
		get
		{
			return this.GetTable<Sales_SalesTerritory>();
		}
	}
	
	public System.Data.Linq.Table<Sales_SalesTerritoryHistory> Sales_SalesTerritoryHistory
	{
		get
		{
			return this.GetTable<Sales_SalesTerritoryHistory>();
		}
	}
	
	public System.Data.Linq.Table<Production_ScrapReason> Production_ScrapReason
	{
		get
		{
			return this.GetTable<Production_ScrapReason>();
		}
	}
	
	public System.Data.Linq.Table<HumanResources_Shift> HumanResources_Shift
	{
		get
		{
			return this.GetTable<HumanResources_Shift>();
		}
	}
	
	public System.Data.Linq.Table<Purchasing_ShipMethod> Purchasing_ShipMethod
	{
		get
		{
			return this.GetTable<Purchasing_ShipMethod>();
		}
	}
	
	public System.Data.Linq.Table<Sales_ShoppingCartItem> Sales_ShoppingCartItem
	{
		get
		{
			return this.GetTable<Sales_ShoppingCartItem>();
		}
	}
	
	public System.Data.Linq.Table<Sales_SpecialOffer> Sales_SpecialOffer
	{
		get
		{
			return this.GetTable<Sales_SpecialOffer>();
		}
	}
	
	public System.Data.Linq.Table<Sales_SpecialOfferProduct> Sales_SpecialOfferProduct
	{
		get
		{
			return this.GetTable<Sales_SpecialOfferProduct>();
		}
	}
	
	public System.Data.Linq.Table<Person_StateProvince> Person_StateProvince
	{
		get
		{
			return this.GetTable<Person_StateProvince>();
		}
	}
	
	public System.Data.Linq.Table<Sales_Store> Sales_Store
	{
		get
		{
			return this.GetTable<Sales_Store>();
		}
	}
	
	public System.Data.Linq.Table<Sales_StoreContact> Sales_StoreContact
	{
		get
		{
			return this.GetTable<Sales_StoreContact>();
		}
	}
	
	public System.Data.Linq.Table<Production_TransactionHistory> Production_TransactionHistory
	{
		get
		{
			return this.GetTable<Production_TransactionHistory>();
		}
	}
	
	public System.Data.Linq.Table<Production_TransactionHistoryArchive> Production_TransactionHistoryArchive
	{
		get
		{
			return this.GetTable<Production_TransactionHistoryArchive>();
		}
	}
	
	public System.Data.Linq.Table<Production_UnitMeasure> Production_UnitMeasure
	{
		get
		{
			return this.GetTable<Production_UnitMeasure>();
		}
	}
	
	public System.Data.Linq.Table<Purchasing_Vendor> Purchasing_Vendor
	{
		get
		{
			return this.GetTable<Purchasing_Vendor>();
		}
	}
	
	public System.Data.Linq.Table<Purchasing_VendorAddress> Purchasing_VendorAddress
	{
		get
		{
			return this.GetTable<Purchasing_VendorAddress>();
		}
	}
	
	public System.Data.Linq.Table<Purchasing_VendorContact> Purchasing_VendorContact
	{
		get
		{
			return this.GetTable<Purchasing_VendorContact>();
		}
	}
	
	public System.Data.Linq.Table<Production_WorkOrder> Production_WorkOrder
	{
		get
		{
			return this.GetTable<Production_WorkOrder>();
		}
	}
	
	public System.Data.Linq.Table<Production_WorkOrderRouting> Production_WorkOrderRouting
	{
		get
		{
			return this.GetTable<Production_WorkOrderRouting>();
		}
	}
}

public partial class Person_Address : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _AddressID;
	
	private string _AddressLine1;
	
	private string _AddressLine2;
	
	private string _City;
	
	private int _StateProvinceID;
	
	private string _PostalCode;
	
	private System.Guid _Rowguid;
	
	private System.DateTime _ModifiedDate;
	
	private EntitySet<HumanResources_EmployeeAddress> _HumanResources_EmployeeAddress;
	
	private EntityRef<Person_StateProvince> _Person_StateProvince;
	
	private EntitySet<Purchasing_VendorAddress> _Purchasing_VendorAddress;
	
	private EntitySet<Sales_CustomerAddress> _Sales_CustomerAddress;
	
	private EntitySet<Sales_SalesOrderHeader> _Sales_SalesOrderHeader;
	
	private EntitySet<Sales_SalesOrderHeader> _Address;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAddressIDChanging(int value);
    partial void OnAddressIDChanged();
    partial void OnAddressLine1Changing(string value);
    partial void OnAddressLine1Changed();
    partial void OnAddressLine2Changing(string value);
    partial void OnAddressLine2Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateProvinceIDChanging(int value);
    partial void OnStateProvinceIDChanged();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    partial void OnRowguidChanging(System.Guid value);
    partial void OnRowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Person_Address()
	{
		this._HumanResources_EmployeeAddress = new EntitySet<HumanResources_EmployeeAddress>(new Action<HumanResources_EmployeeAddress>(this.attach_HumanResources_EmployeeAddress), new Action<HumanResources_EmployeeAddress>(this.detach_HumanResources_EmployeeAddress));
		this._Person_StateProvince = default(EntityRef<Person_StateProvince>);
		this._Purchasing_VendorAddress = new EntitySet<Purchasing_VendorAddress>(new Action<Purchasing_VendorAddress>(this.attach_Purchasing_VendorAddress), new Action<Purchasing_VendorAddress>(this.detach_Purchasing_VendorAddress));
		this._Sales_CustomerAddress = new EntitySet<Sales_CustomerAddress>(new Action<Sales_CustomerAddress>(this.attach_Sales_CustomerAddress), new Action<Sales_CustomerAddress>(this.detach_Sales_CustomerAddress));
		this._Sales_SalesOrderHeader = new EntitySet<Sales_SalesOrderHeader>(new Action<Sales_SalesOrderHeader>(this.attach_Sales_SalesOrderHeader), new Action<Sales_SalesOrderHeader>(this.detach_Sales_SalesOrderHeader));
		this._Address = new EntitySet<Sales_SalesOrderHeader>(new Action<Sales_SalesOrderHeader>(this.attach_Address), new Action<Sales_SalesOrderHeader>(this.detach_Address));
		OnCreated();
	}
	
	public int AddressID
	{
		get
		{
			return this._AddressID;
		}
		set
		{
			if ((this._AddressID != value))
			{
				this.OnAddressIDChanging(value);
				this.SendPropertyChanging();
				this._AddressID = value;
				this.SendPropertyChanged("AddressID");
				this.OnAddressIDChanged();
			}
		}
	}
	
	public string AddressLine1
	{
		get
		{
			return this._AddressLine1;
		}
		set
		{
			if ((this._AddressLine1 != value))
			{
				this.OnAddressLine1Changing(value);
				this.SendPropertyChanging();
				this._AddressLine1 = value;
				this.SendPropertyChanged("AddressLine1");
				this.OnAddressLine1Changed();
			}
		}
	}
	
	public string AddressLine2
	{
		get
		{
			return this._AddressLine2;
		}
		set
		{
			if ((this._AddressLine2 != value))
			{
				this.OnAddressLine2Changing(value);
				this.SendPropertyChanging();
				this._AddressLine2 = value;
				this.SendPropertyChanged("AddressLine2");
				this.OnAddressLine2Changed();
			}
		}
	}
	
	public string City
	{
		get
		{
			return this._City;
		}
		set
		{
			if ((this._City != value))
			{
				this.OnCityChanging(value);
				this.SendPropertyChanging();
				this._City = value;
				this.SendPropertyChanged("City");
				this.OnCityChanged();
			}
		}
	}
	
	public int StateProvinceID
	{
		get
		{
			return this._StateProvinceID;
		}
		set
		{
			if ((this._StateProvinceID != value))
			{
				if (this._Person_StateProvince.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnStateProvinceIDChanging(value);
				this.SendPropertyChanging();
				this._StateProvinceID = value;
				this.SendPropertyChanged("StateProvinceID");
				this.OnStateProvinceIDChanged();
			}
		}
	}
	
	public string PostalCode
	{
		get
		{
			return this._PostalCode;
		}
		set
		{
			if ((this._PostalCode != value))
			{
				this.OnPostalCodeChanging(value);
				this.SendPropertyChanging();
				this._PostalCode = value;
				this.SendPropertyChanged("PostalCode");
				this.OnPostalCodeChanged();
			}
		}
	}
	
	public System.Guid Rowguid
	{
		get
		{
			return this._Rowguid;
		}
		set
		{
			if ((this._Rowguid != value))
			{
				this.OnRowguidChanging(value);
				this.SendPropertyChanging();
				this._Rowguid = value;
				this.SendPropertyChanged("Rowguid");
				this.OnRowguidChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public EntitySet<HumanResources_EmployeeAddress> HumanResources_EmployeeAddress
	{
		get
		{
			return this._HumanResources_EmployeeAddress;
		}
		set
		{
			this._HumanResources_EmployeeAddress.Assign(value);
		}
	}
	
	public Person_StateProvince Person_StateProvince
	{
		get
		{
			return this._Person_StateProvince.Entity;
		}
		set
		{
			Person_StateProvince previousValue = this._Person_StateProvince.Entity;
			if (((previousValue != value) 
						|| (this._Person_StateProvince.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Person_StateProvince.Entity = null;
					previousValue.Person_Address.Remove(this);
				}
				this._Person_StateProvince.Entity = value;
				if ((value != null))
				{
					value.Person_Address.Add(this);
					this._StateProvinceID = value.StateProvinceID;
				}
				else
				{
					this._StateProvinceID = default(int);
				}
				this.SendPropertyChanged("Person_StateProvince");
			}
		}
	}
	
	public EntitySet<Purchasing_VendorAddress> Purchasing_VendorAddress
	{
		get
		{
			return this._Purchasing_VendorAddress;
		}
		set
		{
			this._Purchasing_VendorAddress.Assign(value);
		}
	}
	
	public EntitySet<Sales_CustomerAddress> Sales_CustomerAddress
	{
		get
		{
			return this._Sales_CustomerAddress;
		}
		set
		{
			this._Sales_CustomerAddress.Assign(value);
		}
	}
	
	public EntitySet<Sales_SalesOrderHeader> Sales_SalesOrderHeader
	{
		get
		{
			return this._Sales_SalesOrderHeader;
		}
		set
		{
			this._Sales_SalesOrderHeader.Assign(value);
		}
	}
	
	public EntitySet<Sales_SalesOrderHeader> Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			this._Address.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_HumanResources_EmployeeAddress(HumanResources_EmployeeAddress entity)
	{
		this.SendPropertyChanging();
		entity.Person_Address = this;
	}
	
	private void detach_HumanResources_EmployeeAddress(HumanResources_EmployeeAddress entity)
	{
		this.SendPropertyChanging();
		entity.Person_Address = null;
	}
	
	private void attach_Purchasing_VendorAddress(Purchasing_VendorAddress entity)
	{
		this.SendPropertyChanging();
		entity.Person_Address = this;
	}
	
	private void detach_Purchasing_VendorAddress(Purchasing_VendorAddress entity)
	{
		this.SendPropertyChanging();
		entity.Person_Address = null;
	}
	
	private void attach_Sales_CustomerAddress(Sales_CustomerAddress entity)
	{
		this.SendPropertyChanging();
		entity.Person_Address = this;
	}
	
	private void detach_Sales_CustomerAddress(Sales_CustomerAddress entity)
	{
		this.SendPropertyChanging();
		entity.Person_Address = null;
	}
	
	private void attach_Sales_SalesOrderHeader(Sales_SalesOrderHeader entity)
	{
		this.SendPropertyChanging();
		entity.Person_Address = this;
	}
	
	private void detach_Sales_SalesOrderHeader(Sales_SalesOrderHeader entity)
	{
		this.SendPropertyChanging();
		entity.Person_Address = null;
	}
	
	private void attach_Address(Sales_SalesOrderHeader entity)
	{
		this.SendPropertyChanging();
		entity.ShipToAddress = this;
	}
	
	private void detach_Address(Sales_SalesOrderHeader entity)
	{
		this.SendPropertyChanging();
		entity.ShipToAddress = null;
	}
}

public partial class Person_AddressType : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _AddressTypeID;
	
	private string _Name;
	
	private System.Guid _Rowguid;
	
	private System.DateTime _ModifiedDate;
	
	private EntitySet<Purchasing_VendorAddress> _Purchasing_VendorAddress;
	
	private EntitySet<Sales_CustomerAddress> _Sales_CustomerAddress;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAddressTypeIDChanging(int value);
    partial void OnAddressTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnRowguidChanging(System.Guid value);
    partial void OnRowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Person_AddressType()
	{
		this._Purchasing_VendorAddress = new EntitySet<Purchasing_VendorAddress>(new Action<Purchasing_VendorAddress>(this.attach_Purchasing_VendorAddress), new Action<Purchasing_VendorAddress>(this.detach_Purchasing_VendorAddress));
		this._Sales_CustomerAddress = new EntitySet<Sales_CustomerAddress>(new Action<Sales_CustomerAddress>(this.attach_Sales_CustomerAddress), new Action<Sales_CustomerAddress>(this.detach_Sales_CustomerAddress));
		OnCreated();
	}
	
	public int AddressTypeID
	{
		get
		{
			return this._AddressTypeID;
		}
		set
		{
			if ((this._AddressTypeID != value))
			{
				this.OnAddressTypeIDChanging(value);
				this.SendPropertyChanging();
				this._AddressTypeID = value;
				this.SendPropertyChanged("AddressTypeID");
				this.OnAddressTypeIDChanged();
			}
		}
	}
	
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	public System.Guid Rowguid
	{
		get
		{
			return this._Rowguid;
		}
		set
		{
			if ((this._Rowguid != value))
			{
				this.OnRowguidChanging(value);
				this.SendPropertyChanging();
				this._Rowguid = value;
				this.SendPropertyChanged("Rowguid");
				this.OnRowguidChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public EntitySet<Purchasing_VendorAddress> Purchasing_VendorAddress
	{
		get
		{
			return this._Purchasing_VendorAddress;
		}
		set
		{
			this._Purchasing_VendorAddress.Assign(value);
		}
	}
	
	public EntitySet<Sales_CustomerAddress> Sales_CustomerAddress
	{
		get
		{
			return this._Sales_CustomerAddress;
		}
		set
		{
			this._Sales_CustomerAddress.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Purchasing_VendorAddress(Purchasing_VendorAddress entity)
	{
		this.SendPropertyChanging();
		entity.Person_AddressType = this;
	}
	
	private void detach_Purchasing_VendorAddress(Purchasing_VendorAddress entity)
	{
		this.SendPropertyChanging();
		entity.Person_AddressType = null;
	}
	
	private void attach_Sales_CustomerAddress(Sales_CustomerAddress entity)
	{
		this.SendPropertyChanging();
		entity.Person_AddressType = this;
	}
	
	private void detach_Sales_CustomerAddress(Sales_CustomerAddress entity)
	{
		this.SendPropertyChanging();
		entity.Person_AddressType = null;
	}
}

public partial class AWBuildVersion : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private byte _SystemInformationID;
	
	private string _DatabaseVersion;
	
	private System.DateTime _VersionDate;
	
	private System.DateTime _ModifiedDate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSystemInformationIDChanging(byte value);
    partial void OnSystemInformationIDChanged();
    partial void OnDatabaseVersionChanging(string value);
    partial void OnDatabaseVersionChanged();
    partial void OnVersionDateChanging(System.DateTime value);
    partial void OnVersionDateChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public AWBuildVersion()
	{
		OnCreated();
	}
	
	public byte SystemInformationID
	{
		get
		{
			return this._SystemInformationID;
		}
		set
		{
			if ((this._SystemInformationID != value))
			{
				this.OnSystemInformationIDChanging(value);
				this.SendPropertyChanging();
				this._SystemInformationID = value;
				this.SendPropertyChanged("SystemInformationID");
				this.OnSystemInformationIDChanged();
			}
		}
	}
	
	public string DatabaseVersion
	{
		get
		{
			return this._DatabaseVersion;
		}
		set
		{
			if ((this._DatabaseVersion != value))
			{
				this.OnDatabaseVersionChanging(value);
				this.SendPropertyChanging();
				this._DatabaseVersion = value;
				this.SendPropertyChanged("DatabaseVersion");
				this.OnDatabaseVersionChanged();
			}
		}
	}
	
	public System.DateTime VersionDate
	{
		get
		{
			return this._VersionDate;
		}
		set
		{
			if ((this._VersionDate != value))
			{
				this.OnVersionDateChanging(value);
				this.SendPropertyChanging();
				this._VersionDate = value;
				this.SendPropertyChanged("VersionDate");
				this.OnVersionDateChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

public partial class Production_BillOfMaterials : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _BillOfMaterialsID;
	
	private System.Nullable<int> _ProductAssemblyID;
	
	private int _ComponentID;
	
	private System.DateTime _StartDate;
	
	private System.Nullable<System.DateTime> _EndDate;
	
	private string _UnitMeasureCode;
	
	private short _BOMLevel;
	
	private decimal _PerAssemblyQty;
	
	private System.DateTime _ModifiedDate;
	
	private EntityRef<Production_Product> _Production_Product;
	
	private EntityRef<Production_Product> _ProductAssembly;
	
	private EntityRef<Production_UnitMeasure> _Production_UnitMeasure;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBillOfMaterialsIDChanging(int value);
    partial void OnBillOfMaterialsIDChanged();
    partial void OnProductAssemblyIDChanging(System.Nullable<int> value);
    partial void OnProductAssemblyIDChanged();
    partial void OnComponentIDChanging(int value);
    partial void OnComponentIDChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnUnitMeasureCodeChanging(string value);
    partial void OnUnitMeasureCodeChanged();
    partial void OnBOMLevelChanging(short value);
    partial void OnBOMLevelChanged();
    partial void OnPerAssemblyQtyChanging(decimal value);
    partial void OnPerAssemblyQtyChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Production_BillOfMaterials()
	{
		this._Production_Product = default(EntityRef<Production_Product>);
		this._ProductAssembly = default(EntityRef<Production_Product>);
		this._Production_UnitMeasure = default(EntityRef<Production_UnitMeasure>);
		OnCreated();
	}
	
	public int BillOfMaterialsID
	{
		get
		{
			return this._BillOfMaterialsID;
		}
		set
		{
			if ((this._BillOfMaterialsID != value))
			{
				this.OnBillOfMaterialsIDChanging(value);
				this.SendPropertyChanging();
				this._BillOfMaterialsID = value;
				this.SendPropertyChanged("BillOfMaterialsID");
				this.OnBillOfMaterialsIDChanged();
			}
		}
	}
	
	public System.Nullable<int> ProductAssemblyID
	{
		get
		{
			return this._ProductAssemblyID;
		}
		set
		{
			if ((this._ProductAssemblyID != value))
			{
				if (this._ProductAssembly.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProductAssemblyIDChanging(value);
				this.SendPropertyChanging();
				this._ProductAssemblyID = value;
				this.SendPropertyChanged("ProductAssemblyID");
				this.OnProductAssemblyIDChanged();
			}
		}
	}
	
	public int ComponentID
	{
		get
		{
			return this._ComponentID;
		}
		set
		{
			if ((this._ComponentID != value))
			{
				if (this._Production_Product.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnComponentIDChanging(value);
				this.SendPropertyChanging();
				this._ComponentID = value;
				this.SendPropertyChanged("ComponentID");
				this.OnComponentIDChanged();
			}
		}
	}
	
	public System.DateTime StartDate
	{
		get
		{
			return this._StartDate;
		}
		set
		{
			if ((this._StartDate != value))
			{
				this.OnStartDateChanging(value);
				this.SendPropertyChanging();
				this._StartDate = value;
				this.SendPropertyChanged("StartDate");
				this.OnStartDateChanged();
			}
		}
	}
	
	public System.Nullable<System.DateTime> EndDate
	{
		get
		{
			return this._EndDate;
		}
		set
		{
			if ((this._EndDate != value))
			{
				this.OnEndDateChanging(value);
				this.SendPropertyChanging();
				this._EndDate = value;
				this.SendPropertyChanged("EndDate");
				this.OnEndDateChanged();
			}
		}
	}
	
	public string UnitMeasureCode
	{
		get
		{
			return this._UnitMeasureCode;
		}
		set
		{
			if ((this._UnitMeasureCode != value))
			{
				if (this._Production_UnitMeasure.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUnitMeasureCodeChanging(value);
				this.SendPropertyChanging();
				this._UnitMeasureCode = value;
				this.SendPropertyChanged("UnitMeasureCode");
				this.OnUnitMeasureCodeChanged();
			}
		}
	}
	
	public short BOMLevel
	{
		get
		{
			return this._BOMLevel;
		}
		set
		{
			if ((this._BOMLevel != value))
			{
				this.OnBOMLevelChanging(value);
				this.SendPropertyChanging();
				this._BOMLevel = value;
				this.SendPropertyChanged("BOMLevel");
				this.OnBOMLevelChanged();
			}
		}
	}
	
	public decimal PerAssemblyQty
	{
		get
		{
			return this._PerAssemblyQty;
		}
		set
		{
			if ((this._PerAssemblyQty != value))
			{
				this.OnPerAssemblyQtyChanging(value);
				this.SendPropertyChanging();
				this._PerAssemblyQty = value;
				this.SendPropertyChanged("PerAssemblyQty");
				this.OnPerAssemblyQtyChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public Production_Product Production_Product
	{
		get
		{
			return this._Production_Product.Entity;
		}
		set
		{
			Production_Product previousValue = this._Production_Product.Entity;
			if (((previousValue != value) 
						|| (this._Production_Product.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Production_Product.Entity = null;
					previousValue.Production_BillOfMaterials.Remove(this);
				}
				this._Production_Product.Entity = value;
				if ((value != null))
				{
					value.Production_BillOfMaterials.Add(this);
					this._ComponentID = value.ProductID;
				}
				else
				{
					this._ComponentID = default(int);
				}
				this.SendPropertyChanged("Production_Product");
			}
		}
	}
	
	public Production_Product ProductAssembly
	{
		get
		{
			return this._ProductAssembly.Entity;
		}
		set
		{
			Production_Product previousValue = this._ProductAssembly.Entity;
			if (((previousValue != value) 
						|| (this._ProductAssembly.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ProductAssembly.Entity = null;
					previousValue.Product.Remove(this);
				}
				this._ProductAssembly.Entity = value;
				if ((value != null))
				{
					value.Product.Add(this);
					this._ProductAssemblyID = value.ProductID;
				}
				else
				{
					this._ProductAssemblyID = default(Nullable<int>);
				}
				this.SendPropertyChanged("ProductAssembly");
			}
		}
	}
	
	public Production_UnitMeasure Production_UnitMeasure
	{
		get
		{
			return this._Production_UnitMeasure.Entity;
		}
		set
		{
			Production_UnitMeasure previousValue = this._Production_UnitMeasure.Entity;
			if (((previousValue != value) 
						|| (this._Production_UnitMeasure.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Production_UnitMeasure.Entity = null;
					previousValue.Production_BillOfMaterials.Remove(this);
				}
				this._Production_UnitMeasure.Entity = value;
				if ((value != null))
				{
					value.Production_BillOfMaterials.Add(this);
					this._UnitMeasureCode = value.UnitMeasureCode;
				}
				else
				{
					this._UnitMeasureCode = default(string);
				}
				this.SendPropertyChanged("Production_UnitMeasure");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

public partial class Person_Contact : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ContactID;
	
	private bool _NameStyle;
	
	private string _Title;
	
	private string _FirstName;
	
	private string _MiddleName;
	
	private string _LastName;
	
	private string _Suffix;
	
	private string _EmailAddress;
	
	private int _EmailPromotion;
	
	private string _Phone;
	
	private string _PasswordHash;
	
	private string _PasswordSalt;
	
	private System.Xml.Linq.XElement _AdditionalContactInfo;
	
	private System.Guid _Rowguid;
	
	private System.DateTime _ModifiedDate;
	
	private EntitySet<HumanResources_Employee> _HumanResources_Employee;
	
	private EntitySet<Purchasing_VendorContact> _Purchasing_VendorContact;
	
	private EntitySet<Sales_ContactCreditCard> _Sales_ContactCreditCard;
	
	private EntitySet<Sales_Individual> _Sales_Individual;
	
	private EntitySet<Sales_SalesOrderHeader> _Sales_SalesOrderHeader;
	
	private EntitySet<Sales_StoreContact> _Sales_StoreContact;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContactIDChanging(int value);
    partial void OnContactIDChanged();
    partial void OnNameStyleChanging(bool value);
    partial void OnNameStyleChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnSuffixChanging(string value);
    partial void OnSuffixChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnEmailPromotionChanging(int value);
    partial void OnEmailPromotionChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnPasswordHashChanging(string value);
    partial void OnPasswordHashChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnAdditionalContactInfoChanging(System.Xml.Linq.XElement value);
    partial void OnAdditionalContactInfoChanged();
    partial void OnRowguidChanging(System.Guid value);
    partial void OnRowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Person_Contact()
	{
		this._HumanResources_Employee = new EntitySet<HumanResources_Employee>(new Action<HumanResources_Employee>(this.attach_HumanResources_Employee), new Action<HumanResources_Employee>(this.detach_HumanResources_Employee));
		this._Purchasing_VendorContact = new EntitySet<Purchasing_VendorContact>(new Action<Purchasing_VendorContact>(this.attach_Purchasing_VendorContact), new Action<Purchasing_VendorContact>(this.detach_Purchasing_VendorContact));
		this._Sales_ContactCreditCard = new EntitySet<Sales_ContactCreditCard>(new Action<Sales_ContactCreditCard>(this.attach_Sales_ContactCreditCard), new Action<Sales_ContactCreditCard>(this.detach_Sales_ContactCreditCard));
		this._Sales_Individual = new EntitySet<Sales_Individual>(new Action<Sales_Individual>(this.attach_Sales_Individual), new Action<Sales_Individual>(this.detach_Sales_Individual));
		this._Sales_SalesOrderHeader = new EntitySet<Sales_SalesOrderHeader>(new Action<Sales_SalesOrderHeader>(this.attach_Sales_SalesOrderHeader), new Action<Sales_SalesOrderHeader>(this.detach_Sales_SalesOrderHeader));
		this._Sales_StoreContact = new EntitySet<Sales_StoreContact>(new Action<Sales_StoreContact>(this.attach_Sales_StoreContact), new Action<Sales_StoreContact>(this.detach_Sales_StoreContact));
		OnCreated();
	}
	
	public int ContactID
	{
		get
		{
			return this._ContactID;
		}
		set
		{
			if ((this._ContactID != value))
			{
				this.OnContactIDChanging(value);
				this.SendPropertyChanging();
				this._ContactID = value;
				this.SendPropertyChanged("ContactID");
				this.OnContactIDChanged();
			}
		}
	}
	
	public bool NameStyle
	{
		get
		{
			return this._NameStyle;
		}
		set
		{
			if ((this._NameStyle != value))
			{
				this.OnNameStyleChanging(value);
				this.SendPropertyChanging();
				this._NameStyle = value;
				this.SendPropertyChanged("NameStyle");
				this.OnNameStyleChanged();
			}
		}
	}
	
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	public string FirstName
	{
		get
		{
			return this._FirstName;
		}
		set
		{
			if ((this._FirstName != value))
			{
				this.OnFirstNameChanging(value);
				this.SendPropertyChanging();
				this._FirstName = value;
				this.SendPropertyChanged("FirstName");
				this.OnFirstNameChanged();
			}
		}
	}
	
	public string MiddleName
	{
		get
		{
			return this._MiddleName;
		}
		set
		{
			if ((this._MiddleName != value))
			{
				this.OnMiddleNameChanging(value);
				this.SendPropertyChanging();
				this._MiddleName = value;
				this.SendPropertyChanged("MiddleName");
				this.OnMiddleNameChanged();
			}
		}
	}
	
	public string LastName
	{
		get
		{
			return this._LastName;
		}
		set
		{
			if ((this._LastName != value))
			{
				this.OnLastNameChanging(value);
				this.SendPropertyChanging();
				this._LastName = value;
				this.SendPropertyChanged("LastName");
				this.OnLastNameChanged();
			}
		}
	}
	
	public string Suffix
	{
		get
		{
			return this._Suffix;
		}
		set
		{
			if ((this._Suffix != value))
			{
				this.OnSuffixChanging(value);
				this.SendPropertyChanging();
				this._Suffix = value;
				this.SendPropertyChanged("Suffix");
				this.OnSuffixChanged();
			}
		}
	}
	
	public string EmailAddress
	{
		get
		{
			return this._EmailAddress;
		}
		set
		{
			if ((this._EmailAddress != value))
			{
				this.OnEmailAddressChanging(value);
				this.SendPropertyChanging();
				this._EmailAddress = value;
				this.SendPropertyChanged("EmailAddress");
				this.OnEmailAddressChanged();
			}
		}
	}
	
	public int EmailPromotion
	{
		get
		{
			return this._EmailPromotion;
		}
		set
		{
			if ((this._EmailPromotion != value))
			{
				this.OnEmailPromotionChanging(value);
				this.SendPropertyChanging();
				this._EmailPromotion = value;
				this.SendPropertyChanged("EmailPromotion");
				this.OnEmailPromotionChanged();
			}
		}
	}
	
	public string Phone
	{
		get
		{
			return this._Phone;
		}
		set
		{
			if ((this._Phone != value))
			{
				this.OnPhoneChanging(value);
				this.SendPropertyChanging();
				this._Phone = value;
				this.SendPropertyChanged("Phone");
				this.OnPhoneChanged();
			}
		}
	}
	
	public string PasswordHash
	{
		get
		{
			return this._PasswordHash;
		}
		set
		{
			if ((this._PasswordHash != value))
			{
				this.OnPasswordHashChanging(value);
				this.SendPropertyChanging();
				this._PasswordHash = value;
				this.SendPropertyChanged("PasswordHash");
				this.OnPasswordHashChanged();
			}
		}
	}
	
	public string PasswordSalt
	{
		get
		{
			return this._PasswordSalt;
		}
		set
		{
			if ((this._PasswordSalt != value))
			{
				this.OnPasswordSaltChanging(value);
				this.SendPropertyChanging();
				this._PasswordSalt = value;
				this.SendPropertyChanged("PasswordSalt");
				this.OnPasswordSaltChanged();
			}
		}
	}
	
	public System.Xml.Linq.XElement AdditionalContactInfo
	{
		get
		{
			return this._AdditionalContactInfo;
		}
		set
		{
			if ((this._AdditionalContactInfo != value))
			{
				this.OnAdditionalContactInfoChanging(value);
				this.SendPropertyChanging();
				this._AdditionalContactInfo = value;
				this.SendPropertyChanged("AdditionalContactInfo");
				this.OnAdditionalContactInfoChanged();
			}
		}
	}
	
	public System.Guid Rowguid
	{
		get
		{
			return this._Rowguid;
		}
		set
		{
			if ((this._Rowguid != value))
			{
				this.OnRowguidChanging(value);
				this.SendPropertyChanging();
				this._Rowguid = value;
				this.SendPropertyChanged("Rowguid");
				this.OnRowguidChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public EntitySet<HumanResources_Employee> HumanResources_Employee
	{
		get
		{
			return this._HumanResources_Employee;
		}
		set
		{
			this._HumanResources_Employee.Assign(value);
		}
	}
	
	public EntitySet<Purchasing_VendorContact> Purchasing_VendorContact
	{
		get
		{
			return this._Purchasing_VendorContact;
		}
		set
		{
			this._Purchasing_VendorContact.Assign(value);
		}
	}
	
	public EntitySet<Sales_ContactCreditCard> Sales_ContactCreditCard
	{
		get
		{
			return this._Sales_ContactCreditCard;
		}
		set
		{
			this._Sales_ContactCreditCard.Assign(value);
		}
	}
	
	public EntitySet<Sales_Individual> Sales_Individual
	{
		get
		{
			return this._Sales_Individual;
		}
		set
		{
			this._Sales_Individual.Assign(value);
		}
	}
	
	public EntitySet<Sales_SalesOrderHeader> Sales_SalesOrderHeader
	{
		get
		{
			return this._Sales_SalesOrderHeader;
		}
		set
		{
			this._Sales_SalesOrderHeader.Assign(value);
		}
	}
	
	public EntitySet<Sales_StoreContact> Sales_StoreContact
	{
		get
		{
			return this._Sales_StoreContact;
		}
		set
		{
			this._Sales_StoreContact.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_HumanResources_Employee(HumanResources_Employee entity)
	{
		this.SendPropertyChanging();
		entity.Person_Contact = this;
	}
	
	private void detach_HumanResources_Employee(HumanResources_Employee entity)
	{
		this.SendPropertyChanging();
		entity.Person_Contact = null;
	}
	
	private void attach_Purchasing_VendorContact(Purchasing_VendorContact entity)
	{
		this.SendPropertyChanging();
		entity.Person_Contact = this;
	}
	
	private void detach_Purchasing_VendorContact(Purchasing_VendorContact entity)
	{
		this.SendPropertyChanging();
		entity.Person_Contact = null;
	}
	
	private void attach_Sales_ContactCreditCard(Sales_ContactCreditCard entity)
	{
		this.SendPropertyChanging();
		entity.Person_Contact = this;
	}
	
	private void detach_Sales_ContactCreditCard(Sales_ContactCreditCard entity)
	{
		this.SendPropertyChanging();
		entity.Person_Contact = null;
	}
	
	private void attach_Sales_Individual(Sales_Individual entity)
	{
		this.SendPropertyChanging();
		entity.Person_Contact = this;
	}
	
	private void detach_Sales_Individual(Sales_Individual entity)
	{
		this.SendPropertyChanging();
		entity.Person_Contact = null;
	}
	
	private void attach_Sales_SalesOrderHeader(Sales_SalesOrderHeader entity)
	{
		this.SendPropertyChanging();
		entity.Person_Contact = this;
	}
	
	private void detach_Sales_SalesOrderHeader(Sales_SalesOrderHeader entity)
	{
		this.SendPropertyChanging();
		entity.Person_Contact = null;
	}
	
	private void attach_Sales_StoreContact(Sales_StoreContact entity)
	{
		this.SendPropertyChanging();
		entity.Person_Contact = this;
	}
	
	private void detach_Sales_StoreContact(Sales_StoreContact entity)
	{
		this.SendPropertyChanging();
		entity.Person_Contact = null;
	}
}

public partial class Sales_ContactCreditCard : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ContactID;
	
	private int _CreditCardID;
	
	private System.DateTime _ModifiedDate;
	
	private EntityRef<Person_Contact> _Person_Contact;
	
	private EntityRef<Sales_CreditCard> _Sales_CreditCard;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContactIDChanging(int value);
    partial void OnContactIDChanged();
    partial void OnCreditCardIDChanging(int value);
    partial void OnCreditCardIDChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Sales_ContactCreditCard()
	{
		this._Person_Contact = default(EntityRef<Person_Contact>);
		this._Sales_CreditCard = default(EntityRef<Sales_CreditCard>);
		OnCreated();
	}
	
	public int ContactID
	{
		get
		{
			return this._ContactID;
		}
		set
		{
			if ((this._ContactID != value))
			{
				if (this._Person_Contact.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnContactIDChanging(value);
				this.SendPropertyChanging();
				this._ContactID = value;
				this.SendPropertyChanged("ContactID");
				this.OnContactIDChanged();
			}
		}
	}
	
	public int CreditCardID
	{
		get
		{
			return this._CreditCardID;
		}
		set
		{
			if ((this._CreditCardID != value))
			{
				if (this._Sales_CreditCard.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCreditCardIDChanging(value);
				this.SendPropertyChanging();
				this._CreditCardID = value;
				this.SendPropertyChanged("CreditCardID");
				this.OnCreditCardIDChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public Person_Contact Person_Contact
	{
		get
		{
			return this._Person_Contact.Entity;
		}
		set
		{
			Person_Contact previousValue = this._Person_Contact.Entity;
			if (((previousValue != value) 
						|| (this._Person_Contact.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Person_Contact.Entity = null;
					previousValue.Sales_ContactCreditCard.Remove(this);
				}
				this._Person_Contact.Entity = value;
				if ((value != null))
				{
					value.Sales_ContactCreditCard.Add(this);
					this._ContactID = value.ContactID;
				}
				else
				{
					this._ContactID = default(int);
				}
				this.SendPropertyChanged("Person_Contact");
			}
		}
	}
	
	public Sales_CreditCard Sales_CreditCard
	{
		get
		{
			return this._Sales_CreditCard.Entity;
		}
		set
		{
			Sales_CreditCard previousValue = this._Sales_CreditCard.Entity;
			if (((previousValue != value) 
						|| (this._Sales_CreditCard.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Sales_CreditCard.Entity = null;
					previousValue.Sales_ContactCreditCard.Remove(this);
				}
				this._Sales_CreditCard.Entity = value;
				if ((value != null))
				{
					value.Sales_ContactCreditCard.Add(this);
					this._CreditCardID = value.CreditCardID;
				}
				else
				{
					this._CreditCardID = default(int);
				}
				this.SendPropertyChanged("Sales_CreditCard");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

public partial class Person_ContactType : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ContactTypeID;
	
	private string _Name;
	
	private System.DateTime _ModifiedDate;
	
	private EntitySet<Purchasing_VendorContact> _Purchasing_VendorContact;
	
	private EntitySet<Sales_StoreContact> _Sales_StoreContact;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContactTypeIDChanging(int value);
    partial void OnContactTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Person_ContactType()
	{
		this._Purchasing_VendorContact = new EntitySet<Purchasing_VendorContact>(new Action<Purchasing_VendorContact>(this.attach_Purchasing_VendorContact), new Action<Purchasing_VendorContact>(this.detach_Purchasing_VendorContact));
		this._Sales_StoreContact = new EntitySet<Sales_StoreContact>(new Action<Sales_StoreContact>(this.attach_Sales_StoreContact), new Action<Sales_StoreContact>(this.detach_Sales_StoreContact));
		OnCreated();
	}
	
	public int ContactTypeID
	{
		get
		{
			return this._ContactTypeID;
		}
		set
		{
			if ((this._ContactTypeID != value))
			{
				this.OnContactTypeIDChanging(value);
				this.SendPropertyChanging();
				this._ContactTypeID = value;
				this.SendPropertyChanged("ContactTypeID");
				this.OnContactTypeIDChanged();
			}
		}
	}
	
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public EntitySet<Purchasing_VendorContact> Purchasing_VendorContact
	{
		get
		{
			return this._Purchasing_VendorContact;
		}
		set
		{
			this._Purchasing_VendorContact.Assign(value);
		}
	}
	
	public EntitySet<Sales_StoreContact> Sales_StoreContact
	{
		get
		{
			return this._Sales_StoreContact;
		}
		set
		{
			this._Sales_StoreContact.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Purchasing_VendorContact(Purchasing_VendorContact entity)
	{
		this.SendPropertyChanging();
		entity.Person_ContactType = this;
	}
	
	private void detach_Purchasing_VendorContact(Purchasing_VendorContact entity)
	{
		this.SendPropertyChanging();
		entity.Person_ContactType = null;
	}
	
	private void attach_Sales_StoreContact(Sales_StoreContact entity)
	{
		this.SendPropertyChanging();
		entity.Person_ContactType = this;
	}
	
	private void detach_Sales_StoreContact(Sales_StoreContact entity)
	{
		this.SendPropertyChanging();
		entity.Person_ContactType = null;
	}
}

public partial class Person_CountryRegion : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _CountryRegionCode;
	
	private string _Name;
	
	private System.DateTime _ModifiedDate;
	
	private EntitySet<Person_StateProvince> _Person_StateProvince;
	
	private EntitySet<Sales_CountryRegionCurrency> _Sales_CountryRegionCurrency;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCountryRegionCodeChanging(string value);
    partial void OnCountryRegionCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Person_CountryRegion()
	{
		this._Person_StateProvince = new EntitySet<Person_StateProvince>(new Action<Person_StateProvince>(this.attach_Person_StateProvince), new Action<Person_StateProvince>(this.detach_Person_StateProvince));
		this._Sales_CountryRegionCurrency = new EntitySet<Sales_CountryRegionCurrency>(new Action<Sales_CountryRegionCurrency>(this.attach_Sales_CountryRegionCurrency), new Action<Sales_CountryRegionCurrency>(this.detach_Sales_CountryRegionCurrency));
		OnCreated();
	}
	
	public string CountryRegionCode
	{
		get
		{
			return this._CountryRegionCode;
		}
		set
		{
			if ((this._CountryRegionCode != value))
			{
				this.OnCountryRegionCodeChanging(value);
				this.SendPropertyChanging();
				this._CountryRegionCode = value;
				this.SendPropertyChanged("CountryRegionCode");
				this.OnCountryRegionCodeChanged();
			}
		}
	}
	
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public EntitySet<Person_StateProvince> Person_StateProvince
	{
		get
		{
			return this._Person_StateProvince;
		}
		set
		{
			this._Person_StateProvince.Assign(value);
		}
	}
	
	public EntitySet<Sales_CountryRegionCurrency> Sales_CountryRegionCurrency
	{
		get
		{
			return this._Sales_CountryRegionCurrency;
		}
		set
		{
			this._Sales_CountryRegionCurrency.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Person_StateProvince(Person_StateProvince entity)
	{
		this.SendPropertyChanging();
		entity.Person_CountryRegion = this;
	}
	
	private void detach_Person_StateProvince(Person_StateProvince entity)
	{
		this.SendPropertyChanging();
		entity.Person_CountryRegion = null;
	}
	
	private void attach_Sales_CountryRegionCurrency(Sales_CountryRegionCurrency entity)
	{
		this.SendPropertyChanging();
		entity.Person_CountryRegion = this;
	}
	
	private void detach_Sales_CountryRegionCurrency(Sales_CountryRegionCurrency entity)
	{
		this.SendPropertyChanging();
		entity.Person_CountryRegion = null;
	}
}

public partial class Sales_CountryRegionCurrency : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _CountryRegionCode;
	
	private string _CurrencyCode;
	
	private System.DateTime _ModifiedDate;
	
	private EntityRef<Person_CountryRegion> _Person_CountryRegion;
	
	private EntityRef<Sales_Currency> _Sales_Currency;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCountryRegionCodeChanging(string value);
    partial void OnCountryRegionCodeChanged();
    partial void OnCurrencyCodeChanging(string value);
    partial void OnCurrencyCodeChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Sales_CountryRegionCurrency()
	{
		this._Person_CountryRegion = default(EntityRef<Person_CountryRegion>);
		this._Sales_Currency = default(EntityRef<Sales_Currency>);
		OnCreated();
	}
	
	public string CountryRegionCode
	{
		get
		{
			return this._CountryRegionCode;
		}
		set
		{
			if ((this._CountryRegionCode != value))
			{
				if (this._Person_CountryRegion.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCountryRegionCodeChanging(value);
				this.SendPropertyChanging();
				this._CountryRegionCode = value;
				this.SendPropertyChanged("CountryRegionCode");
				this.OnCountryRegionCodeChanged();
			}
		}
	}
	
	public string CurrencyCode
	{
		get
		{
			return this._CurrencyCode;
		}
		set
		{
			if ((this._CurrencyCode != value))
			{
				if (this._Sales_Currency.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCurrencyCodeChanging(value);
				this.SendPropertyChanging();
				this._CurrencyCode = value;
				this.SendPropertyChanged("CurrencyCode");
				this.OnCurrencyCodeChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public Person_CountryRegion Person_CountryRegion
	{
		get
		{
			return this._Person_CountryRegion.Entity;
		}
		set
		{
			Person_CountryRegion previousValue = this._Person_CountryRegion.Entity;
			if (((previousValue != value) 
						|| (this._Person_CountryRegion.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Person_CountryRegion.Entity = null;
					previousValue.Sales_CountryRegionCurrency.Remove(this);
				}
				this._Person_CountryRegion.Entity = value;
				if ((value != null))
				{
					value.Sales_CountryRegionCurrency.Add(this);
					this._CountryRegionCode = value.CountryRegionCode;
				}
				else
				{
					this._CountryRegionCode = default(string);
				}
				this.SendPropertyChanged("Person_CountryRegion");
			}
		}
	}
	
	public Sales_Currency Sales_Currency
	{
		get
		{
			return this._Sales_Currency.Entity;
		}
		set
		{
			Sales_Currency previousValue = this._Sales_Currency.Entity;
			if (((previousValue != value) 
						|| (this._Sales_Currency.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Sales_Currency.Entity = null;
					previousValue.Sales_CountryRegionCurrency.Remove(this);
				}
				this._Sales_Currency.Entity = value;
				if ((value != null))
				{
					value.Sales_CountryRegionCurrency.Add(this);
					this._CurrencyCode = value.CurrencyCode;
				}
				else
				{
					this._CurrencyCode = default(string);
				}
				this.SendPropertyChanged("Sales_Currency");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

public partial class Sales_CreditCard : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _CreditCardID;
	
	private string _CardType;
	
	private string _CardNumber;
	
	private byte _ExpMonth;
	
	private short _ExpYear;
	
	private System.DateTime _ModifiedDate;
	
	private EntitySet<Sales_ContactCreditCard> _Sales_ContactCreditCard;
	
	private EntitySet<Sales_SalesOrderHeader> _Sales_SalesOrderHeader;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCreditCardIDChanging(int value);
    partial void OnCreditCardIDChanged();
    partial void OnCardTypeChanging(string value);
    partial void OnCardTypeChanged();
    partial void OnCardNumberChanging(string value);
    partial void OnCardNumberChanged();
    partial void OnExpMonthChanging(byte value);
    partial void OnExpMonthChanged();
    partial void OnExpYearChanging(short value);
    partial void OnExpYearChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Sales_CreditCard()
	{
		this._Sales_ContactCreditCard = new EntitySet<Sales_ContactCreditCard>(new Action<Sales_ContactCreditCard>(this.attach_Sales_ContactCreditCard), new Action<Sales_ContactCreditCard>(this.detach_Sales_ContactCreditCard));
		this._Sales_SalesOrderHeader = new EntitySet<Sales_SalesOrderHeader>(new Action<Sales_SalesOrderHeader>(this.attach_Sales_SalesOrderHeader), new Action<Sales_SalesOrderHeader>(this.detach_Sales_SalesOrderHeader));
		OnCreated();
	}
	
	public int CreditCardID
	{
		get
		{
			return this._CreditCardID;
		}
		set
		{
			if ((this._CreditCardID != value))
			{
				this.OnCreditCardIDChanging(value);
				this.SendPropertyChanging();
				this._CreditCardID = value;
				this.SendPropertyChanged("CreditCardID");
				this.OnCreditCardIDChanged();
			}
		}
	}
	
	public string CardType
	{
		get
		{
			return this._CardType;
		}
		set
		{
			if ((this._CardType != value))
			{
				this.OnCardTypeChanging(value);
				this.SendPropertyChanging();
				this._CardType = value;
				this.SendPropertyChanged("CardType");
				this.OnCardTypeChanged();
			}
		}
	}
	
	public string CardNumber
	{
		get
		{
			return this._CardNumber;
		}
		set
		{
			if ((this._CardNumber != value))
			{
				this.OnCardNumberChanging(value);
				this.SendPropertyChanging();
				this._CardNumber = value;
				this.SendPropertyChanged("CardNumber");
				this.OnCardNumberChanged();
			}
		}
	}
	
	public byte ExpMonth
	{
		get
		{
			return this._ExpMonth;
		}
		set
		{
			if ((this._ExpMonth != value))
			{
				this.OnExpMonthChanging(value);
				this.SendPropertyChanging();
				this._ExpMonth = value;
				this.SendPropertyChanged("ExpMonth");
				this.OnExpMonthChanged();
			}
		}
	}
	
	public short ExpYear
	{
		get
		{
			return this._ExpYear;
		}
		set
		{
			if ((this._ExpYear != value))
			{
				this.OnExpYearChanging(value);
				this.SendPropertyChanging();
				this._ExpYear = value;
				this.SendPropertyChanged("ExpYear");
				this.OnExpYearChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public EntitySet<Sales_ContactCreditCard> Sales_ContactCreditCard
	{
		get
		{
			return this._Sales_ContactCreditCard;
		}
		set
		{
			this._Sales_ContactCreditCard.Assign(value);
		}
	}
	
	public EntitySet<Sales_SalesOrderHeader> Sales_SalesOrderHeader
	{
		get
		{
			return this._Sales_SalesOrderHeader;
		}
		set
		{
			this._Sales_SalesOrderHeader.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Sales_ContactCreditCard(Sales_ContactCreditCard entity)
	{
		this.SendPropertyChanging();
		entity.Sales_CreditCard = this;
	}
	
	private void detach_Sales_ContactCreditCard(Sales_ContactCreditCard entity)
	{
		this.SendPropertyChanging();
		entity.Sales_CreditCard = null;
	}
	
	private void attach_Sales_SalesOrderHeader(Sales_SalesOrderHeader entity)
	{
		this.SendPropertyChanging();
		entity.Sales_CreditCard = this;
	}
	
	private void detach_Sales_SalesOrderHeader(Sales_SalesOrderHeader entity)
	{
		this.SendPropertyChanging();
		entity.Sales_CreditCard = null;
	}
}

public partial class Production_Culture : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _CultureID;
	
	private string _Name;
	
	private System.DateTime _ModifiedDate;
	
	private EntitySet<Production_ProductModelProductDescriptionCulture> _Production_ProductModelProductDescriptionCulture;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCultureIDChanging(string value);
    partial void OnCultureIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Production_Culture()
	{
		this._Production_ProductModelProductDescriptionCulture = new EntitySet<Production_ProductModelProductDescriptionCulture>(new Action<Production_ProductModelProductDescriptionCulture>(this.attach_Production_ProductModelProductDescriptionCulture), new Action<Production_ProductModelProductDescriptionCulture>(this.detach_Production_ProductModelProductDescriptionCulture));
		OnCreated();
	}
	
	public string CultureID
	{
		get
		{
			return this._CultureID;
		}
		set
		{
			if ((this._CultureID != value))
			{
				this.OnCultureIDChanging(value);
				this.SendPropertyChanging();
				this._CultureID = value;
				this.SendPropertyChanged("CultureID");
				this.OnCultureIDChanged();
			}
		}
	}
	
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public EntitySet<Production_ProductModelProductDescriptionCulture> Production_ProductModelProductDescriptionCulture
	{
		get
		{
			return this._Production_ProductModelProductDescriptionCulture;
		}
		set
		{
			this._Production_ProductModelProductDescriptionCulture.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Production_ProductModelProductDescriptionCulture(Production_ProductModelProductDescriptionCulture entity)
	{
		this.SendPropertyChanging();
		entity.Production_Culture = this;
	}
	
	private void detach_Production_ProductModelProductDescriptionCulture(Production_ProductModelProductDescriptionCulture entity)
	{
		this.SendPropertyChanging();
		entity.Production_Culture = null;
	}
}

public partial class Sales_Currency : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _CurrencyCode;
	
	private string _Name;
	
	private System.DateTime _ModifiedDate;
	
	private EntitySet<Sales_CountryRegionCurrency> _Sales_CountryRegionCurrency;
	
	private EntitySet<Sales_CurrencyRate> _Sales_CurrencyRate;
	
	private EntitySet<Sales_CurrencyRate> _CurrencyCodeSales_CurrencyRate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCurrencyCodeChanging(string value);
    partial void OnCurrencyCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Sales_Currency()
	{
		this._Sales_CountryRegionCurrency = new EntitySet<Sales_CountryRegionCurrency>(new Action<Sales_CountryRegionCurrency>(this.attach_Sales_CountryRegionCurrency), new Action<Sales_CountryRegionCurrency>(this.detach_Sales_CountryRegionCurrency));
		this._Sales_CurrencyRate = new EntitySet<Sales_CurrencyRate>(new Action<Sales_CurrencyRate>(this.attach_Sales_CurrencyRate), new Action<Sales_CurrencyRate>(this.detach_Sales_CurrencyRate));
		this._CurrencyCodeSales_CurrencyRate = new EntitySet<Sales_CurrencyRate>(new Action<Sales_CurrencyRate>(this.attach_CurrencyCodeSales_CurrencyRate), new Action<Sales_CurrencyRate>(this.detach_CurrencyCodeSales_CurrencyRate));
		OnCreated();
	}
	
	public string CurrencyCode
	{
		get
		{
			return this._CurrencyCode;
		}
		set
		{
			if ((this._CurrencyCode != value))
			{
				this.OnCurrencyCodeChanging(value);
				this.SendPropertyChanging();
				this._CurrencyCode = value;
				this.SendPropertyChanged("CurrencyCode");
				this.OnCurrencyCodeChanged();
			}
		}
	}
	
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public EntitySet<Sales_CountryRegionCurrency> Sales_CountryRegionCurrency
	{
		get
		{
			return this._Sales_CountryRegionCurrency;
		}
		set
		{
			this._Sales_CountryRegionCurrency.Assign(value);
		}
	}
	
	public EntitySet<Sales_CurrencyRate> Sales_CurrencyRate
	{
		get
		{
			return this._Sales_CurrencyRate;
		}
		set
		{
			this._Sales_CurrencyRate.Assign(value);
		}
	}
	
	public EntitySet<Sales_CurrencyRate> CurrencyCodeSales_CurrencyRate
	{
		get
		{
			return this._CurrencyCodeSales_CurrencyRate;
		}
		set
		{
			this._CurrencyCodeSales_CurrencyRate.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Sales_CountryRegionCurrency(Sales_CountryRegionCurrency entity)
	{
		this.SendPropertyChanging();
		entity.Sales_Currency = this;
	}
	
	private void detach_Sales_CountryRegionCurrency(Sales_CountryRegionCurrency entity)
	{
		this.SendPropertyChanging();
		entity.Sales_Currency = null;
	}
	
	private void attach_Sales_CurrencyRate(Sales_CurrencyRate entity)
	{
		this.SendPropertyChanging();
		entity.Sales_Currency = this;
	}
	
	private void detach_Sales_CurrencyRate(Sales_CurrencyRate entity)
	{
		this.SendPropertyChanging();
		entity.Sales_Currency = null;
	}
	
	private void attach_CurrencyCodeSales_CurrencyRate(Sales_CurrencyRate entity)
	{
		this.SendPropertyChanging();
		entity.ToCurrencyCodeSales_Currency = this;
	}
	
	private void detach_CurrencyCodeSales_CurrencyRate(Sales_CurrencyRate entity)
	{
		this.SendPropertyChanging();
		entity.ToCurrencyCodeSales_Currency = null;
	}
}

public partial class Sales_CurrencyRate : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _CurrencyRateID;
	
	private System.DateTime _CurrencyRateDate;
	
	private string _FromCurrencyCode;
	
	private string _ToCurrencyCode;
	
	private decimal _AverageRate;
	
	private decimal _EndOfDayRate;
	
	private System.DateTime _ModifiedDate;
	
	private EntityRef<Sales_Currency> _Sales_Currency;
	
	private EntityRef<Sales_Currency> _ToCurrencyCodeSales_Currency;
	
	private EntitySet<Sales_SalesOrderHeader> _Sales_SalesOrderHeader;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCurrencyRateIDChanging(int value);
    partial void OnCurrencyRateIDChanged();
    partial void OnCurrencyRateDateChanging(System.DateTime value);
    partial void OnCurrencyRateDateChanged();
    partial void OnFromCurrencyCodeChanging(string value);
    partial void OnFromCurrencyCodeChanged();
    partial void OnToCurrencyCodeChanging(string value);
    partial void OnToCurrencyCodeChanged();
    partial void OnAverageRateChanging(decimal value);
    partial void OnAverageRateChanged();
    partial void OnEndOfDayRateChanging(decimal value);
    partial void OnEndOfDayRateChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Sales_CurrencyRate()
	{
		this._Sales_Currency = default(EntityRef<Sales_Currency>);
		this._ToCurrencyCodeSales_Currency = default(EntityRef<Sales_Currency>);
		this._Sales_SalesOrderHeader = new EntitySet<Sales_SalesOrderHeader>(new Action<Sales_SalesOrderHeader>(this.attach_Sales_SalesOrderHeader), new Action<Sales_SalesOrderHeader>(this.detach_Sales_SalesOrderHeader));
		OnCreated();
	}
	
	public int CurrencyRateID
	{
		get
		{
			return this._CurrencyRateID;
		}
		set
		{
			if ((this._CurrencyRateID != value))
			{
				this.OnCurrencyRateIDChanging(value);
				this.SendPropertyChanging();
				this._CurrencyRateID = value;
				this.SendPropertyChanged("CurrencyRateID");
				this.OnCurrencyRateIDChanged();
			}
		}
	}
	
	public System.DateTime CurrencyRateDate
	{
		get
		{
			return this._CurrencyRateDate;
		}
		set
		{
			if ((this._CurrencyRateDate != value))
			{
				this.OnCurrencyRateDateChanging(value);
				this.SendPropertyChanging();
				this._CurrencyRateDate = value;
				this.SendPropertyChanged("CurrencyRateDate");
				this.OnCurrencyRateDateChanged();
			}
		}
	}
	
	public string FromCurrencyCode
	{
		get
		{
			return this._FromCurrencyCode;
		}
		set
		{
			if ((this._FromCurrencyCode != value))
			{
				if (this._Sales_Currency.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnFromCurrencyCodeChanging(value);
				this.SendPropertyChanging();
				this._FromCurrencyCode = value;
				this.SendPropertyChanged("FromCurrencyCode");
				this.OnFromCurrencyCodeChanged();
			}
		}
	}
	
	public string ToCurrencyCode
	{
		get
		{
			return this._ToCurrencyCode;
		}
		set
		{
			if ((this._ToCurrencyCode != value))
			{
				if (this._ToCurrencyCodeSales_Currency.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnToCurrencyCodeChanging(value);
				this.SendPropertyChanging();
				this._ToCurrencyCode = value;
				this.SendPropertyChanged("ToCurrencyCode");
				this.OnToCurrencyCodeChanged();
			}
		}
	}
	
	public decimal AverageRate
	{
		get
		{
			return this._AverageRate;
		}
		set
		{
			if ((this._AverageRate != value))
			{
				this.OnAverageRateChanging(value);
				this.SendPropertyChanging();
				this._AverageRate = value;
				this.SendPropertyChanged("AverageRate");
				this.OnAverageRateChanged();
			}
		}
	}
	
	public decimal EndOfDayRate
	{
		get
		{
			return this._EndOfDayRate;
		}
		set
		{
			if ((this._EndOfDayRate != value))
			{
				this.OnEndOfDayRateChanging(value);
				this.SendPropertyChanging();
				this._EndOfDayRate = value;
				this.SendPropertyChanged("EndOfDayRate");
				this.OnEndOfDayRateChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public Sales_Currency Sales_Currency
	{
		get
		{
			return this._Sales_Currency.Entity;
		}
		set
		{
			Sales_Currency previousValue = this._Sales_Currency.Entity;
			if (((previousValue != value) 
						|| (this._Sales_Currency.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Sales_Currency.Entity = null;
					previousValue.Sales_CurrencyRate.Remove(this);
				}
				this._Sales_Currency.Entity = value;
				if ((value != null))
				{
					value.Sales_CurrencyRate.Add(this);
					this._FromCurrencyCode = value.CurrencyCode;
				}
				else
				{
					this._FromCurrencyCode = default(string);
				}
				this.SendPropertyChanged("Sales_Currency");
			}
		}
	}
	
	public Sales_Currency ToCurrencyCodeSales_Currency
	{
		get
		{
			return this._ToCurrencyCodeSales_Currency.Entity;
		}
		set
		{
			Sales_Currency previousValue = this._ToCurrencyCodeSales_Currency.Entity;
			if (((previousValue != value) 
						|| (this._ToCurrencyCodeSales_Currency.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ToCurrencyCodeSales_Currency.Entity = null;
					previousValue.CurrencyCodeSales_CurrencyRate.Remove(this);
				}
				this._ToCurrencyCodeSales_Currency.Entity = value;
				if ((value != null))
				{
					value.CurrencyCodeSales_CurrencyRate.Add(this);
					this._ToCurrencyCode = value.CurrencyCode;
				}
				else
				{
					this._ToCurrencyCode = default(string);
				}
				this.SendPropertyChanged("ToCurrencyCodeSales_Currency");
			}
		}
	}
	
	public EntitySet<Sales_SalesOrderHeader> Sales_SalesOrderHeader
	{
		get
		{
			return this._Sales_SalesOrderHeader;
		}
		set
		{
			this._Sales_SalesOrderHeader.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Sales_SalesOrderHeader(Sales_SalesOrderHeader entity)
	{
		this.SendPropertyChanging();
		entity.Sales_CurrencyRate = this;
	}
	
	private void detach_Sales_SalesOrderHeader(Sales_SalesOrderHeader entity)
	{
		this.SendPropertyChanging();
		entity.Sales_CurrencyRate = null;
	}
}

public partial class Sales_Customer : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _CustomerID;
	
	private System.Nullable<int> _TerritoryID;
	
	private string _AccountNumber;
	
	private string _CustomerType;
	
	private System.Guid _Rowguid;
	
	private System.DateTime _ModifiedDate;
	
	private EntityRef<Sales_SalesTerritory> _Sales_SalesTerritory;
	
	private EntitySet<Sales_CustomerAddress> _Sales_CustomerAddress;
	
	private EntityRef<Sales_Individual> _Sales_Individual;
	
	private EntitySet<Sales_SalesOrderHeader> _Sales_SalesOrderHeader;
	
	private EntityRef<Sales_Store> _Sales_Store;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnTerritoryIDChanging(System.Nullable<int> value);
    partial void OnTerritoryIDChanged();
    partial void OnAccountNumberChanging(string value);
    partial void OnAccountNumberChanged();
    partial void OnCustomerTypeChanging(string value);
    partial void OnCustomerTypeChanged();
    partial void OnRowguidChanging(System.Guid value);
    partial void OnRowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Sales_Customer()
	{
		this._Sales_SalesTerritory = default(EntityRef<Sales_SalesTerritory>);
		this._Sales_CustomerAddress = new EntitySet<Sales_CustomerAddress>(new Action<Sales_CustomerAddress>(this.attach_Sales_CustomerAddress), new Action<Sales_CustomerAddress>(this.detach_Sales_CustomerAddress));
		this._Sales_Individual = default(EntityRef<Sales_Individual>);
		this._Sales_SalesOrderHeader = new EntitySet<Sales_SalesOrderHeader>(new Action<Sales_SalesOrderHeader>(this.attach_Sales_SalesOrderHeader), new Action<Sales_SalesOrderHeader>(this.detach_Sales_SalesOrderHeader));
		this._Sales_Store = default(EntityRef<Sales_Store>);
		OnCreated();
	}
	
	public int CustomerID
	{
		get
		{
			return this._CustomerID;
		}
		set
		{
			if ((this._CustomerID != value))
			{
				this.OnCustomerIDChanging(value);
				this.SendPropertyChanging();
				this._CustomerID = value;
				this.SendPropertyChanged("CustomerID");
				this.OnCustomerIDChanged();
			}
		}
	}
	
	public System.Nullable<int> TerritoryID
	{
		get
		{
			return this._TerritoryID;
		}
		set
		{
			if ((this._TerritoryID != value))
			{
				if (this._Sales_SalesTerritory.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnTerritoryIDChanging(value);
				this.SendPropertyChanging();
				this._TerritoryID = value;
				this.SendPropertyChanged("TerritoryID");
				this.OnTerritoryIDChanged();
			}
		}
	}
	
	public string AccountNumber
	{
		get
		{
			return this._AccountNumber;
		}
		set
		{
			if ((this._AccountNumber != value))
			{
				this.OnAccountNumberChanging(value);
				this.SendPropertyChanging();
				this._AccountNumber = value;
				this.SendPropertyChanged("AccountNumber");
				this.OnAccountNumberChanged();
			}
		}
	}
	
	public string CustomerType
	{
		get
		{
			return this._CustomerType;
		}
		set
		{
			if ((this._CustomerType != value))
			{
				this.OnCustomerTypeChanging(value);
				this.SendPropertyChanging();
				this._CustomerType = value;
				this.SendPropertyChanged("CustomerType");
				this.OnCustomerTypeChanged();
			}
		}
	}
	
	public System.Guid Rowguid
	{
		get
		{
			return this._Rowguid;
		}
		set
		{
			if ((this._Rowguid != value))
			{
				this.OnRowguidChanging(value);
				this.SendPropertyChanging();
				this._Rowguid = value;
				this.SendPropertyChanged("Rowguid");
				this.OnRowguidChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public Sales_SalesTerritory Sales_SalesTerritory
	{
		get
		{
			return this._Sales_SalesTerritory.Entity;
		}
		set
		{
			Sales_SalesTerritory previousValue = this._Sales_SalesTerritory.Entity;
			if (((previousValue != value) 
						|| (this._Sales_SalesTerritory.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Sales_SalesTerritory.Entity = null;
					previousValue.Sales_Customer.Remove(this);
				}
				this._Sales_SalesTerritory.Entity = value;
				if ((value != null))
				{
					value.Sales_Customer.Add(this);
					this._TerritoryID = value.TerritoryID;
				}
				else
				{
					this._TerritoryID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Sales_SalesTerritory");
			}
		}
	}
	
	public EntitySet<Sales_CustomerAddress> Sales_CustomerAddress
	{
		get
		{
			return this._Sales_CustomerAddress;
		}
		set
		{
			this._Sales_CustomerAddress.Assign(value);
		}
	}
	
	public Sales_Individual Sales_Individual
	{
		get
		{
			return this._Sales_Individual.Entity;
		}
		set
		{
			Sales_Individual previousValue = this._Sales_Individual.Entity;
			if (((previousValue != value) 
						|| (this._Sales_Individual.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Sales_Individual.Entity = null;
					previousValue.Sales_Customer = null;
				}
				this._Sales_Individual.Entity = value;
				if ((value != null))
				{
					value.Sales_Customer = this;
				}
				this.SendPropertyChanged("Sales_Individual");
			}
		}
	}
	
	public EntitySet<Sales_SalesOrderHeader> Sales_SalesOrderHeader
	{
		get
		{
			return this._Sales_SalesOrderHeader;
		}
		set
		{
			this._Sales_SalesOrderHeader.Assign(value);
		}
	}
	
	public Sales_Store Sales_Store
	{
		get
		{
			return this._Sales_Store.Entity;
		}
		set
		{
			Sales_Store previousValue = this._Sales_Store.Entity;
			if (((previousValue != value) 
						|| (this._Sales_Store.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Sales_Store.Entity = null;
					previousValue.Sales_Customer = null;
				}
				this._Sales_Store.Entity = value;
				if ((value != null))
				{
					value.Sales_Customer = this;
				}
				this.SendPropertyChanged("Sales_Store");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Sales_CustomerAddress(Sales_CustomerAddress entity)
	{
		this.SendPropertyChanging();
		entity.Sales_Customer = this;
	}
	
	private void detach_Sales_CustomerAddress(Sales_CustomerAddress entity)
	{
		this.SendPropertyChanging();
		entity.Sales_Customer = null;
	}
	
	private void attach_Sales_SalesOrderHeader(Sales_SalesOrderHeader entity)
	{
		this.SendPropertyChanging();
		entity.Sales_Customer = this;
	}
	
	private void detach_Sales_SalesOrderHeader(Sales_SalesOrderHeader entity)
	{
		this.SendPropertyChanging();
		entity.Sales_Customer = null;
	}
}

public partial class Sales_CustomerAddress : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _CustomerID;
	
	private int _AddressID;
	
	private int _AddressTypeID;
	
	private System.Guid _Rowguid;
	
	private System.DateTime _ModifiedDate;
	
	private EntityRef<Person_Address> _Person_Address;
	
	private EntityRef<Person_AddressType> _Person_AddressType;
	
	private EntityRef<Sales_Customer> _Sales_Customer;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnAddressIDChanging(int value);
    partial void OnAddressIDChanged();
    partial void OnAddressTypeIDChanging(int value);
    partial void OnAddressTypeIDChanged();
    partial void OnRowguidChanging(System.Guid value);
    partial void OnRowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Sales_CustomerAddress()
	{
		this._Person_Address = default(EntityRef<Person_Address>);
		this._Person_AddressType = default(EntityRef<Person_AddressType>);
		this._Sales_Customer = default(EntityRef<Sales_Customer>);
		OnCreated();
	}
	
	public int CustomerID
	{
		get
		{
			return this._CustomerID;
		}
		set
		{
			if ((this._CustomerID != value))
			{
				if (this._Sales_Customer.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCustomerIDChanging(value);
				this.SendPropertyChanging();
				this._CustomerID = value;
				this.SendPropertyChanged("CustomerID");
				this.OnCustomerIDChanged();
			}
		}
	}
	
	public int AddressID
	{
		get
		{
			return this._AddressID;
		}
		set
		{
			if ((this._AddressID != value))
			{
				if (this._Person_Address.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAddressIDChanging(value);
				this.SendPropertyChanging();
				this._AddressID = value;
				this.SendPropertyChanged("AddressID");
				this.OnAddressIDChanged();
			}
		}
	}
	
	public int AddressTypeID
	{
		get
		{
			return this._AddressTypeID;
		}
		set
		{
			if ((this._AddressTypeID != value))
			{
				if (this._Person_AddressType.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAddressTypeIDChanging(value);
				this.SendPropertyChanging();
				this._AddressTypeID = value;
				this.SendPropertyChanged("AddressTypeID");
				this.OnAddressTypeIDChanged();
			}
		}
	}
	
	public System.Guid Rowguid
	{
		get
		{
			return this._Rowguid;
		}
		set
		{
			if ((this._Rowguid != value))
			{
				this.OnRowguidChanging(value);
				this.SendPropertyChanging();
				this._Rowguid = value;
				this.SendPropertyChanged("Rowguid");
				this.OnRowguidChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public Person_Address Person_Address
	{
		get
		{
			return this._Person_Address.Entity;
		}
		set
		{
			Person_Address previousValue = this._Person_Address.Entity;
			if (((previousValue != value) 
						|| (this._Person_Address.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Person_Address.Entity = null;
					previousValue.Sales_CustomerAddress.Remove(this);
				}
				this._Person_Address.Entity = value;
				if ((value != null))
				{
					value.Sales_CustomerAddress.Add(this);
					this._AddressID = value.AddressID;
				}
				else
				{
					this._AddressID = default(int);
				}
				this.SendPropertyChanged("Person_Address");
			}
		}
	}
	
	public Person_AddressType Person_AddressType
	{
		get
		{
			return this._Person_AddressType.Entity;
		}
		set
		{
			Person_AddressType previousValue = this._Person_AddressType.Entity;
			if (((previousValue != value) 
						|| (this._Person_AddressType.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Person_AddressType.Entity = null;
					previousValue.Sales_CustomerAddress.Remove(this);
				}
				this._Person_AddressType.Entity = value;
				if ((value != null))
				{
					value.Sales_CustomerAddress.Add(this);
					this._AddressTypeID = value.AddressTypeID;
				}
				else
				{
					this._AddressTypeID = default(int);
				}
				this.SendPropertyChanged("Person_AddressType");
			}
		}
	}
	
	public Sales_Customer Sales_Customer
	{
		get
		{
			return this._Sales_Customer.Entity;
		}
		set
		{
			Sales_Customer previousValue = this._Sales_Customer.Entity;
			if (((previousValue != value) 
						|| (this._Sales_Customer.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Sales_Customer.Entity = null;
					previousValue.Sales_CustomerAddress.Remove(this);
				}
				this._Sales_Customer.Entity = value;
				if ((value != null))
				{
					value.Sales_CustomerAddress.Add(this);
					this._CustomerID = value.CustomerID;
				}
				else
				{
					this._CustomerID = default(int);
				}
				this.SendPropertyChanged("Sales_Customer");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

public partial class DatabaseLog : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _DatabaseLogID;
	
	private System.DateTime _PostTime;
	
	private string _DatabaseUser;
	
	private string _Event;
	
	private string _Schema;
	
	private string _Object;
	
	private string _TSQL;
	
	private System.Xml.Linq.XElement _XmlEvent;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDatabaseLogIDChanging(int value);
    partial void OnDatabaseLogIDChanged();
    partial void OnPostTimeChanging(System.DateTime value);
    partial void OnPostTimeChanged();
    partial void OnDatabaseUserChanging(string value);
    partial void OnDatabaseUserChanged();
    partial void OnEventChanging(string value);
    partial void OnEventChanged();
    partial void OnSchemaChanging(string value);
    partial void OnSchemaChanged();
    partial void OnObjectChanging(string value);
    partial void OnObjectChanged();
    partial void OnTSQLChanging(string value);
    partial void OnTSQLChanged();
    partial void OnXmlEventChanging(System.Xml.Linq.XElement value);
    partial void OnXmlEventChanged();
    #endregion
	
	public DatabaseLog()
	{
		OnCreated();
	}
	
	public int DatabaseLogID
	{
		get
		{
			return this._DatabaseLogID;
		}
		set
		{
			if ((this._DatabaseLogID != value))
			{
				this.OnDatabaseLogIDChanging(value);
				this.SendPropertyChanging();
				this._DatabaseLogID = value;
				this.SendPropertyChanged("DatabaseLogID");
				this.OnDatabaseLogIDChanged();
			}
		}
	}
	
	public System.DateTime PostTime
	{
		get
		{
			return this._PostTime;
		}
		set
		{
			if ((this._PostTime != value))
			{
				this.OnPostTimeChanging(value);
				this.SendPropertyChanging();
				this._PostTime = value;
				this.SendPropertyChanged("PostTime");
				this.OnPostTimeChanged();
			}
		}
	}
	
	public string DatabaseUser
	{
		get
		{
			return this._DatabaseUser;
		}
		set
		{
			if ((this._DatabaseUser != value))
			{
				this.OnDatabaseUserChanging(value);
				this.SendPropertyChanging();
				this._DatabaseUser = value;
				this.SendPropertyChanged("DatabaseUser");
				this.OnDatabaseUserChanged();
			}
		}
	}
	
	public string Event
	{
		get
		{
			return this._Event;
		}
		set
		{
			if ((this._Event != value))
			{
				this.OnEventChanging(value);
				this.SendPropertyChanging();
				this._Event = value;
				this.SendPropertyChanged("Event");
				this.OnEventChanged();
			}
		}
	}
	
	public string Schema
	{
		get
		{
			return this._Schema;
		}
		set
		{
			if ((this._Schema != value))
			{
				this.OnSchemaChanging(value);
				this.SendPropertyChanging();
				this._Schema = value;
				this.SendPropertyChanged("Schema");
				this.OnSchemaChanged();
			}
		}
	}
	
	public string Object
	{
		get
		{
			return this._Object;
		}
		set
		{
			if ((this._Object != value))
			{
				this.OnObjectChanging(value);
				this.SendPropertyChanging();
				this._Object = value;
				this.SendPropertyChanged("Object");
				this.OnObjectChanged();
			}
		}
	}
	
	public string TSQL
	{
		get
		{
			return this._TSQL;
		}
		set
		{
			if ((this._TSQL != value))
			{
				this.OnTSQLChanging(value);
				this.SendPropertyChanging();
				this._TSQL = value;
				this.SendPropertyChanged("TSQL");
				this.OnTSQLChanged();
			}
		}
	}
	
	public System.Xml.Linq.XElement XmlEvent
	{
		get
		{
			return this._XmlEvent;
		}
		set
		{
			if ((this._XmlEvent != value))
			{
				this.OnXmlEventChanging(value);
				this.SendPropertyChanging();
				this._XmlEvent = value;
				this.SendPropertyChanged("XmlEvent");
				this.OnXmlEventChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

public partial class HumanResources_Department : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private short _DepartmentID;
	
	private string _Name;
	
	private string _GroupName;
	
	private System.DateTime _ModifiedDate;
	
	private EntitySet<HumanResources_EmployeeDepartmentHistory> _HumanResources_EmployeeDepartmentHistory;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDepartmentIDChanging(short value);
    partial void OnDepartmentIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public HumanResources_Department()
	{
		this._HumanResources_EmployeeDepartmentHistory = new EntitySet<HumanResources_EmployeeDepartmentHistory>(new Action<HumanResources_EmployeeDepartmentHistory>(this.attach_HumanResources_EmployeeDepartmentHistory), new Action<HumanResources_EmployeeDepartmentHistory>(this.detach_HumanResources_EmployeeDepartmentHistory));
		OnCreated();
	}
	
	public short DepartmentID
	{
		get
		{
			return this._DepartmentID;
		}
		set
		{
			if ((this._DepartmentID != value))
			{
				this.OnDepartmentIDChanging(value);
				this.SendPropertyChanging();
				this._DepartmentID = value;
				this.SendPropertyChanged("DepartmentID");
				this.OnDepartmentIDChanged();
			}
		}
	}
	
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	public string GroupName
	{
		get
		{
			return this._GroupName;
		}
		set
		{
			if ((this._GroupName != value))
			{
				this.OnGroupNameChanging(value);
				this.SendPropertyChanging();
				this._GroupName = value;
				this.SendPropertyChanged("GroupName");
				this.OnGroupNameChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public EntitySet<HumanResources_EmployeeDepartmentHistory> HumanResources_EmployeeDepartmentHistory
	{
		get
		{
			return this._HumanResources_EmployeeDepartmentHistory;
		}
		set
		{
			this._HumanResources_EmployeeDepartmentHistory.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_HumanResources_EmployeeDepartmentHistory(HumanResources_EmployeeDepartmentHistory entity)
	{
		this.SendPropertyChanging();
		entity.HumanResources_Department = this;
	}
	
	private void detach_HumanResources_EmployeeDepartmentHistory(HumanResources_EmployeeDepartmentHistory entity)
	{
		this.SendPropertyChanging();
		entity.HumanResources_Department = null;
	}
}

public partial class Production_Document : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _DocumentID;
	
	private string _Title;
	
	private string _FileName;
	
	private string _FileExtension;
	
	private string _Revision;
	
	private int _ChangeNumber;
	
	private byte _Status;
	
	private string _DocumentSummary;
	
	private System.Data.Linq.Binary _Document;
	
	private System.DateTime _ModifiedDate;
	
	private EntitySet<Production_ProductDocument> _Production_ProductDocument;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocumentIDChanging(int value);
    partial void OnDocumentIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnFileExtensionChanging(string value);
    partial void OnFileExtensionChanged();
    partial void OnRevisionChanging(string value);
    partial void OnRevisionChanged();
    partial void OnChangeNumberChanging(int value);
    partial void OnChangeNumberChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnDocumentSummaryChanging(string value);
    partial void OnDocumentSummaryChanged();
    partial void OnDocumentChanging(System.Data.Linq.Binary value);
    partial void OnDocumentChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Production_Document()
	{
		this._Production_ProductDocument = new EntitySet<Production_ProductDocument>(new Action<Production_ProductDocument>(this.attach_Production_ProductDocument), new Action<Production_ProductDocument>(this.detach_Production_ProductDocument));
		OnCreated();
	}
	
	public int DocumentID
	{
		get
		{
			return this._DocumentID;
		}
		set
		{
			if ((this._DocumentID != value))
			{
				this.OnDocumentIDChanging(value);
				this.SendPropertyChanging();
				this._DocumentID = value;
				this.SendPropertyChanged("DocumentID");
				this.OnDocumentIDChanged();
			}
		}
	}
	
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	public string FileName
	{
		get
		{
			return this._FileName;
		}
		set
		{
			if ((this._FileName != value))
			{
				this.OnFileNameChanging(value);
				this.SendPropertyChanging();
				this._FileName = value;
				this.SendPropertyChanged("FileName");
				this.OnFileNameChanged();
			}
		}
	}
	
	public string FileExtension
	{
		get
		{
			return this._FileExtension;
		}
		set
		{
			if ((this._FileExtension != value))
			{
				this.OnFileExtensionChanging(value);
				this.SendPropertyChanging();
				this._FileExtension = value;
				this.SendPropertyChanged("FileExtension");
				this.OnFileExtensionChanged();
			}
		}
	}
	
	public string Revision
	{
		get
		{
			return this._Revision;
		}
		set
		{
			if ((this._Revision != value))
			{
				this.OnRevisionChanging(value);
				this.SendPropertyChanging();
				this._Revision = value;
				this.SendPropertyChanged("Revision");
				this.OnRevisionChanged();
			}
		}
	}
	
	public int ChangeNumber
	{
		get
		{
			return this._ChangeNumber;
		}
		set
		{
			if ((this._ChangeNumber != value))
			{
				this.OnChangeNumberChanging(value);
				this.SendPropertyChanging();
				this._ChangeNumber = value;
				this.SendPropertyChanged("ChangeNumber");
				this.OnChangeNumberChanged();
			}
		}
	}
	
	public byte Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}
	
	public string DocumentSummary
	{
		get
		{
			return this._DocumentSummary;
		}
		set
		{
			if ((this._DocumentSummary != value))
			{
				this.OnDocumentSummaryChanging(value);
				this.SendPropertyChanging();
				this._DocumentSummary = value;
				this.SendPropertyChanged("DocumentSummary");
				this.OnDocumentSummaryChanged();
			}
		}
	}
	
	public System.Data.Linq.Binary Document
	{
		get
		{
			return this._Document;
		}
		set
		{
			if ((this._Document != value))
			{
				this.OnDocumentChanging(value);
				this.SendPropertyChanging();
				this._Document = value;
				this.SendPropertyChanged("Document");
				this.OnDocumentChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public EntitySet<Production_ProductDocument> Production_ProductDocument
	{
		get
		{
			return this._Production_ProductDocument;
		}
		set
		{
			this._Production_ProductDocument.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Production_ProductDocument(Production_ProductDocument entity)
	{
		this.SendPropertyChanging();
		entity.Production_Document = this;
	}
	
	private void detach_Production_ProductDocument(Production_ProductDocument entity)
	{
		this.SendPropertyChanging();
		entity.Production_Document = null;
	}
}

public partial class HumanResources_Employee : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _EmployeeID;
	
	private string _NationalIDNumber;
	
	private int _ContactID;
	
	private string _LoginID;
	
	private System.Nullable<int> _ManagerID;
	
	private string _Title;
	
	private System.DateTime _BirthDate;
	
	private string _MaritalStatus;
	
	private string _Gender;
	
	private System.DateTime _HireDate;
	
	private bool _SalariedFlag;
	
	private short _VacationHours;
	
	private short _SickLeaveHours;
	
	private bool _CurrentFlag;
	
	private System.Guid _Rowguid;
	
	private System.DateTime _ModifiedDate;
	
	private EntityRef<Person_Contact> _Person_Contact;
	
	private EntityRef<HumanResources_Employee> _Manager;
	
	private EntitySet<HumanResources_Employee> _Employee;
	
	private EntitySet<HumanResources_EmployeeAddress> _HumanResources_EmployeeAddress;
	
	private EntitySet<HumanResources_EmployeeDepartmentHistory> _HumanResources_EmployeeDepartmentHistory;
	
	private EntitySet<HumanResources_EmployeePayHistory> _HumanResources_EmployeePayHistory;
	
	private EntitySet<HumanResources_JobCandidate> _HumanResources_JobCandidate;
	
	private EntitySet<Purchasing_PurchaseOrderHeader> _Purchasing_PurchaseOrderHeader;
	
	private EntityRef<Sales_SalesPerson> _Sales_SalesPerson;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeIDChanging(int value);
    partial void OnEmployeeIDChanged();
    partial void OnNationalIDNumberChanging(string value);
    partial void OnNationalIDNumberChanged();
    partial void OnContactIDChanging(int value);
    partial void OnContactIDChanged();
    partial void OnLoginIDChanging(string value);
    partial void OnLoginIDChanged();
    partial void OnManagerIDChanging(System.Nullable<int> value);
    partial void OnManagerIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnBirthDateChanging(System.DateTime value);
    partial void OnBirthDateChanged();
    partial void OnMaritalStatusChanging(string value);
    partial void OnMaritalStatusChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnHireDateChanging(System.DateTime value);
    partial void OnHireDateChanged();
    partial void OnSalariedFlagChanging(bool value);
    partial void OnSalariedFlagChanged();
    partial void OnVacationHoursChanging(short value);
    partial void OnVacationHoursChanged();
    partial void OnSickLeaveHoursChanging(short value);
    partial void OnSickLeaveHoursChanged();
    partial void OnCurrentFlagChanging(bool value);
    partial void OnCurrentFlagChanged();
    partial void OnRowguidChanging(System.Guid value);
    partial void OnRowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public HumanResources_Employee()
	{
		this._Person_Contact = default(EntityRef<Person_Contact>);
		this._Manager = default(EntityRef<HumanResources_Employee>);
		this._Employee = new EntitySet<HumanResources_Employee>(new Action<HumanResources_Employee>(this.attach_Employee), new Action<HumanResources_Employee>(this.detach_Employee));
		this._HumanResources_EmployeeAddress = new EntitySet<HumanResources_EmployeeAddress>(new Action<HumanResources_EmployeeAddress>(this.attach_HumanResources_EmployeeAddress), new Action<HumanResources_EmployeeAddress>(this.detach_HumanResources_EmployeeAddress));
		this._HumanResources_EmployeeDepartmentHistory = new EntitySet<HumanResources_EmployeeDepartmentHistory>(new Action<HumanResources_EmployeeDepartmentHistory>(this.attach_HumanResources_EmployeeDepartmentHistory), new Action<HumanResources_EmployeeDepartmentHistory>(this.detach_HumanResources_EmployeeDepartmentHistory));
		this._HumanResources_EmployeePayHistory = new EntitySet<HumanResources_EmployeePayHistory>(new Action<HumanResources_EmployeePayHistory>(this.attach_HumanResources_EmployeePayHistory), new Action<HumanResources_EmployeePayHistory>(this.detach_HumanResources_EmployeePayHistory));
		this._HumanResources_JobCandidate = new EntitySet<HumanResources_JobCandidate>(new Action<HumanResources_JobCandidate>(this.attach_HumanResources_JobCandidate), new Action<HumanResources_JobCandidate>(this.detach_HumanResources_JobCandidate));
		this._Purchasing_PurchaseOrderHeader = new EntitySet<Purchasing_PurchaseOrderHeader>(new Action<Purchasing_PurchaseOrderHeader>(this.attach_Purchasing_PurchaseOrderHeader), new Action<Purchasing_PurchaseOrderHeader>(this.detach_Purchasing_PurchaseOrderHeader));
		this._Sales_SalesPerson = default(EntityRef<Sales_SalesPerson>);
		OnCreated();
	}
	
	public int EmployeeID
	{
		get
		{
			return this._EmployeeID;
		}
		set
		{
			if ((this._EmployeeID != value))
			{
				this.OnEmployeeIDChanging(value);
				this.SendPropertyChanging();
				this._EmployeeID = value;
				this.SendPropertyChanged("EmployeeID");
				this.OnEmployeeIDChanged();
			}
		}
	}
	
	public string NationalIDNumber
	{
		get
		{
			return this._NationalIDNumber;
		}
		set
		{
			if ((this._NationalIDNumber != value))
			{
				this.OnNationalIDNumberChanging(value);
				this.SendPropertyChanging();
				this._NationalIDNumber = value;
				this.SendPropertyChanged("NationalIDNumber");
				this.OnNationalIDNumberChanged();
			}
		}
	}
	
	public int ContactID
	{
		get
		{
			return this._ContactID;
		}
		set
		{
			if ((this._ContactID != value))
			{
				if (this._Person_Contact.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnContactIDChanging(value);
				this.SendPropertyChanging();
				this._ContactID = value;
				this.SendPropertyChanged("ContactID");
				this.OnContactIDChanged();
			}
		}
	}
	
	public string LoginID
	{
		get
		{
			return this._LoginID;
		}
		set
		{
			if ((this._LoginID != value))
			{
				this.OnLoginIDChanging(value);
				this.SendPropertyChanging();
				this._LoginID = value;
				this.SendPropertyChanged("LoginID");
				this.OnLoginIDChanged();
			}
		}
	}
	
	public System.Nullable<int> ManagerID
	{
		get
		{
			return this._ManagerID;
		}
		set
		{
			if ((this._ManagerID != value))
			{
				if (this._Manager.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnManagerIDChanging(value);
				this.SendPropertyChanging();
				this._ManagerID = value;
				this.SendPropertyChanged("ManagerID");
				this.OnManagerIDChanged();
			}
		}
	}
	
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	public System.DateTime BirthDate
	{
		get
		{
			return this._BirthDate;
		}
		set
		{
			if ((this._BirthDate != value))
			{
				this.OnBirthDateChanging(value);
				this.SendPropertyChanging();
				this._BirthDate = value;
				this.SendPropertyChanged("BirthDate");
				this.OnBirthDateChanged();
			}
		}
	}
	
	public string MaritalStatus
	{
		get
		{
			return this._MaritalStatus;
		}
		set
		{
			if ((this._MaritalStatus != value))
			{
				this.OnMaritalStatusChanging(value);
				this.SendPropertyChanging();
				this._MaritalStatus = value;
				this.SendPropertyChanged("MaritalStatus");
				this.OnMaritalStatusChanged();
			}
		}
	}
	
	public string Gender
	{
		get
		{
			return this._Gender;
		}
		set
		{
			if ((this._Gender != value))
			{
				this.OnGenderChanging(value);
				this.SendPropertyChanging();
				this._Gender = value;
				this.SendPropertyChanged("Gender");
				this.OnGenderChanged();
			}
		}
	}
	
	public System.DateTime HireDate
	{
		get
		{
			return this._HireDate;
		}
		set
		{
			if ((this._HireDate != value))
			{
				this.OnHireDateChanging(value);
				this.SendPropertyChanging();
				this._HireDate = value;
				this.SendPropertyChanged("HireDate");
				this.OnHireDateChanged();
			}
		}
	}
	
	public bool SalariedFlag
	{
		get
		{
			return this._SalariedFlag;
		}
		set
		{
			if ((this._SalariedFlag != value))
			{
				this.OnSalariedFlagChanging(value);
				this.SendPropertyChanging();
				this._SalariedFlag = value;
				this.SendPropertyChanged("SalariedFlag");
				this.OnSalariedFlagChanged();
			}
		}
	}
	
	public short VacationHours
	{
		get
		{
			return this._VacationHours;
		}
		set
		{
			if ((this._VacationHours != value))
			{
				this.OnVacationHoursChanging(value);
				this.SendPropertyChanging();
				this._VacationHours = value;
				this.SendPropertyChanged("VacationHours");
				this.OnVacationHoursChanged();
			}
		}
	}
	
	public short SickLeaveHours
	{
		get
		{
			return this._SickLeaveHours;
		}
		set
		{
			if ((this._SickLeaveHours != value))
			{
				this.OnSickLeaveHoursChanging(value);
				this.SendPropertyChanging();
				this._SickLeaveHours = value;
				this.SendPropertyChanged("SickLeaveHours");
				this.OnSickLeaveHoursChanged();
			}
		}
	}
	
	public bool CurrentFlag
	{
		get
		{
			return this._CurrentFlag;
		}
		set
		{
			if ((this._CurrentFlag != value))
			{
				this.OnCurrentFlagChanging(value);
				this.SendPropertyChanging();
				this._CurrentFlag = value;
				this.SendPropertyChanged("CurrentFlag");
				this.OnCurrentFlagChanged();
			}
		}
	}
	
	public System.Guid Rowguid
	{
		get
		{
			return this._Rowguid;
		}
		set
		{
			if ((this._Rowguid != value))
			{
				this.OnRowguidChanging(value);
				this.SendPropertyChanging();
				this._Rowguid = value;
				this.SendPropertyChanged("Rowguid");
				this.OnRowguidChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public Person_Contact Person_Contact
	{
		get
		{
			return this._Person_Contact.Entity;
		}
		set
		{
			Person_Contact previousValue = this._Person_Contact.Entity;
			if (((previousValue != value) 
						|| (this._Person_Contact.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Person_Contact.Entity = null;
					previousValue.HumanResources_Employee.Remove(this);
				}
				this._Person_Contact.Entity = value;
				if ((value != null))
				{
					value.HumanResources_Employee.Add(this);
					this._ContactID = value.ContactID;
				}
				else
				{
					this._ContactID = default(int);
				}
				this.SendPropertyChanged("Person_Contact");
			}
		}
	}
	
	public HumanResources_Employee Manager
	{
		get
		{
			return this._Manager.Entity;
		}
		set
		{
			HumanResources_Employee previousValue = this._Manager.Entity;
			if (((previousValue != value) 
						|| (this._Manager.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Manager.Entity = null;
					previousValue.Employee.Remove(this);
				}
				this._Manager.Entity = value;
				if ((value != null))
				{
					value.Employee.Add(this);
					this._ManagerID = value.EmployeeID;
				}
				else
				{
					this._ManagerID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Manager");
			}
		}
	}
	
	public EntitySet<HumanResources_Employee> Employee
	{
		get
		{
			return this._Employee;
		}
		set
		{
			this._Employee.Assign(value);
		}
	}
	
	public EntitySet<HumanResources_EmployeeAddress> HumanResources_EmployeeAddress
	{
		get
		{
			return this._HumanResources_EmployeeAddress;
		}
		set
		{
			this._HumanResources_EmployeeAddress.Assign(value);
		}
	}
	
	public EntitySet<HumanResources_EmployeeDepartmentHistory> HumanResources_EmployeeDepartmentHistory
	{
		get
		{
			return this._HumanResources_EmployeeDepartmentHistory;
		}
		set
		{
			this._HumanResources_EmployeeDepartmentHistory.Assign(value);
		}
	}
	
	public EntitySet<HumanResources_EmployeePayHistory> HumanResources_EmployeePayHistory
	{
		get
		{
			return this._HumanResources_EmployeePayHistory;
		}
		set
		{
			this._HumanResources_EmployeePayHistory.Assign(value);
		}
	}
	
	public EntitySet<HumanResources_JobCandidate> HumanResources_JobCandidate
	{
		get
		{
			return this._HumanResources_JobCandidate;
		}
		set
		{
			this._HumanResources_JobCandidate.Assign(value);
		}
	}
	
	public EntitySet<Purchasing_PurchaseOrderHeader> Purchasing_PurchaseOrderHeader
	{
		get
		{
			return this._Purchasing_PurchaseOrderHeader;
		}
		set
		{
			this._Purchasing_PurchaseOrderHeader.Assign(value);
		}
	}
	
	public Sales_SalesPerson Sales_SalesPerson
	{
		get
		{
			return this._Sales_SalesPerson.Entity;
		}
		set
		{
			Sales_SalesPerson previousValue = this._Sales_SalesPerson.Entity;
			if (((previousValue != value) 
						|| (this._Sales_SalesPerson.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Sales_SalesPerson.Entity = null;
					previousValue.HumanResources_Employee = null;
				}
				this._Sales_SalesPerson.Entity = value;
				if ((value != null))
				{
					value.HumanResources_Employee = this;
				}
				this.SendPropertyChanged("Sales_SalesPerson");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Employee(HumanResources_Employee entity)
	{
		this.SendPropertyChanging();
		entity.Manager = this;
	}
	
	private void detach_Employee(HumanResources_Employee entity)
	{
		this.SendPropertyChanging();
		entity.Manager = null;
	}
	
	private void attach_HumanResources_EmployeeAddress(HumanResources_EmployeeAddress entity)
	{
		this.SendPropertyChanging();
		entity.HumanResources_Employee = this;
	}
	
	private void detach_HumanResources_EmployeeAddress(HumanResources_EmployeeAddress entity)
	{
		this.SendPropertyChanging();
		entity.HumanResources_Employee = null;
	}
	
	private void attach_HumanResources_EmployeeDepartmentHistory(HumanResources_EmployeeDepartmentHistory entity)
	{
		this.SendPropertyChanging();
		entity.HumanResources_Employee = this;
	}
	
	private void detach_HumanResources_EmployeeDepartmentHistory(HumanResources_EmployeeDepartmentHistory entity)
	{
		this.SendPropertyChanging();
		entity.HumanResources_Employee = null;
	}
	
	private void attach_HumanResources_EmployeePayHistory(HumanResources_EmployeePayHistory entity)
	{
		this.SendPropertyChanging();
		entity.HumanResources_Employee = this;
	}
	
	private void detach_HumanResources_EmployeePayHistory(HumanResources_EmployeePayHistory entity)
	{
		this.SendPropertyChanging();
		entity.HumanResources_Employee = null;
	}
	
	private void attach_HumanResources_JobCandidate(HumanResources_JobCandidate entity)
	{
		this.SendPropertyChanging();
		entity.HumanResources_Employee = this;
	}
	
	private void detach_HumanResources_JobCandidate(HumanResources_JobCandidate entity)
	{
		this.SendPropertyChanging();
		entity.HumanResources_Employee = null;
	}
	
	private void attach_Purchasing_PurchaseOrderHeader(Purchasing_PurchaseOrderHeader entity)
	{
		this.SendPropertyChanging();
		entity.HumanResources_Employee = this;
	}
	
	private void detach_Purchasing_PurchaseOrderHeader(Purchasing_PurchaseOrderHeader entity)
	{
		this.SendPropertyChanging();
		entity.HumanResources_Employee = null;
	}
}

public partial class HumanResources_EmployeeAddress : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _EmployeeID;
	
	private int _AddressID;
	
	private System.Guid _Rowguid;
	
	private System.DateTime _ModifiedDate;
	
	private EntityRef<Person_Address> _Person_Address;
	
	private EntityRef<HumanResources_Employee> _HumanResources_Employee;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeIDChanging(int value);
    partial void OnEmployeeIDChanged();
    partial void OnAddressIDChanging(int value);
    partial void OnAddressIDChanged();
    partial void OnRowguidChanging(System.Guid value);
    partial void OnRowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public HumanResources_EmployeeAddress()
	{
		this._Person_Address = default(EntityRef<Person_Address>);
		this._HumanResources_Employee = default(EntityRef<HumanResources_Employee>);
		OnCreated();
	}
	
	public int EmployeeID
	{
		get
		{
			return this._EmployeeID;
		}
		set
		{
			if ((this._EmployeeID != value))
			{
				if (this._HumanResources_Employee.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnEmployeeIDChanging(value);
				this.SendPropertyChanging();
				this._EmployeeID = value;
				this.SendPropertyChanged("EmployeeID");
				this.OnEmployeeIDChanged();
			}
		}
	}
	
	public int AddressID
	{
		get
		{
			return this._AddressID;
		}
		set
		{
			if ((this._AddressID != value))
			{
				if (this._Person_Address.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAddressIDChanging(value);
				this.SendPropertyChanging();
				this._AddressID = value;
				this.SendPropertyChanged("AddressID");
				this.OnAddressIDChanged();
			}
		}
	}
	
	public System.Guid Rowguid
	{
		get
		{
			return this._Rowguid;
		}
		set
		{
			if ((this._Rowguid != value))
			{
				this.OnRowguidChanging(value);
				this.SendPropertyChanging();
				this._Rowguid = value;
				this.SendPropertyChanged("Rowguid");
				this.OnRowguidChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public Person_Address Person_Address
	{
		get
		{
			return this._Person_Address.Entity;
		}
		set
		{
			Person_Address previousValue = this._Person_Address.Entity;
			if (((previousValue != value) 
						|| (this._Person_Address.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Person_Address.Entity = null;
					previousValue.HumanResources_EmployeeAddress.Remove(this);
				}
				this._Person_Address.Entity = value;
				if ((value != null))
				{
					value.HumanResources_EmployeeAddress.Add(this);
					this._AddressID = value.AddressID;
				}
				else
				{
					this._AddressID = default(int);
				}
				this.SendPropertyChanged("Person_Address");
			}
		}
	}
	
	public HumanResources_Employee HumanResources_Employee
	{
		get
		{
			return this._HumanResources_Employee.Entity;
		}
		set
		{
			HumanResources_Employee previousValue = this._HumanResources_Employee.Entity;
			if (((previousValue != value) 
						|| (this._HumanResources_Employee.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._HumanResources_Employee.Entity = null;
					previousValue.HumanResources_EmployeeAddress.Remove(this);
				}
				this._HumanResources_Employee.Entity = value;
				if ((value != null))
				{
					value.HumanResources_EmployeeAddress.Add(this);
					this._EmployeeID = value.EmployeeID;
				}
				else
				{
					this._EmployeeID = default(int);
				}
				this.SendPropertyChanged("HumanResources_Employee");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

public partial class HumanResources_EmployeeDepartmentHistory : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _EmployeeID;
	
	private short _DepartmentID;
	
	private byte _ShiftID;
	
	private System.DateTime _StartDate;
	
	private System.Nullable<System.DateTime> _EndDate;
	
	private System.DateTime _ModifiedDate;
	
	private EntityRef<HumanResources_Department> _HumanResources_Department;
	
	private EntityRef<HumanResources_Employee> _HumanResources_Employee;
	
	private EntityRef<HumanResources_Shift> _HumanResources_Shift;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeIDChanging(int value);
    partial void OnEmployeeIDChanged();
    partial void OnDepartmentIDChanging(short value);
    partial void OnDepartmentIDChanged();
    partial void OnShiftIDChanging(byte value);
    partial void OnShiftIDChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public HumanResources_EmployeeDepartmentHistory()
	{
		this._HumanResources_Department = default(EntityRef<HumanResources_Department>);
		this._HumanResources_Employee = default(EntityRef<HumanResources_Employee>);
		this._HumanResources_Shift = default(EntityRef<HumanResources_Shift>);
		OnCreated();
	}
	
	public int EmployeeID
	{
		get
		{
			return this._EmployeeID;
		}
		set
		{
			if ((this._EmployeeID != value))
			{
				if (this._HumanResources_Employee.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnEmployeeIDChanging(value);
				this.SendPropertyChanging();
				this._EmployeeID = value;
				this.SendPropertyChanged("EmployeeID");
				this.OnEmployeeIDChanged();
			}
		}
	}
	
	public short DepartmentID
	{
		get
		{
			return this._DepartmentID;
		}
		set
		{
			if ((this._DepartmentID != value))
			{
				if (this._HumanResources_Department.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnDepartmentIDChanging(value);
				this.SendPropertyChanging();
				this._DepartmentID = value;
				this.SendPropertyChanged("DepartmentID");
				this.OnDepartmentIDChanged();
			}
		}
	}
	
	public byte ShiftID
	{
		get
		{
			return this._ShiftID;
		}
		set
		{
			if ((this._ShiftID != value))
			{
				if (this._HumanResources_Shift.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnShiftIDChanging(value);
				this.SendPropertyChanging();
				this._ShiftID = value;
				this.SendPropertyChanged("ShiftID");
				this.OnShiftIDChanged();
			}
		}
	}
	
	public System.DateTime StartDate
	{
		get
		{
			return this._StartDate;
		}
		set
		{
			if ((this._StartDate != value))
			{
				this.OnStartDateChanging(value);
				this.SendPropertyChanging();
				this._StartDate = value;
				this.SendPropertyChanged("StartDate");
				this.OnStartDateChanged();
			}
		}
	}
	
	public System.Nullable<System.DateTime> EndDate
	{
		get
		{
			return this._EndDate;
		}
		set
		{
			if ((this._EndDate != value))
			{
				this.OnEndDateChanging(value);
				this.SendPropertyChanging();
				this._EndDate = value;
				this.SendPropertyChanged("EndDate");
				this.OnEndDateChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public HumanResources_Department HumanResources_Department
	{
		get
		{
			return this._HumanResources_Department.Entity;
		}
		set
		{
			HumanResources_Department previousValue = this._HumanResources_Department.Entity;
			if (((previousValue != value) 
						|| (this._HumanResources_Department.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._HumanResources_Department.Entity = null;
					previousValue.HumanResources_EmployeeDepartmentHistory.Remove(this);
				}
				this._HumanResources_Department.Entity = value;
				if ((value != null))
				{
					value.HumanResources_EmployeeDepartmentHistory.Add(this);
					this._DepartmentID = value.DepartmentID;
				}
				else
				{
					this._DepartmentID = default(short);
				}
				this.SendPropertyChanged("HumanResources_Department");
			}
		}
	}
	
	public HumanResources_Employee HumanResources_Employee
	{
		get
		{
			return this._HumanResources_Employee.Entity;
		}
		set
		{
			HumanResources_Employee previousValue = this._HumanResources_Employee.Entity;
			if (((previousValue != value) 
						|| (this._HumanResources_Employee.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._HumanResources_Employee.Entity = null;
					previousValue.HumanResources_EmployeeDepartmentHistory.Remove(this);
				}
				this._HumanResources_Employee.Entity = value;
				if ((value != null))
				{
					value.HumanResources_EmployeeDepartmentHistory.Add(this);
					this._EmployeeID = value.EmployeeID;
				}
				else
				{
					this._EmployeeID = default(int);
				}
				this.SendPropertyChanged("HumanResources_Employee");
			}
		}
	}
	
	public HumanResources_Shift HumanResources_Shift
	{
		get
		{
			return this._HumanResources_Shift.Entity;
		}
		set
		{
			HumanResources_Shift previousValue = this._HumanResources_Shift.Entity;
			if (((previousValue != value) 
						|| (this._HumanResources_Shift.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._HumanResources_Shift.Entity = null;
					previousValue.HumanResources_EmployeeDepartmentHistory.Remove(this);
				}
				this._HumanResources_Shift.Entity = value;
				if ((value != null))
				{
					value.HumanResources_EmployeeDepartmentHistory.Add(this);
					this._ShiftID = value.ShiftID;
				}
				else
				{
					this._ShiftID = default(byte);
				}
				this.SendPropertyChanged("HumanResources_Shift");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

public partial class HumanResources_EmployeePayHistory : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _EmployeeID;
	
	private System.DateTime _RateChangeDate;
	
	private decimal _Rate;
	
	private byte _PayFrequency;
	
	private System.DateTime _ModifiedDate;
	
	private EntityRef<HumanResources_Employee> _HumanResources_Employee;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeIDChanging(int value);
    partial void OnEmployeeIDChanged();
    partial void OnRateChangeDateChanging(System.DateTime value);
    partial void OnRateChangeDateChanged();
    partial void OnRateChanging(decimal value);
    partial void OnRateChanged();
    partial void OnPayFrequencyChanging(byte value);
    partial void OnPayFrequencyChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public HumanResources_EmployeePayHistory()
	{
		this._HumanResources_Employee = default(EntityRef<HumanResources_Employee>);
		OnCreated();
	}
	
	public int EmployeeID
	{
		get
		{
			return this._EmployeeID;
		}
		set
		{
			if ((this._EmployeeID != value))
			{
				if (this._HumanResources_Employee.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnEmployeeIDChanging(value);
				this.SendPropertyChanging();
				this._EmployeeID = value;
				this.SendPropertyChanged("EmployeeID");
				this.OnEmployeeIDChanged();
			}
		}
	}
	
	public System.DateTime RateChangeDate
	{
		get
		{
			return this._RateChangeDate;
		}
		set
		{
			if ((this._RateChangeDate != value))
			{
				this.OnRateChangeDateChanging(value);
				this.SendPropertyChanging();
				this._RateChangeDate = value;
				this.SendPropertyChanged("RateChangeDate");
				this.OnRateChangeDateChanged();
			}
		}
	}
	
	public decimal Rate
	{
		get
		{
			return this._Rate;
		}
		set
		{
			if ((this._Rate != value))
			{
				this.OnRateChanging(value);
				this.SendPropertyChanging();
				this._Rate = value;
				this.SendPropertyChanged("Rate");
				this.OnRateChanged();
			}
		}
	}
	
	public byte PayFrequency
	{
		get
		{
			return this._PayFrequency;
		}
		set
		{
			if ((this._PayFrequency != value))
			{
				this.OnPayFrequencyChanging(value);
				this.SendPropertyChanging();
				this._PayFrequency = value;
				this.SendPropertyChanged("PayFrequency");
				this.OnPayFrequencyChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public HumanResources_Employee HumanResources_Employee
	{
		get
		{
			return this._HumanResources_Employee.Entity;
		}
		set
		{
			HumanResources_Employee previousValue = this._HumanResources_Employee.Entity;
			if (((previousValue != value) 
						|| (this._HumanResources_Employee.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._HumanResources_Employee.Entity = null;
					previousValue.HumanResources_EmployeePayHistory.Remove(this);
				}
				this._HumanResources_Employee.Entity = value;
				if ((value != null))
				{
					value.HumanResources_EmployeePayHistory.Add(this);
					this._EmployeeID = value.EmployeeID;
				}
				else
				{
					this._EmployeeID = default(int);
				}
				this.SendPropertyChanged("HumanResources_Employee");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

public partial class ErrorLog : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ErrorLogID;
	
	private System.DateTime _ErrorTime;
	
	private string _UserName;
	
	private int _ErrorNumber;
	
	private System.Nullable<int> _ErrorSeverity;
	
	private System.Nullable<int> _ErrorState;
	
	private string _ErrorProcedure;
	
	private System.Nullable<int> _ErrorLine;
	
	private string _ErrorMessage;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnErrorLogIDChanging(int value);
    partial void OnErrorLogIDChanged();
    partial void OnErrorTimeChanging(System.DateTime value);
    partial void OnErrorTimeChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnErrorNumberChanging(int value);
    partial void OnErrorNumberChanged();
    partial void OnErrorSeverityChanging(System.Nullable<int> value);
    partial void OnErrorSeverityChanged();
    partial void OnErrorStateChanging(System.Nullable<int> value);
    partial void OnErrorStateChanged();
    partial void OnErrorProcedureChanging(string value);
    partial void OnErrorProcedureChanged();
    partial void OnErrorLineChanging(System.Nullable<int> value);
    partial void OnErrorLineChanged();
    partial void OnErrorMessageChanging(string value);
    partial void OnErrorMessageChanged();
    #endregion
	
	public ErrorLog()
	{
		OnCreated();
	}
	
	public int ErrorLogID
	{
		get
		{
			return this._ErrorLogID;
		}
		set
		{
			if ((this._ErrorLogID != value))
			{
				this.OnErrorLogIDChanging(value);
				this.SendPropertyChanging();
				this._ErrorLogID = value;
				this.SendPropertyChanged("ErrorLogID");
				this.OnErrorLogIDChanged();
			}
		}
	}
	
	public System.DateTime ErrorTime
	{
		get
		{
			return this._ErrorTime;
		}
		set
		{
			if ((this._ErrorTime != value))
			{
				this.OnErrorTimeChanging(value);
				this.SendPropertyChanging();
				this._ErrorTime = value;
				this.SendPropertyChanged("ErrorTime");
				this.OnErrorTimeChanged();
			}
		}
	}
	
	public string UserName
	{
		get
		{
			return this._UserName;
		}
		set
		{
			if ((this._UserName != value))
			{
				this.OnUserNameChanging(value);
				this.SendPropertyChanging();
				this._UserName = value;
				this.SendPropertyChanged("UserName");
				this.OnUserNameChanged();
			}
		}
	}
	
	public int ErrorNumber
	{
		get
		{
			return this._ErrorNumber;
		}
		set
		{
			if ((this._ErrorNumber != value))
			{
				this.OnErrorNumberChanging(value);
				this.SendPropertyChanging();
				this._ErrorNumber = value;
				this.SendPropertyChanged("ErrorNumber");
				this.OnErrorNumberChanged();
			}
		}
	}
	
	public System.Nullable<int> ErrorSeverity
	{
		get
		{
			return this._ErrorSeverity;
		}
		set
		{
			if ((this._ErrorSeverity != value))
			{
				this.OnErrorSeverityChanging(value);
				this.SendPropertyChanging();
				this._ErrorSeverity = value;
				this.SendPropertyChanged("ErrorSeverity");
				this.OnErrorSeverityChanged();
			}
		}
	}
	
	public System.Nullable<int> ErrorState
	{
		get
		{
			return this._ErrorState;
		}
		set
		{
			if ((this._ErrorState != value))
			{
				this.OnErrorStateChanging(value);
				this.SendPropertyChanging();
				this._ErrorState = value;
				this.SendPropertyChanged("ErrorState");
				this.OnErrorStateChanged();
			}
		}
	}
	
	public string ErrorProcedure
	{
		get
		{
			return this._ErrorProcedure;
		}
		set
		{
			if ((this._ErrorProcedure != value))
			{
				this.OnErrorProcedureChanging(value);
				this.SendPropertyChanging();
				this._ErrorProcedure = value;
				this.SendPropertyChanged("ErrorProcedure");
				this.OnErrorProcedureChanged();
			}
		}
	}
	
	public System.Nullable<int> ErrorLine
	{
		get
		{
			return this._ErrorLine;
		}
		set
		{
			if ((this._ErrorLine != value))
			{
				this.OnErrorLineChanging(value);
				this.SendPropertyChanging();
				this._ErrorLine = value;
				this.SendPropertyChanged("ErrorLine");
				this.OnErrorLineChanged();
			}
		}
	}
	
	public string ErrorMessage
	{
		get
		{
			return this._ErrorMessage;
		}
		set
		{
			if ((this._ErrorMessage != value))
			{
				this.OnErrorMessageChanging(value);
				this.SendPropertyChanging();
				this._ErrorMessage = value;
				this.SendPropertyChanged("ErrorMessage");
				this.OnErrorMessageChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

public partial class Production_Illustration : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IllustrationID;
	
	private System.Xml.Linq.XElement _Diagram;
	
	private System.DateTime _ModifiedDate;
	
	private EntitySet<Production_ProductModelIllustration> _Production_ProductModelIllustration;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIllustrationIDChanging(int value);
    partial void OnIllustrationIDChanged();
    partial void OnDiagramChanging(System.Xml.Linq.XElement value);
    partial void OnDiagramChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Production_Illustration()
	{
		this._Production_ProductModelIllustration = new EntitySet<Production_ProductModelIllustration>(new Action<Production_ProductModelIllustration>(this.attach_Production_ProductModelIllustration), new Action<Production_ProductModelIllustration>(this.detach_Production_ProductModelIllustration));
		OnCreated();
	}
	
	public int IllustrationID
	{
		get
		{
			return this._IllustrationID;
		}
		set
		{
			if ((this._IllustrationID != value))
			{
				this.OnIllustrationIDChanging(value);
				this.SendPropertyChanging();
				this._IllustrationID = value;
				this.SendPropertyChanged("IllustrationID");
				this.OnIllustrationIDChanged();
			}
		}
	}
	
	public System.Xml.Linq.XElement Diagram
	{
		get
		{
			return this._Diagram;
		}
		set
		{
			if ((this._Diagram != value))
			{
				this.OnDiagramChanging(value);
				this.SendPropertyChanging();
				this._Diagram = value;
				this.SendPropertyChanged("Diagram");
				this.OnDiagramChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public EntitySet<Production_ProductModelIllustration> Production_ProductModelIllustration
	{
		get
		{
			return this._Production_ProductModelIllustration;
		}
		set
		{
			this._Production_ProductModelIllustration.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Production_ProductModelIllustration(Production_ProductModelIllustration entity)
	{
		this.SendPropertyChanging();
		entity.Production_Illustration = this;
	}
	
	private void detach_Production_ProductModelIllustration(Production_ProductModelIllustration entity)
	{
		this.SendPropertyChanging();
		entity.Production_Illustration = null;
	}
}

public partial class Sales_Individual : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _CustomerID;
	
	private int _ContactID;
	
	private System.Xml.Linq.XElement _Demographics;
	
	private System.DateTime _ModifiedDate;
	
	private EntityRef<Person_Contact> _Person_Contact;
	
	private EntityRef<Sales_Customer> _Sales_Customer;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnContactIDChanging(int value);
    partial void OnContactIDChanged();
    partial void OnDemographicsChanging(System.Xml.Linq.XElement value);
    partial void OnDemographicsChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Sales_Individual()
	{
		this._Person_Contact = default(EntityRef<Person_Contact>);
		this._Sales_Customer = default(EntityRef<Sales_Customer>);
		OnCreated();
	}
	
	public int CustomerID
	{
		get
		{
			return this._CustomerID;
		}
		set
		{
			if ((this._CustomerID != value))
			{
				if (this._Sales_Customer.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCustomerIDChanging(value);
				this.SendPropertyChanging();
				this._CustomerID = value;
				this.SendPropertyChanged("CustomerID");
				this.OnCustomerIDChanged();
			}
		}
	}
	
	public int ContactID
	{
		get
		{
			return this._ContactID;
		}
		set
		{
			if ((this._ContactID != value))
			{
				if (this._Person_Contact.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnContactIDChanging(value);
				this.SendPropertyChanging();
				this._ContactID = value;
				this.SendPropertyChanged("ContactID");
				this.OnContactIDChanged();
			}
		}
	}
	
	public System.Xml.Linq.XElement Demographics
	{
		get
		{
			return this._Demographics;
		}
		set
		{
			if ((this._Demographics != value))
			{
				this.OnDemographicsChanging(value);
				this.SendPropertyChanging();
				this._Demographics = value;
				this.SendPropertyChanged("Demographics");
				this.OnDemographicsChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public Person_Contact Person_Contact
	{
		get
		{
			return this._Person_Contact.Entity;
		}
		set
		{
			Person_Contact previousValue = this._Person_Contact.Entity;
			if (((previousValue != value) 
						|| (this._Person_Contact.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Person_Contact.Entity = null;
					previousValue.Sales_Individual.Remove(this);
				}
				this._Person_Contact.Entity = value;
				if ((value != null))
				{
					value.Sales_Individual.Add(this);
					this._ContactID = value.ContactID;
				}
				else
				{
					this._ContactID = default(int);
				}
				this.SendPropertyChanged("Person_Contact");
			}
		}
	}
	
	public Sales_Customer Sales_Customer
	{
		get
		{
			return this._Sales_Customer.Entity;
		}
		set
		{
			Sales_Customer previousValue = this._Sales_Customer.Entity;
			if (((previousValue != value) 
						|| (this._Sales_Customer.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Sales_Customer.Entity = null;
					previousValue.Sales_Individual = null;
				}
				this._Sales_Customer.Entity = value;
				if ((value != null))
				{
					value.Sales_Individual = this;
					this._CustomerID = value.CustomerID;
				}
				else
				{
					this._CustomerID = default(int);
				}
				this.SendPropertyChanged("Sales_Customer");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

public partial class HumanResources_JobCandidate : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _JobCandidateID;
	
	private System.Nullable<int> _EmployeeID;
	
	private System.Xml.Linq.XElement _Resume;
	
	private System.DateTime _ModifiedDate;
	
	private EntityRef<HumanResources_Employee> _HumanResources_Employee;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJobCandidateIDChanging(int value);
    partial void OnJobCandidateIDChanged();
    partial void OnEmployeeIDChanging(System.Nullable<int> value);
    partial void OnEmployeeIDChanged();
    partial void OnResumeChanging(System.Xml.Linq.XElement value);
    partial void OnResumeChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public HumanResources_JobCandidate()
	{
		this._HumanResources_Employee = default(EntityRef<HumanResources_Employee>);
		OnCreated();
	}
	
	public int JobCandidateID
	{
		get
		{
			return this._JobCandidateID;
		}
		set
		{
			if ((this._JobCandidateID != value))
			{
				this.OnJobCandidateIDChanging(value);
				this.SendPropertyChanging();
				this._JobCandidateID = value;
				this.SendPropertyChanged("JobCandidateID");
				this.OnJobCandidateIDChanged();
			}
		}
	}
	
	public System.Nullable<int> EmployeeID
	{
		get
		{
			return this._EmployeeID;
		}
		set
		{
			if ((this._EmployeeID != value))
			{
				if (this._HumanResources_Employee.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnEmployeeIDChanging(value);
				this.SendPropertyChanging();
				this._EmployeeID = value;
				this.SendPropertyChanged("EmployeeID");
				this.OnEmployeeIDChanged();
			}
		}
	}
	
	public System.Xml.Linq.XElement Resume
	{
		get
		{
			return this._Resume;
		}
		set
		{
			if ((this._Resume != value))
			{
				this.OnResumeChanging(value);
				this.SendPropertyChanging();
				this._Resume = value;
				this.SendPropertyChanged("Resume");
				this.OnResumeChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public HumanResources_Employee HumanResources_Employee
	{
		get
		{
			return this._HumanResources_Employee.Entity;
		}
		set
		{
			HumanResources_Employee previousValue = this._HumanResources_Employee.Entity;
			if (((previousValue != value) 
						|| (this._HumanResources_Employee.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._HumanResources_Employee.Entity = null;
					previousValue.HumanResources_JobCandidate.Remove(this);
				}
				this._HumanResources_Employee.Entity = value;
				if ((value != null))
				{
					value.HumanResources_JobCandidate.Add(this);
					this._EmployeeID = value.EmployeeID;
				}
				else
				{
					this._EmployeeID = default(Nullable<int>);
				}
				this.SendPropertyChanged("HumanResources_Employee");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

public partial class Production_Location : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private short _LocationID;
	
	private string _Name;
	
	private decimal _CostRate;
	
	private decimal _Availability;
	
	private System.DateTime _ModifiedDate;
	
	private EntitySet<Production_ProductInventory> _Production_ProductInventory;
	
	private EntitySet<Production_WorkOrderRouting> _Production_WorkOrderRouting;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLocationIDChanging(short value);
    partial void OnLocationIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCostRateChanging(decimal value);
    partial void OnCostRateChanged();
    partial void OnAvailabilityChanging(decimal value);
    partial void OnAvailabilityChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Production_Location()
	{
		this._Production_ProductInventory = new EntitySet<Production_ProductInventory>(new Action<Production_ProductInventory>(this.attach_Production_ProductInventory), new Action<Production_ProductInventory>(this.detach_Production_ProductInventory));
		this._Production_WorkOrderRouting = new EntitySet<Production_WorkOrderRouting>(new Action<Production_WorkOrderRouting>(this.attach_Production_WorkOrderRouting), new Action<Production_WorkOrderRouting>(this.detach_Production_WorkOrderRouting));
		OnCreated();
	}
	
	public short LocationID
	{
		get
		{
			return this._LocationID;
		}
		set
		{
			if ((this._LocationID != value))
			{
				this.OnLocationIDChanging(value);
				this.SendPropertyChanging();
				this._LocationID = value;
				this.SendPropertyChanged("LocationID");
				this.OnLocationIDChanged();
			}
		}
	}
	
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	public decimal CostRate
	{
		get
		{
			return this._CostRate;
		}
		set
		{
			if ((this._CostRate != value))
			{
				this.OnCostRateChanging(value);
				this.SendPropertyChanging();
				this._CostRate = value;
				this.SendPropertyChanged("CostRate");
				this.OnCostRateChanged();
			}
		}
	}
	
	public decimal Availability
	{
		get
		{
			return this._Availability;
		}
		set
		{
			if ((this._Availability != value))
			{
				this.OnAvailabilityChanging(value);
				this.SendPropertyChanging();
				this._Availability = value;
				this.SendPropertyChanged("Availability");
				this.OnAvailabilityChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public EntitySet<Production_ProductInventory> Production_ProductInventory
	{
		get
		{
			return this._Production_ProductInventory;
		}
		set
		{
			this._Production_ProductInventory.Assign(value);
		}
	}
	
	public EntitySet<Production_WorkOrderRouting> Production_WorkOrderRouting
	{
		get
		{
			return this._Production_WorkOrderRouting;
		}
		set
		{
			this._Production_WorkOrderRouting.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Production_ProductInventory(Production_ProductInventory entity)
	{
		this.SendPropertyChanging();
		entity.Production_Location = this;
	}
	
	private void detach_Production_ProductInventory(Production_ProductInventory entity)
	{
		this.SendPropertyChanging();
		entity.Production_Location = null;
	}
	
	private void attach_Production_WorkOrderRouting(Production_WorkOrderRouting entity)
	{
		this.SendPropertyChanging();
		entity.Production_Location = this;
	}
	
	private void detach_Production_WorkOrderRouting(Production_WorkOrderRouting entity)
	{
		this.SendPropertyChanging();
		entity.Production_Location = null;
	}
}

public partial class Production_Product : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ProductID;
	
	private string _Name;
	
	private string _ProductNumber;
	
	private bool _MakeFlag;
	
	private bool _FinishedGoodsFlag;
	
	private string _Color;
	
	private short _SafetyStockLevel;
	
	private short _ReorderPoint;
	
	private decimal _StandardCost;
	
	private decimal _ListPrice;
	
	private string _Size;
	
	private string _SizeUnitMeasureCode;
	
	private string _WeightUnitMeasureCode;
	
	private System.Nullable<decimal> _Weight;
	
	private int _DaysToManufacture;
	
	private string _ProductLine;
	
	private string _Class;
	
	private string _Style;
	
	private System.Nullable<int> _ProductSubcategoryID;
	
	private System.Nullable<int> _ProductModelID;
	
	private System.DateTime _SellStartDate;
	
	private System.Nullable<System.DateTime> _SellEndDate;
	
	private System.Nullable<System.DateTime> _DiscontinuedDate;
	
	private System.Guid _Rowguid;
	
	private System.DateTime _ModifiedDate;
	
	private EntitySet<Production_BillOfMaterials> _Production_BillOfMaterials;
	
	private EntitySet<Production_BillOfMaterials> _Product;
	
	private EntityRef<Production_ProductModel> _Production_ProductModel;
	
	private EntityRef<Production_ProductSubcategory> _Production_ProductSubcategory;
	
	private EntityRef<Production_UnitMeasure> _Production_UnitMeasure;
	
	private EntityRef<Production_UnitMeasure> _WeightUnitMeasureCodeProduction_UnitMeasure;
	
	private EntitySet<Production_ProductCostHistory> _Production_ProductCostHistory;
	
	private EntitySet<Production_ProductDocument> _Production_ProductDocument;
	
	private EntitySet<Production_ProductInventory> _Production_ProductInventory;
	
	private EntitySet<Production_ProductListPriceHistory> _Production_ProductListPriceHistory;
	
	private EntitySet<Production_ProductProductPhoto> _Production_ProductProductPhoto;
	
	private EntitySet<Production_ProductReview> _Production_ProductReview;
	
	private EntitySet<Production_TransactionHistory> _Production_TransactionHistory;
	
	private EntitySet<Production_WorkOrder> _Production_WorkOrder;
	
	private EntitySet<Purchasing_ProductVendor> _Purchasing_ProductVendor;
	
	private EntitySet<Purchasing_PurchaseOrderDetail> _Purchasing_PurchaseOrderDetail;
	
	private EntitySet<Sales_ShoppingCartItem> _Sales_ShoppingCartItem;
	
	private EntitySet<Sales_SpecialOfferProduct> _Sales_SpecialOfferProduct;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnProductNumberChanging(string value);
    partial void OnProductNumberChanged();
    partial void OnMakeFlagChanging(bool value);
    partial void OnMakeFlagChanged();
    partial void OnFinishedGoodsFlagChanging(bool value);
    partial void OnFinishedGoodsFlagChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    partial void OnSafetyStockLevelChanging(short value);
    partial void OnSafetyStockLevelChanged();
    partial void OnReorderPointChanging(short value);
    partial void OnReorderPointChanged();
    partial void OnStandardCostChanging(decimal value);
    partial void OnStandardCostChanged();
    partial void OnListPriceChanging(decimal value);
    partial void OnListPriceChanged();
    partial void OnSizeChanging(string value);
    partial void OnSizeChanged();
    partial void OnSizeUnitMeasureCodeChanging(string value);
    partial void OnSizeUnitMeasureCodeChanged();
    partial void OnWeightUnitMeasureCodeChanging(string value);
    partial void OnWeightUnitMeasureCodeChanged();
    partial void OnWeightChanging(System.Nullable<decimal> value);
    partial void OnWeightChanged();
    partial void OnDaysToManufactureChanging(int value);
    partial void OnDaysToManufactureChanged();
    partial void OnProductLineChanging(string value);
    partial void OnProductLineChanged();
    partial void OnClassChanging(string value);
    partial void OnClassChanged();
    partial void OnStyleChanging(string value);
    partial void OnStyleChanged();
    partial void OnProductSubcategoryIDChanging(System.Nullable<int> value);
    partial void OnProductSubcategoryIDChanged();
    partial void OnProductModelIDChanging(System.Nullable<int> value);
    partial void OnProductModelIDChanged();
    partial void OnSellStartDateChanging(System.DateTime value);
    partial void OnSellStartDateChanged();
    partial void OnSellEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSellEndDateChanged();
    partial void OnDiscontinuedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDiscontinuedDateChanged();
    partial void OnRowguidChanging(System.Guid value);
    partial void OnRowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Production_Product()
	{
		this._Production_BillOfMaterials = new EntitySet<Production_BillOfMaterials>(new Action<Production_BillOfMaterials>(this.attach_Production_BillOfMaterials), new Action<Production_BillOfMaterials>(this.detach_Production_BillOfMaterials));
		this._Product = new EntitySet<Production_BillOfMaterials>(new Action<Production_BillOfMaterials>(this.attach_Product), new Action<Production_BillOfMaterials>(this.detach_Product));
		this._Production_ProductModel = default(EntityRef<Production_ProductModel>);
		this._Production_ProductSubcategory = default(EntityRef<Production_ProductSubcategory>);
		this._Production_UnitMeasure = default(EntityRef<Production_UnitMeasure>);
		this._WeightUnitMeasureCodeProduction_UnitMeasure = default(EntityRef<Production_UnitMeasure>);
		this._Production_ProductCostHistory = new EntitySet<Production_ProductCostHistory>(new Action<Production_ProductCostHistory>(this.attach_Production_ProductCostHistory), new Action<Production_ProductCostHistory>(this.detach_Production_ProductCostHistory));
		this._Production_ProductDocument = new EntitySet<Production_ProductDocument>(new Action<Production_ProductDocument>(this.attach_Production_ProductDocument), new Action<Production_ProductDocument>(this.detach_Production_ProductDocument));
		this._Production_ProductInventory = new EntitySet<Production_ProductInventory>(new Action<Production_ProductInventory>(this.attach_Production_ProductInventory), new Action<Production_ProductInventory>(this.detach_Production_ProductInventory));
		this._Production_ProductListPriceHistory = new EntitySet<Production_ProductListPriceHistory>(new Action<Production_ProductListPriceHistory>(this.attach_Production_ProductListPriceHistory), new Action<Production_ProductListPriceHistory>(this.detach_Production_ProductListPriceHistory));
		this._Production_ProductProductPhoto = new EntitySet<Production_ProductProductPhoto>(new Action<Production_ProductProductPhoto>(this.attach_Production_ProductProductPhoto), new Action<Production_ProductProductPhoto>(this.detach_Production_ProductProductPhoto));
		this._Production_ProductReview = new EntitySet<Production_ProductReview>(new Action<Production_ProductReview>(this.attach_Production_ProductReview), new Action<Production_ProductReview>(this.detach_Production_ProductReview));
		this._Production_TransactionHistory = new EntitySet<Production_TransactionHistory>(new Action<Production_TransactionHistory>(this.attach_Production_TransactionHistory), new Action<Production_TransactionHistory>(this.detach_Production_TransactionHistory));
		this._Production_WorkOrder = new EntitySet<Production_WorkOrder>(new Action<Production_WorkOrder>(this.attach_Production_WorkOrder), new Action<Production_WorkOrder>(this.detach_Production_WorkOrder));
		this._Purchasing_ProductVendor = new EntitySet<Purchasing_ProductVendor>(new Action<Purchasing_ProductVendor>(this.attach_Purchasing_ProductVendor), new Action<Purchasing_ProductVendor>(this.detach_Purchasing_ProductVendor));
		this._Purchasing_PurchaseOrderDetail = new EntitySet<Purchasing_PurchaseOrderDetail>(new Action<Purchasing_PurchaseOrderDetail>(this.attach_Purchasing_PurchaseOrderDetail), new Action<Purchasing_PurchaseOrderDetail>(this.detach_Purchasing_PurchaseOrderDetail));
		this._Sales_ShoppingCartItem = new EntitySet<Sales_ShoppingCartItem>(new Action<Sales_ShoppingCartItem>(this.attach_Sales_ShoppingCartItem), new Action<Sales_ShoppingCartItem>(this.detach_Sales_ShoppingCartItem));
		this._Sales_SpecialOfferProduct = new EntitySet<Sales_SpecialOfferProduct>(new Action<Sales_SpecialOfferProduct>(this.attach_Sales_SpecialOfferProduct), new Action<Sales_SpecialOfferProduct>(this.detach_Sales_SpecialOfferProduct));
		OnCreated();
	}
	
	public int ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				this.OnProductIDChanging(value);
				this.SendPropertyChanging();
				this._ProductID = value;
				this.SendPropertyChanged("ProductID");
				this.OnProductIDChanged();
			}
		}
	}
	
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	public string ProductNumber
	{
		get
		{
			return this._ProductNumber;
		}
		set
		{
			if ((this._ProductNumber != value))
			{
				this.OnProductNumberChanging(value);
				this.SendPropertyChanging();
				this._ProductNumber = value;
				this.SendPropertyChanged("ProductNumber");
				this.OnProductNumberChanged();
			}
		}
	}
	
	public bool MakeFlag
	{
		get
		{
			return this._MakeFlag;
		}
		set
		{
			if ((this._MakeFlag != value))
			{
				this.OnMakeFlagChanging(value);
				this.SendPropertyChanging();
				this._MakeFlag = value;
				this.SendPropertyChanged("MakeFlag");
				this.OnMakeFlagChanged();
			}
		}
	}
	
	public bool FinishedGoodsFlag
	{
		get
		{
			return this._FinishedGoodsFlag;
		}
		set
		{
			if ((this._FinishedGoodsFlag != value))
			{
				this.OnFinishedGoodsFlagChanging(value);
				this.SendPropertyChanging();
				this._FinishedGoodsFlag = value;
				this.SendPropertyChanged("FinishedGoodsFlag");
				this.OnFinishedGoodsFlagChanged();
			}
		}
	}
	
	public string Color
	{
		get
		{
			return this._Color;
		}
		set
		{
			if ((this._Color != value))
			{
				this.OnColorChanging(value);
				this.SendPropertyChanging();
				this._Color = value;
				this.SendPropertyChanged("Color");
				this.OnColorChanged();
			}
		}
	}
	
	public short SafetyStockLevel
	{
		get
		{
			return this._SafetyStockLevel;
		}
		set
		{
			if ((this._SafetyStockLevel != value))
			{
				this.OnSafetyStockLevelChanging(value);
				this.SendPropertyChanging();
				this._SafetyStockLevel = value;
				this.SendPropertyChanged("SafetyStockLevel");
				this.OnSafetyStockLevelChanged();
			}
		}
	}
	
	public short ReorderPoint
	{
		get
		{
			return this._ReorderPoint;
		}
		set
		{
			if ((this._ReorderPoint != value))
			{
				this.OnReorderPointChanging(value);
				this.SendPropertyChanging();
				this._ReorderPoint = value;
				this.SendPropertyChanged("ReorderPoint");
				this.OnReorderPointChanged();
			}
		}
	}
	
	public decimal StandardCost
	{
		get
		{
			return this._StandardCost;
		}
		set
		{
			if ((this._StandardCost != value))
			{
				this.OnStandardCostChanging(value);
				this.SendPropertyChanging();
				this._StandardCost = value;
				this.SendPropertyChanged("StandardCost");
				this.OnStandardCostChanged();
			}
		}
	}
	
	public decimal ListPrice
	{
		get
		{
			return this._ListPrice;
		}
		set
		{
			if ((this._ListPrice != value))
			{
				this.OnListPriceChanging(value);
				this.SendPropertyChanging();
				this._ListPrice = value;
				this.SendPropertyChanged("ListPrice");
				this.OnListPriceChanged();
			}
		}
	}
	
	public string Size
	{
		get
		{
			return this._Size;
		}
		set
		{
			if ((this._Size != value))
			{
				this.OnSizeChanging(value);
				this.SendPropertyChanging();
				this._Size = value;
				this.SendPropertyChanged("Size");
				this.OnSizeChanged();
			}
		}
	}
	
	public string SizeUnitMeasureCode
	{
		get
		{
			return this._SizeUnitMeasureCode;
		}
		set
		{
			if ((this._SizeUnitMeasureCode != value))
			{
				if (this._Production_UnitMeasure.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSizeUnitMeasureCodeChanging(value);
				this.SendPropertyChanging();
				this._SizeUnitMeasureCode = value;
				this.SendPropertyChanged("SizeUnitMeasureCode");
				this.OnSizeUnitMeasureCodeChanged();
			}
		}
	}
	
	public string WeightUnitMeasureCode
	{
		get
		{
			return this._WeightUnitMeasureCode;
		}
		set
		{
			if ((this._WeightUnitMeasureCode != value))
			{
				if (this._WeightUnitMeasureCodeProduction_UnitMeasure.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnWeightUnitMeasureCodeChanging(value);
				this.SendPropertyChanging();
				this._WeightUnitMeasureCode = value;
				this.SendPropertyChanged("WeightUnitMeasureCode");
				this.OnWeightUnitMeasureCodeChanged();
			}
		}
	}
	
	public System.Nullable<decimal> Weight
	{
		get
		{
			return this._Weight;
		}
		set
		{
			if ((this._Weight != value))
			{
				this.OnWeightChanging(value);
				this.SendPropertyChanging();
				this._Weight = value;
				this.SendPropertyChanged("Weight");
				this.OnWeightChanged();
			}
		}
	}
	
	public int DaysToManufacture
	{
		get
		{
			return this._DaysToManufacture;
		}
		set
		{
			if ((this._DaysToManufacture != value))
			{
				this.OnDaysToManufactureChanging(value);
				this.SendPropertyChanging();
				this._DaysToManufacture = value;
				this.SendPropertyChanged("DaysToManufacture");
				this.OnDaysToManufactureChanged();
			}
		}
	}
	
	public string ProductLine
	{
		get
		{
			return this._ProductLine;
		}
		set
		{
			if ((this._ProductLine != value))
			{
				this.OnProductLineChanging(value);
				this.SendPropertyChanging();
				this._ProductLine = value;
				this.SendPropertyChanged("ProductLine");
				this.OnProductLineChanged();
			}
		}
	}
	
	public string Class
	{
		get
		{
			return this._Class;
		}
		set
		{
			if ((this._Class != value))
			{
				this.OnClassChanging(value);
				this.SendPropertyChanging();
				this._Class = value;
				this.SendPropertyChanged("Class");
				this.OnClassChanged();
			}
		}
	}
	
	public string Style
	{
		get
		{
			return this._Style;
		}
		set
		{
			if ((this._Style != value))
			{
				this.OnStyleChanging(value);
				this.SendPropertyChanging();
				this._Style = value;
				this.SendPropertyChanged("Style");
				this.OnStyleChanged();
			}
		}
	}
	
	public System.Nullable<int> ProductSubcategoryID
	{
		get
		{
			return this._ProductSubcategoryID;
		}
		set
		{
			if ((this._ProductSubcategoryID != value))
			{
				if (this._Production_ProductSubcategory.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProductSubcategoryIDChanging(value);
				this.SendPropertyChanging();
				this._ProductSubcategoryID = value;
				this.SendPropertyChanged("ProductSubcategoryID");
				this.OnProductSubcategoryIDChanged();
			}
		}
	}
	
	public System.Nullable<int> ProductModelID
	{
		get
		{
			return this._ProductModelID;
		}
		set
		{
			if ((this._ProductModelID != value))
			{
				if (this._Production_ProductModel.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProductModelIDChanging(value);
				this.SendPropertyChanging();
				this._ProductModelID = value;
				this.SendPropertyChanged("ProductModelID");
				this.OnProductModelIDChanged();
			}
		}
	}
	
	public System.DateTime SellStartDate
	{
		get
		{
			return this._SellStartDate;
		}
		set
		{
			if ((this._SellStartDate != value))
			{
				this.OnSellStartDateChanging(value);
				this.SendPropertyChanging();
				this._SellStartDate = value;
				this.SendPropertyChanged("SellStartDate");
				this.OnSellStartDateChanged();
			}
		}
	}
	
	public System.Nullable<System.DateTime> SellEndDate
	{
		get
		{
			return this._SellEndDate;
		}
		set
		{
			if ((this._SellEndDate != value))
			{
				this.OnSellEndDateChanging(value);
				this.SendPropertyChanging();
				this._SellEndDate = value;
				this.SendPropertyChanged("SellEndDate");
				this.OnSellEndDateChanged();
			}
		}
	}
	
	public System.Nullable<System.DateTime> DiscontinuedDate
	{
		get
		{
			return this._DiscontinuedDate;
		}
		set
		{
			if ((this._DiscontinuedDate != value))
			{
				this.OnDiscontinuedDateChanging(value);
				this.SendPropertyChanging();
				this._DiscontinuedDate = value;
				this.SendPropertyChanged("DiscontinuedDate");
				this.OnDiscontinuedDateChanged();
			}
		}
	}
	
	public System.Guid Rowguid
	{
		get
		{
			return this._Rowguid;
		}
		set
		{
			if ((this._Rowguid != value))
			{
				this.OnRowguidChanging(value);
				this.SendPropertyChanging();
				this._Rowguid = value;
				this.SendPropertyChanged("Rowguid");
				this.OnRowguidChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public EntitySet<Production_BillOfMaterials> Production_BillOfMaterials
	{
		get
		{
			return this._Production_BillOfMaterials;
		}
		set
		{
			this._Production_BillOfMaterials.Assign(value);
		}
	}
	
	public EntitySet<Production_BillOfMaterials> Product
	{
		get
		{
			return this._Product;
		}
		set
		{
			this._Product.Assign(value);
		}
	}
	
	public Production_ProductModel Production_ProductModel
	{
		get
		{
			return this._Production_ProductModel.Entity;
		}
		set
		{
			Production_ProductModel previousValue = this._Production_ProductModel.Entity;
			if (((previousValue != value) 
						|| (this._Production_ProductModel.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Production_ProductModel.Entity = null;
					previousValue.Production_Product.Remove(this);
				}
				this._Production_ProductModel.Entity = value;
				if ((value != null))
				{
					value.Production_Product.Add(this);
					this._ProductModelID = value.ProductModelID;
				}
				else
				{
					this._ProductModelID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Production_ProductModel");
			}
		}
	}
	
	public Production_ProductSubcategory Production_ProductSubcategory
	{
		get
		{
			return this._Production_ProductSubcategory.Entity;
		}
		set
		{
			Production_ProductSubcategory previousValue = this._Production_ProductSubcategory.Entity;
			if (((previousValue != value) 
						|| (this._Production_ProductSubcategory.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Production_ProductSubcategory.Entity = null;
					previousValue.Production_Product.Remove(this);
				}
				this._Production_ProductSubcategory.Entity = value;
				if ((value != null))
				{
					value.Production_Product.Add(this);
					this._ProductSubcategoryID = value.ProductSubcategoryID;
				}
				else
				{
					this._ProductSubcategoryID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Production_ProductSubcategory");
			}
		}
	}
	
	public Production_UnitMeasure Production_UnitMeasure
	{
		get
		{
			return this._Production_UnitMeasure.Entity;
		}
		set
		{
			Production_UnitMeasure previousValue = this._Production_UnitMeasure.Entity;
			if (((previousValue != value) 
						|| (this._Production_UnitMeasure.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Production_UnitMeasure.Entity = null;
					previousValue.Production_Product.Remove(this);
				}
				this._Production_UnitMeasure.Entity = value;
				if ((value != null))
				{
					value.Production_Product.Add(this);
					this._SizeUnitMeasureCode = value.UnitMeasureCode;
				}
				else
				{
					this._SizeUnitMeasureCode = default(string);
				}
				this.SendPropertyChanged("Production_UnitMeasure");
			}
		}
	}
	
	public Production_UnitMeasure WeightUnitMeasureCodeProduction_UnitMeasure
	{
		get
		{
			return this._WeightUnitMeasureCodeProduction_UnitMeasure.Entity;
		}
		set
		{
			Production_UnitMeasure previousValue = this._WeightUnitMeasureCodeProduction_UnitMeasure.Entity;
			if (((previousValue != value) 
						|| (this._WeightUnitMeasureCodeProduction_UnitMeasure.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._WeightUnitMeasureCodeProduction_UnitMeasure.Entity = null;
					previousValue.UnitMeasureCodeProduction_Product.Remove(this);
				}
				this._WeightUnitMeasureCodeProduction_UnitMeasure.Entity = value;
				if ((value != null))
				{
					value.UnitMeasureCodeProduction_Product.Add(this);
					this._WeightUnitMeasureCode = value.UnitMeasureCode;
				}
				else
				{
					this._WeightUnitMeasureCode = default(string);
				}
				this.SendPropertyChanged("WeightUnitMeasureCodeProduction_UnitMeasure");
			}
		}
	}
	
	public EntitySet<Production_ProductCostHistory> Production_ProductCostHistory
	{
		get
		{
			return this._Production_ProductCostHistory;
		}
		set
		{
			this._Production_ProductCostHistory.Assign(value);
		}
	}
	
	public EntitySet<Production_ProductDocument> Production_ProductDocument
	{
		get
		{
			return this._Production_ProductDocument;
		}
		set
		{
			this._Production_ProductDocument.Assign(value);
		}
	}
	
	public EntitySet<Production_ProductInventory> Production_ProductInventory
	{
		get
		{
			return this._Production_ProductInventory;
		}
		set
		{
			this._Production_ProductInventory.Assign(value);
		}
	}
	
	public EntitySet<Production_ProductListPriceHistory> Production_ProductListPriceHistory
	{
		get
		{
			return this._Production_ProductListPriceHistory;
		}
		set
		{
			this._Production_ProductListPriceHistory.Assign(value);
		}
	}
	
	public EntitySet<Production_ProductProductPhoto> Production_ProductProductPhoto
	{
		get
		{
			return this._Production_ProductProductPhoto;
		}
		set
		{
			this._Production_ProductProductPhoto.Assign(value);
		}
	}
	
	public EntitySet<Production_ProductReview> Production_ProductReview
	{
		get
		{
			return this._Production_ProductReview;
		}
		set
		{
			this._Production_ProductReview.Assign(value);
		}
	}
	
	public EntitySet<Production_TransactionHistory> Production_TransactionHistory
	{
		get
		{
			return this._Production_TransactionHistory;
		}
		set
		{
			this._Production_TransactionHistory.Assign(value);
		}
	}
	
	public EntitySet<Production_WorkOrder> Production_WorkOrder
	{
		get
		{
			return this._Production_WorkOrder;
		}
		set
		{
			this._Production_WorkOrder.Assign(value);
		}
	}
	
	public EntitySet<Purchasing_ProductVendor> Purchasing_ProductVendor
	{
		get
		{
			return this._Purchasing_ProductVendor;
		}
		set
		{
			this._Purchasing_ProductVendor.Assign(value);
		}
	}
	
	public EntitySet<Purchasing_PurchaseOrderDetail> Purchasing_PurchaseOrderDetail
	{
		get
		{
			return this._Purchasing_PurchaseOrderDetail;
		}
		set
		{
			this._Purchasing_PurchaseOrderDetail.Assign(value);
		}
	}
	
	public EntitySet<Sales_ShoppingCartItem> Sales_ShoppingCartItem
	{
		get
		{
			return this._Sales_ShoppingCartItem;
		}
		set
		{
			this._Sales_ShoppingCartItem.Assign(value);
		}
	}
	
	public EntitySet<Sales_SpecialOfferProduct> Sales_SpecialOfferProduct
	{
		get
		{
			return this._Sales_SpecialOfferProduct;
		}
		set
		{
			this._Sales_SpecialOfferProduct.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Production_BillOfMaterials(Production_BillOfMaterials entity)
	{
		this.SendPropertyChanging();
		entity.Production_Product = this;
	}
	
	private void detach_Production_BillOfMaterials(Production_BillOfMaterials entity)
	{
		this.SendPropertyChanging();
		entity.Production_Product = null;
	}
	
	private void attach_Product(Production_BillOfMaterials entity)
	{
		this.SendPropertyChanging();
		entity.ProductAssembly = this;
	}
	
	private void detach_Product(Production_BillOfMaterials entity)
	{
		this.SendPropertyChanging();
		entity.ProductAssembly = null;
	}
	
	private void attach_Production_ProductCostHistory(Production_ProductCostHistory entity)
	{
		this.SendPropertyChanging();
		entity.Production_Product = this;
	}
	
	private void detach_Production_ProductCostHistory(Production_ProductCostHistory entity)
	{
		this.SendPropertyChanging();
		entity.Production_Product = null;
	}
	
	private void attach_Production_ProductDocument(Production_ProductDocument entity)
	{
		this.SendPropertyChanging();
		entity.Production_Product = this;
	}
	
	private void detach_Production_ProductDocument(Production_ProductDocument entity)
	{
		this.SendPropertyChanging();
		entity.Production_Product = null;
	}
	
	private void attach_Production_ProductInventory(Production_ProductInventory entity)
	{
		this.SendPropertyChanging();
		entity.Production_Product = this;
	}
	
	private void detach_Production_ProductInventory(Production_ProductInventory entity)
	{
		this.SendPropertyChanging();
		entity.Production_Product = null;
	}
	
	private void attach_Production_ProductListPriceHistory(Production_ProductListPriceHistory entity)
	{
		this.SendPropertyChanging();
		entity.Production_Product = this;
	}
	
	private void detach_Production_ProductListPriceHistory(Production_ProductListPriceHistory entity)
	{
		this.SendPropertyChanging();
		entity.Production_Product = null;
	}
	
	private void attach_Production_ProductProductPhoto(Production_ProductProductPhoto entity)
	{
		this.SendPropertyChanging();
		entity.Production_Product = this;
	}
	
	private void detach_Production_ProductProductPhoto(Production_ProductProductPhoto entity)
	{
		this.SendPropertyChanging();
		entity.Production_Product = null;
	}
	
	private void attach_Production_ProductReview(Production_ProductReview entity)
	{
		this.SendPropertyChanging();
		entity.Production_Product = this;
	}
	
	private void detach_Production_ProductReview(Production_ProductReview entity)
	{
		this.SendPropertyChanging();
		entity.Production_Product = null;
	}
	
	private void attach_Production_TransactionHistory(Production_TransactionHistory entity)
	{
		this.SendPropertyChanging();
		entity.Production_Product = this;
	}
	
	private void detach_Production_TransactionHistory(Production_TransactionHistory entity)
	{
		this.SendPropertyChanging();
		entity.Production_Product = null;
	}
	
	private void attach_Production_WorkOrder(Production_WorkOrder entity)
	{
		this.SendPropertyChanging();
		entity.Production_Product = this;
	}
	
	private void detach_Production_WorkOrder(Production_WorkOrder entity)
	{
		this.SendPropertyChanging();
		entity.Production_Product = null;
	}
	
	private void attach_Purchasing_ProductVendor(Purchasing_ProductVendor entity)
	{
		this.SendPropertyChanging();
		entity.Production_Product = this;
	}
	
	private void detach_Purchasing_ProductVendor(Purchasing_ProductVendor entity)
	{
		this.SendPropertyChanging();
		entity.Production_Product = null;
	}
	
	private void attach_Purchasing_PurchaseOrderDetail(Purchasing_PurchaseOrderDetail entity)
	{
		this.SendPropertyChanging();
		entity.Production_Product = this;
	}
	
	private void detach_Purchasing_PurchaseOrderDetail(Purchasing_PurchaseOrderDetail entity)
	{
		this.SendPropertyChanging();
		entity.Production_Product = null;
	}
	
	private void attach_Sales_ShoppingCartItem(Sales_ShoppingCartItem entity)
	{
		this.SendPropertyChanging();
		entity.Production_Product = this;
	}
	
	private void detach_Sales_ShoppingCartItem(Sales_ShoppingCartItem entity)
	{
		this.SendPropertyChanging();
		entity.Production_Product = null;
	}
	
	private void attach_Sales_SpecialOfferProduct(Sales_SpecialOfferProduct entity)
	{
		this.SendPropertyChanging();
		entity.Production_Product = this;
	}
	
	private void detach_Sales_SpecialOfferProduct(Sales_SpecialOfferProduct entity)
	{
		this.SendPropertyChanging();
		entity.Production_Product = null;
	}
}

public partial class Production_ProductCategory : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ProductCategoryID;
	
	private string _Name;
	
	private System.Guid _Rowguid;
	
	private System.DateTime _ModifiedDate;
	
	private EntitySet<Production_ProductSubcategory> _Production_ProductSubcategory;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductCategoryIDChanging(int value);
    partial void OnProductCategoryIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnRowguidChanging(System.Guid value);
    partial void OnRowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Production_ProductCategory()
	{
		this._Production_ProductSubcategory = new EntitySet<Production_ProductSubcategory>(new Action<Production_ProductSubcategory>(this.attach_Production_ProductSubcategory), new Action<Production_ProductSubcategory>(this.detach_Production_ProductSubcategory));
		OnCreated();
	}
	
	public int ProductCategoryID
	{
		get
		{
			return this._ProductCategoryID;
		}
		set
		{
			if ((this._ProductCategoryID != value))
			{
				this.OnProductCategoryIDChanging(value);
				this.SendPropertyChanging();
				this._ProductCategoryID = value;
				this.SendPropertyChanged("ProductCategoryID");
				this.OnProductCategoryIDChanged();
			}
		}
	}
	
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	public System.Guid Rowguid
	{
		get
		{
			return this._Rowguid;
		}
		set
		{
			if ((this._Rowguid != value))
			{
				this.OnRowguidChanging(value);
				this.SendPropertyChanging();
				this._Rowguid = value;
				this.SendPropertyChanged("Rowguid");
				this.OnRowguidChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public EntitySet<Production_ProductSubcategory> Production_ProductSubcategory
	{
		get
		{
			return this._Production_ProductSubcategory;
		}
		set
		{
			this._Production_ProductSubcategory.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Production_ProductSubcategory(Production_ProductSubcategory entity)
	{
		this.SendPropertyChanging();
		entity.Production_ProductCategory = this;
	}
	
	private void detach_Production_ProductSubcategory(Production_ProductSubcategory entity)
	{
		this.SendPropertyChanging();
		entity.Production_ProductCategory = null;
	}
}

public partial class Production_ProductCostHistory : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ProductID;
	
	private System.DateTime _StartDate;
	
	private System.Nullable<System.DateTime> _EndDate;
	
	private decimal _StandardCost;
	
	private System.DateTime _ModifiedDate;
	
	private EntityRef<Production_Product> _Production_Product;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnStandardCostChanging(decimal value);
    partial void OnStandardCostChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Production_ProductCostHistory()
	{
		this._Production_Product = default(EntityRef<Production_Product>);
		OnCreated();
	}
	
	public int ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				if (this._Production_Product.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProductIDChanging(value);
				this.SendPropertyChanging();
				this._ProductID = value;
				this.SendPropertyChanged("ProductID");
				this.OnProductIDChanged();
			}
		}
	}
	
	public System.DateTime StartDate
	{
		get
		{
			return this._StartDate;
		}
		set
		{
			if ((this._StartDate != value))
			{
				this.OnStartDateChanging(value);
				this.SendPropertyChanging();
				this._StartDate = value;
				this.SendPropertyChanged("StartDate");
				this.OnStartDateChanged();
			}
		}
	}
	
	public System.Nullable<System.DateTime> EndDate
	{
		get
		{
			return this._EndDate;
		}
		set
		{
			if ((this._EndDate != value))
			{
				this.OnEndDateChanging(value);
				this.SendPropertyChanging();
				this._EndDate = value;
				this.SendPropertyChanged("EndDate");
				this.OnEndDateChanged();
			}
		}
	}
	
	public decimal StandardCost
	{
		get
		{
			return this._StandardCost;
		}
		set
		{
			if ((this._StandardCost != value))
			{
				this.OnStandardCostChanging(value);
				this.SendPropertyChanging();
				this._StandardCost = value;
				this.SendPropertyChanged("StandardCost");
				this.OnStandardCostChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public Production_Product Production_Product
	{
		get
		{
			return this._Production_Product.Entity;
		}
		set
		{
			Production_Product previousValue = this._Production_Product.Entity;
			if (((previousValue != value) 
						|| (this._Production_Product.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Production_Product.Entity = null;
					previousValue.Production_ProductCostHistory.Remove(this);
				}
				this._Production_Product.Entity = value;
				if ((value != null))
				{
					value.Production_ProductCostHistory.Add(this);
					this._ProductID = value.ProductID;
				}
				else
				{
					this._ProductID = default(int);
				}
				this.SendPropertyChanged("Production_Product");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

public partial class Production_ProductDescription : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ProductDescriptionID;
	
	private string _Description;
	
	private System.Guid _Rowguid;
	
	private System.DateTime _ModifiedDate;
	
	private EntitySet<Production_ProductModelProductDescriptionCulture> _Production_ProductModelProductDescriptionCulture;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductDescriptionIDChanging(int value);
    partial void OnProductDescriptionIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnRowguidChanging(System.Guid value);
    partial void OnRowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Production_ProductDescription()
	{
		this._Production_ProductModelProductDescriptionCulture = new EntitySet<Production_ProductModelProductDescriptionCulture>(new Action<Production_ProductModelProductDescriptionCulture>(this.attach_Production_ProductModelProductDescriptionCulture), new Action<Production_ProductModelProductDescriptionCulture>(this.detach_Production_ProductModelProductDescriptionCulture));
		OnCreated();
	}
	
	public int ProductDescriptionID
	{
		get
		{
			return this._ProductDescriptionID;
		}
		set
		{
			if ((this._ProductDescriptionID != value))
			{
				this.OnProductDescriptionIDChanging(value);
				this.SendPropertyChanging();
				this._ProductDescriptionID = value;
				this.SendPropertyChanged("ProductDescriptionID");
				this.OnProductDescriptionIDChanged();
			}
		}
	}
	
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	public System.Guid Rowguid
	{
		get
		{
			return this._Rowguid;
		}
		set
		{
			if ((this._Rowguid != value))
			{
				this.OnRowguidChanging(value);
				this.SendPropertyChanging();
				this._Rowguid = value;
				this.SendPropertyChanged("Rowguid");
				this.OnRowguidChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public EntitySet<Production_ProductModelProductDescriptionCulture> Production_ProductModelProductDescriptionCulture
	{
		get
		{
			return this._Production_ProductModelProductDescriptionCulture;
		}
		set
		{
			this._Production_ProductModelProductDescriptionCulture.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Production_ProductModelProductDescriptionCulture(Production_ProductModelProductDescriptionCulture entity)
	{
		this.SendPropertyChanging();
		entity.Production_ProductDescription = this;
	}
	
	private void detach_Production_ProductModelProductDescriptionCulture(Production_ProductModelProductDescriptionCulture entity)
	{
		this.SendPropertyChanging();
		entity.Production_ProductDescription = null;
	}
}

public partial class Production_ProductDocument : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ProductID;
	
	private int _DocumentID;
	
	private System.DateTime _ModifiedDate;
	
	private EntityRef<Production_Document> _Production_Document;
	
	private EntityRef<Production_Product> _Production_Product;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnDocumentIDChanging(int value);
    partial void OnDocumentIDChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Production_ProductDocument()
	{
		this._Production_Document = default(EntityRef<Production_Document>);
		this._Production_Product = default(EntityRef<Production_Product>);
		OnCreated();
	}
	
	public int ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				if (this._Production_Product.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProductIDChanging(value);
				this.SendPropertyChanging();
				this._ProductID = value;
				this.SendPropertyChanged("ProductID");
				this.OnProductIDChanged();
			}
		}
	}
	
	public int DocumentID
	{
		get
		{
			return this._DocumentID;
		}
		set
		{
			if ((this._DocumentID != value))
			{
				if (this._Production_Document.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnDocumentIDChanging(value);
				this.SendPropertyChanging();
				this._DocumentID = value;
				this.SendPropertyChanged("DocumentID");
				this.OnDocumentIDChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public Production_Document Production_Document
	{
		get
		{
			return this._Production_Document.Entity;
		}
		set
		{
			Production_Document previousValue = this._Production_Document.Entity;
			if (((previousValue != value) 
						|| (this._Production_Document.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Production_Document.Entity = null;
					previousValue.Production_ProductDocument.Remove(this);
				}
				this._Production_Document.Entity = value;
				if ((value != null))
				{
					value.Production_ProductDocument.Add(this);
					this._DocumentID = value.DocumentID;
				}
				else
				{
					this._DocumentID = default(int);
				}
				this.SendPropertyChanged("Production_Document");
			}
		}
	}
	
	public Production_Product Production_Product
	{
		get
		{
			return this._Production_Product.Entity;
		}
		set
		{
			Production_Product previousValue = this._Production_Product.Entity;
			if (((previousValue != value) 
						|| (this._Production_Product.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Production_Product.Entity = null;
					previousValue.Production_ProductDocument.Remove(this);
				}
				this._Production_Product.Entity = value;
				if ((value != null))
				{
					value.Production_ProductDocument.Add(this);
					this._ProductID = value.ProductID;
				}
				else
				{
					this._ProductID = default(int);
				}
				this.SendPropertyChanged("Production_Product");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

public partial class Production_ProductInventory : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ProductID;
	
	private short _LocationID;
	
	private string _Shelf;
	
	private byte _Bin;
	
	private short _Quantity;
	
	private System.Guid _Rowguid;
	
	private System.DateTime _ModifiedDate;
	
	private EntityRef<Production_Location> _Production_Location;
	
	private EntityRef<Production_Product> _Production_Product;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnLocationIDChanging(short value);
    partial void OnLocationIDChanged();
    partial void OnShelfChanging(string value);
    partial void OnShelfChanged();
    partial void OnBinChanging(byte value);
    partial void OnBinChanged();
    partial void OnQuantityChanging(short value);
    partial void OnQuantityChanged();
    partial void OnRowguidChanging(System.Guid value);
    partial void OnRowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Production_ProductInventory()
	{
		this._Production_Location = default(EntityRef<Production_Location>);
		this._Production_Product = default(EntityRef<Production_Product>);
		OnCreated();
	}
	
	public int ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				if (this._Production_Product.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProductIDChanging(value);
				this.SendPropertyChanging();
				this._ProductID = value;
				this.SendPropertyChanged("ProductID");
				this.OnProductIDChanged();
			}
		}
	}
	
	public short LocationID
	{
		get
		{
			return this._LocationID;
		}
		set
		{
			if ((this._LocationID != value))
			{
				if (this._Production_Location.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnLocationIDChanging(value);
				this.SendPropertyChanging();
				this._LocationID = value;
				this.SendPropertyChanged("LocationID");
				this.OnLocationIDChanged();
			}
		}
	}
	
	public string Shelf
	{
		get
		{
			return this._Shelf;
		}
		set
		{
			if ((this._Shelf != value))
			{
				this.OnShelfChanging(value);
				this.SendPropertyChanging();
				this._Shelf = value;
				this.SendPropertyChanged("Shelf");
				this.OnShelfChanged();
			}
		}
	}
	
	public byte Bin
	{
		get
		{
			return this._Bin;
		}
		set
		{
			if ((this._Bin != value))
			{
				this.OnBinChanging(value);
				this.SendPropertyChanging();
				this._Bin = value;
				this.SendPropertyChanged("Bin");
				this.OnBinChanged();
			}
		}
	}
	
	public short Quantity
	{
		get
		{
			return this._Quantity;
		}
		set
		{
			if ((this._Quantity != value))
			{
				this.OnQuantityChanging(value);
				this.SendPropertyChanging();
				this._Quantity = value;
				this.SendPropertyChanged("Quantity");
				this.OnQuantityChanged();
			}
		}
	}
	
	public System.Guid Rowguid
	{
		get
		{
			return this._Rowguid;
		}
		set
		{
			if ((this._Rowguid != value))
			{
				this.OnRowguidChanging(value);
				this.SendPropertyChanging();
				this._Rowguid = value;
				this.SendPropertyChanged("Rowguid");
				this.OnRowguidChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public Production_Location Production_Location
	{
		get
		{
			return this._Production_Location.Entity;
		}
		set
		{
			Production_Location previousValue = this._Production_Location.Entity;
			if (((previousValue != value) 
						|| (this._Production_Location.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Production_Location.Entity = null;
					previousValue.Production_ProductInventory.Remove(this);
				}
				this._Production_Location.Entity = value;
				if ((value != null))
				{
					value.Production_ProductInventory.Add(this);
					this._LocationID = value.LocationID;
				}
				else
				{
					this._LocationID = default(short);
				}
				this.SendPropertyChanged("Production_Location");
			}
		}
	}
	
	public Production_Product Production_Product
	{
		get
		{
			return this._Production_Product.Entity;
		}
		set
		{
			Production_Product previousValue = this._Production_Product.Entity;
			if (((previousValue != value) 
						|| (this._Production_Product.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Production_Product.Entity = null;
					previousValue.Production_ProductInventory.Remove(this);
				}
				this._Production_Product.Entity = value;
				if ((value != null))
				{
					value.Production_ProductInventory.Add(this);
					this._ProductID = value.ProductID;
				}
				else
				{
					this._ProductID = default(int);
				}
				this.SendPropertyChanged("Production_Product");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

public partial class Production_ProductListPriceHistory : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ProductID;
	
	private System.DateTime _StartDate;
	
	private System.Nullable<System.DateTime> _EndDate;
	
	private decimal _ListPrice;
	
	private System.DateTime _ModifiedDate;
	
	private EntityRef<Production_Product> _Production_Product;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnListPriceChanging(decimal value);
    partial void OnListPriceChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Production_ProductListPriceHistory()
	{
		this._Production_Product = default(EntityRef<Production_Product>);
		OnCreated();
	}
	
	public int ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				if (this._Production_Product.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProductIDChanging(value);
				this.SendPropertyChanging();
				this._ProductID = value;
				this.SendPropertyChanged("ProductID");
				this.OnProductIDChanged();
			}
		}
	}
	
	public System.DateTime StartDate
	{
		get
		{
			return this._StartDate;
		}
		set
		{
			if ((this._StartDate != value))
			{
				this.OnStartDateChanging(value);
				this.SendPropertyChanging();
				this._StartDate = value;
				this.SendPropertyChanged("StartDate");
				this.OnStartDateChanged();
			}
		}
	}
	
	public System.Nullable<System.DateTime> EndDate
	{
		get
		{
			return this._EndDate;
		}
		set
		{
			if ((this._EndDate != value))
			{
				this.OnEndDateChanging(value);
				this.SendPropertyChanging();
				this._EndDate = value;
				this.SendPropertyChanged("EndDate");
				this.OnEndDateChanged();
			}
		}
	}
	
	public decimal ListPrice
	{
		get
		{
			return this._ListPrice;
		}
		set
		{
			if ((this._ListPrice != value))
			{
				this.OnListPriceChanging(value);
				this.SendPropertyChanging();
				this._ListPrice = value;
				this.SendPropertyChanged("ListPrice");
				this.OnListPriceChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public Production_Product Production_Product
	{
		get
		{
			return this._Production_Product.Entity;
		}
		set
		{
			Production_Product previousValue = this._Production_Product.Entity;
			if (((previousValue != value) 
						|| (this._Production_Product.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Production_Product.Entity = null;
					previousValue.Production_ProductListPriceHistory.Remove(this);
				}
				this._Production_Product.Entity = value;
				if ((value != null))
				{
					value.Production_ProductListPriceHistory.Add(this);
					this._ProductID = value.ProductID;
				}
				else
				{
					this._ProductID = default(int);
				}
				this.SendPropertyChanged("Production_Product");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

public partial class Production_ProductModel : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ProductModelID;
	
	private string _Name;
	
	private System.Xml.Linq.XElement _CatalogDescription;
	
	private System.Xml.Linq.XElement _Instructions;
	
	private System.Guid _Rowguid;
	
	private System.DateTime _ModifiedDate;
	
	private EntitySet<Production_Product> _Production_Product;
	
	private EntitySet<Production_ProductModelIllustration> _Production_ProductModelIllustration;
	
	private EntitySet<Production_ProductModelProductDescriptionCulture> _Production_ProductModelProductDescriptionCulture;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductModelIDChanging(int value);
    partial void OnProductModelIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCatalogDescriptionChanging(System.Xml.Linq.XElement value);
    partial void OnCatalogDescriptionChanged();
    partial void OnInstructionsChanging(System.Xml.Linq.XElement value);
    partial void OnInstructionsChanged();
    partial void OnRowguidChanging(System.Guid value);
    partial void OnRowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Production_ProductModel()
	{
		this._Production_Product = new EntitySet<Production_Product>(new Action<Production_Product>(this.attach_Production_Product), new Action<Production_Product>(this.detach_Production_Product));
		this._Production_ProductModelIllustration = new EntitySet<Production_ProductModelIllustration>(new Action<Production_ProductModelIllustration>(this.attach_Production_ProductModelIllustration), new Action<Production_ProductModelIllustration>(this.detach_Production_ProductModelIllustration));
		this._Production_ProductModelProductDescriptionCulture = new EntitySet<Production_ProductModelProductDescriptionCulture>(new Action<Production_ProductModelProductDescriptionCulture>(this.attach_Production_ProductModelProductDescriptionCulture), new Action<Production_ProductModelProductDescriptionCulture>(this.detach_Production_ProductModelProductDescriptionCulture));
		OnCreated();
	}
	
	public int ProductModelID
	{
		get
		{
			return this._ProductModelID;
		}
		set
		{
			if ((this._ProductModelID != value))
			{
				this.OnProductModelIDChanging(value);
				this.SendPropertyChanging();
				this._ProductModelID = value;
				this.SendPropertyChanged("ProductModelID");
				this.OnProductModelIDChanged();
			}
		}
	}
	
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	public System.Xml.Linq.XElement CatalogDescription
	{
		get
		{
			return this._CatalogDescription;
		}
		set
		{
			if ((this._CatalogDescription != value))
			{
				this.OnCatalogDescriptionChanging(value);
				this.SendPropertyChanging();
				this._CatalogDescription = value;
				this.SendPropertyChanged("CatalogDescription");
				this.OnCatalogDescriptionChanged();
			}
		}
	}
	
	public System.Xml.Linq.XElement Instructions
	{
		get
		{
			return this._Instructions;
		}
		set
		{
			if ((this._Instructions != value))
			{
				this.OnInstructionsChanging(value);
				this.SendPropertyChanging();
				this._Instructions = value;
				this.SendPropertyChanged("Instructions");
				this.OnInstructionsChanged();
			}
		}
	}
	
	public System.Guid Rowguid
	{
		get
		{
			return this._Rowguid;
		}
		set
		{
			if ((this._Rowguid != value))
			{
				this.OnRowguidChanging(value);
				this.SendPropertyChanging();
				this._Rowguid = value;
				this.SendPropertyChanged("Rowguid");
				this.OnRowguidChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public EntitySet<Production_Product> Production_Product
	{
		get
		{
			return this._Production_Product;
		}
		set
		{
			this._Production_Product.Assign(value);
		}
	}
	
	public EntitySet<Production_ProductModelIllustration> Production_ProductModelIllustration
	{
		get
		{
			return this._Production_ProductModelIllustration;
		}
		set
		{
			this._Production_ProductModelIllustration.Assign(value);
		}
	}
	
	public EntitySet<Production_ProductModelProductDescriptionCulture> Production_ProductModelProductDescriptionCulture
	{
		get
		{
			return this._Production_ProductModelProductDescriptionCulture;
		}
		set
		{
			this._Production_ProductModelProductDescriptionCulture.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Production_Product(Production_Product entity)
	{
		this.SendPropertyChanging();
		entity.Production_ProductModel = this;
	}
	
	private void detach_Production_Product(Production_Product entity)
	{
		this.SendPropertyChanging();
		entity.Production_ProductModel = null;
	}
	
	private void attach_Production_ProductModelIllustration(Production_ProductModelIllustration entity)
	{
		this.SendPropertyChanging();
		entity.Production_ProductModel = this;
	}
	
	private void detach_Production_ProductModelIllustration(Production_ProductModelIllustration entity)
	{
		this.SendPropertyChanging();
		entity.Production_ProductModel = null;
	}
	
	private void attach_Production_ProductModelProductDescriptionCulture(Production_ProductModelProductDescriptionCulture entity)
	{
		this.SendPropertyChanging();
		entity.Production_ProductModel = this;
	}
	
	private void detach_Production_ProductModelProductDescriptionCulture(Production_ProductModelProductDescriptionCulture entity)
	{
		this.SendPropertyChanging();
		entity.Production_ProductModel = null;
	}
}

public partial class Production_ProductModelIllustration : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ProductModelID;
	
	private int _IllustrationID;
	
	private System.DateTime _ModifiedDate;
	
	private EntityRef<Production_Illustration> _Production_Illustration;
	
	private EntityRef<Production_ProductModel> _Production_ProductModel;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductModelIDChanging(int value);
    partial void OnProductModelIDChanged();
    partial void OnIllustrationIDChanging(int value);
    partial void OnIllustrationIDChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Production_ProductModelIllustration()
	{
		this._Production_Illustration = default(EntityRef<Production_Illustration>);
		this._Production_ProductModel = default(EntityRef<Production_ProductModel>);
		OnCreated();
	}
	
	public int ProductModelID
	{
		get
		{
			return this._ProductModelID;
		}
		set
		{
			if ((this._ProductModelID != value))
			{
				if (this._Production_ProductModel.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProductModelIDChanging(value);
				this.SendPropertyChanging();
				this._ProductModelID = value;
				this.SendPropertyChanged("ProductModelID");
				this.OnProductModelIDChanged();
			}
		}
	}
	
	public int IllustrationID
	{
		get
		{
			return this._IllustrationID;
		}
		set
		{
			if ((this._IllustrationID != value))
			{
				if (this._Production_Illustration.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIllustrationIDChanging(value);
				this.SendPropertyChanging();
				this._IllustrationID = value;
				this.SendPropertyChanged("IllustrationID");
				this.OnIllustrationIDChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public Production_Illustration Production_Illustration
	{
		get
		{
			return this._Production_Illustration.Entity;
		}
		set
		{
			Production_Illustration previousValue = this._Production_Illustration.Entity;
			if (((previousValue != value) 
						|| (this._Production_Illustration.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Production_Illustration.Entity = null;
					previousValue.Production_ProductModelIllustration.Remove(this);
				}
				this._Production_Illustration.Entity = value;
				if ((value != null))
				{
					value.Production_ProductModelIllustration.Add(this);
					this._IllustrationID = value.IllustrationID;
				}
				else
				{
					this._IllustrationID = default(int);
				}
				this.SendPropertyChanged("Production_Illustration");
			}
		}
	}
	
	public Production_ProductModel Production_ProductModel
	{
		get
		{
			return this._Production_ProductModel.Entity;
		}
		set
		{
			Production_ProductModel previousValue = this._Production_ProductModel.Entity;
			if (((previousValue != value) 
						|| (this._Production_ProductModel.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Production_ProductModel.Entity = null;
					previousValue.Production_ProductModelIllustration.Remove(this);
				}
				this._Production_ProductModel.Entity = value;
				if ((value != null))
				{
					value.Production_ProductModelIllustration.Add(this);
					this._ProductModelID = value.ProductModelID;
				}
				else
				{
					this._ProductModelID = default(int);
				}
				this.SendPropertyChanged("Production_ProductModel");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

public partial class Production_ProductModelProductDescriptionCulture : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ProductModelID;
	
	private int _ProductDescriptionID;
	
	private string _CultureID;
	
	private System.DateTime _ModifiedDate;
	
	private EntityRef<Production_Culture> _Production_Culture;
	
	private EntityRef<Production_ProductDescription> _Production_ProductDescription;
	
	private EntityRef<Production_ProductModel> _Production_ProductModel;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductModelIDChanging(int value);
    partial void OnProductModelIDChanged();
    partial void OnProductDescriptionIDChanging(int value);
    partial void OnProductDescriptionIDChanged();
    partial void OnCultureIDChanging(string value);
    partial void OnCultureIDChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Production_ProductModelProductDescriptionCulture()
	{
		this._Production_Culture = default(EntityRef<Production_Culture>);
		this._Production_ProductDescription = default(EntityRef<Production_ProductDescription>);
		this._Production_ProductModel = default(EntityRef<Production_ProductModel>);
		OnCreated();
	}
	
	public int ProductModelID
	{
		get
		{
			return this._ProductModelID;
		}
		set
		{
			if ((this._ProductModelID != value))
			{
				if (this._Production_ProductModel.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProductModelIDChanging(value);
				this.SendPropertyChanging();
				this._ProductModelID = value;
				this.SendPropertyChanged("ProductModelID");
				this.OnProductModelIDChanged();
			}
		}
	}
	
	public int ProductDescriptionID
	{
		get
		{
			return this._ProductDescriptionID;
		}
		set
		{
			if ((this._ProductDescriptionID != value))
			{
				if (this._Production_ProductDescription.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProductDescriptionIDChanging(value);
				this.SendPropertyChanging();
				this._ProductDescriptionID = value;
				this.SendPropertyChanged("ProductDescriptionID");
				this.OnProductDescriptionIDChanged();
			}
		}
	}
	
	public string CultureID
	{
		get
		{
			return this._CultureID;
		}
		set
		{
			if ((this._CultureID != value))
			{
				if (this._Production_Culture.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCultureIDChanging(value);
				this.SendPropertyChanging();
				this._CultureID = value;
				this.SendPropertyChanged("CultureID");
				this.OnCultureIDChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public Production_Culture Production_Culture
	{
		get
		{
			return this._Production_Culture.Entity;
		}
		set
		{
			Production_Culture previousValue = this._Production_Culture.Entity;
			if (((previousValue != value) 
						|| (this._Production_Culture.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Production_Culture.Entity = null;
					previousValue.Production_ProductModelProductDescriptionCulture.Remove(this);
				}
				this._Production_Culture.Entity = value;
				if ((value != null))
				{
					value.Production_ProductModelProductDescriptionCulture.Add(this);
					this._CultureID = value.CultureID;
				}
				else
				{
					this._CultureID = default(string);
				}
				this.SendPropertyChanged("Production_Culture");
			}
		}
	}
	
	public Production_ProductDescription Production_ProductDescription
	{
		get
		{
			return this._Production_ProductDescription.Entity;
		}
		set
		{
			Production_ProductDescription previousValue = this._Production_ProductDescription.Entity;
			if (((previousValue != value) 
						|| (this._Production_ProductDescription.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Production_ProductDescription.Entity = null;
					previousValue.Production_ProductModelProductDescriptionCulture.Remove(this);
				}
				this._Production_ProductDescription.Entity = value;
				if ((value != null))
				{
					value.Production_ProductModelProductDescriptionCulture.Add(this);
					this._ProductDescriptionID = value.ProductDescriptionID;
				}
				else
				{
					this._ProductDescriptionID = default(int);
				}
				this.SendPropertyChanged("Production_ProductDescription");
			}
		}
	}
	
	public Production_ProductModel Production_ProductModel
	{
		get
		{
			return this._Production_ProductModel.Entity;
		}
		set
		{
			Production_ProductModel previousValue = this._Production_ProductModel.Entity;
			if (((previousValue != value) 
						|| (this._Production_ProductModel.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Production_ProductModel.Entity = null;
					previousValue.Production_ProductModelProductDescriptionCulture.Remove(this);
				}
				this._Production_ProductModel.Entity = value;
				if ((value != null))
				{
					value.Production_ProductModelProductDescriptionCulture.Add(this);
					this._ProductModelID = value.ProductModelID;
				}
				else
				{
					this._ProductModelID = default(int);
				}
				this.SendPropertyChanged("Production_ProductModel");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

public partial class Production_ProductPhoto : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ProductPhotoID;
	
	private System.Data.Linq.Binary _ThumbNailPhoto;
	
	private string _ThumbnailPhotoFileName;
	
	private System.Data.Linq.Binary _LargePhoto;
	
	private string _LargePhotoFileName;
	
	private System.DateTime _ModifiedDate;
	
	private EntitySet<Production_ProductProductPhoto> _Production_ProductProductPhoto;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductPhotoIDChanging(int value);
    partial void OnProductPhotoIDChanged();
    partial void OnThumbNailPhotoChanging(System.Data.Linq.Binary value);
    partial void OnThumbNailPhotoChanged();
    partial void OnThumbnailPhotoFileNameChanging(string value);
    partial void OnThumbnailPhotoFileNameChanged();
    partial void OnLargePhotoChanging(System.Data.Linq.Binary value);
    partial void OnLargePhotoChanged();
    partial void OnLargePhotoFileNameChanging(string value);
    partial void OnLargePhotoFileNameChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Production_ProductPhoto()
	{
		this._Production_ProductProductPhoto = new EntitySet<Production_ProductProductPhoto>(new Action<Production_ProductProductPhoto>(this.attach_Production_ProductProductPhoto), new Action<Production_ProductProductPhoto>(this.detach_Production_ProductProductPhoto));
		OnCreated();
	}
	
	public int ProductPhotoID
	{
		get
		{
			return this._ProductPhotoID;
		}
		set
		{
			if ((this._ProductPhotoID != value))
			{
				this.OnProductPhotoIDChanging(value);
				this.SendPropertyChanging();
				this._ProductPhotoID = value;
				this.SendPropertyChanged("ProductPhotoID");
				this.OnProductPhotoIDChanged();
			}
		}
	}
	
	public System.Data.Linq.Binary ThumbNailPhoto
	{
		get
		{
			return this._ThumbNailPhoto;
		}
		set
		{
			if ((this._ThumbNailPhoto != value))
			{
				this.OnThumbNailPhotoChanging(value);
				this.SendPropertyChanging();
				this._ThumbNailPhoto = value;
				this.SendPropertyChanged("ThumbNailPhoto");
				this.OnThumbNailPhotoChanged();
			}
		}
	}
	
	public string ThumbnailPhotoFileName
	{
		get
		{
			return this._ThumbnailPhotoFileName;
		}
		set
		{
			if ((this._ThumbnailPhotoFileName != value))
			{
				this.OnThumbnailPhotoFileNameChanging(value);
				this.SendPropertyChanging();
				this._ThumbnailPhotoFileName = value;
				this.SendPropertyChanged("ThumbnailPhotoFileName");
				this.OnThumbnailPhotoFileNameChanged();
			}
		}
	}
	
	public System.Data.Linq.Binary LargePhoto
	{
		get
		{
			return this._LargePhoto;
		}
		set
		{
			if ((this._LargePhoto != value))
			{
				this.OnLargePhotoChanging(value);
				this.SendPropertyChanging();
				this._LargePhoto = value;
				this.SendPropertyChanged("LargePhoto");
				this.OnLargePhotoChanged();
			}
		}
	}
	
	public string LargePhotoFileName
	{
		get
		{
			return this._LargePhotoFileName;
		}
		set
		{
			if ((this._LargePhotoFileName != value))
			{
				this.OnLargePhotoFileNameChanging(value);
				this.SendPropertyChanging();
				this._LargePhotoFileName = value;
				this.SendPropertyChanged("LargePhotoFileName");
				this.OnLargePhotoFileNameChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public EntitySet<Production_ProductProductPhoto> Production_ProductProductPhoto
	{
		get
		{
			return this._Production_ProductProductPhoto;
		}
		set
		{
			this._Production_ProductProductPhoto.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Production_ProductProductPhoto(Production_ProductProductPhoto entity)
	{
		this.SendPropertyChanging();
		entity.Production_ProductPhoto = this;
	}
	
	private void detach_Production_ProductProductPhoto(Production_ProductProductPhoto entity)
	{
		this.SendPropertyChanging();
		entity.Production_ProductPhoto = null;
	}
}

public partial class Production_ProductProductPhoto : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ProductID;
	
	private int _ProductPhotoID;
	
	private bool _Primary;
	
	private System.DateTime _ModifiedDate;
	
	private EntityRef<Production_Product> _Production_Product;
	
	private EntityRef<Production_ProductPhoto> _Production_ProductPhoto;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnProductPhotoIDChanging(int value);
    partial void OnProductPhotoIDChanged();
    partial void OnPrimaryChanging(bool value);
    partial void OnPrimaryChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Production_ProductProductPhoto()
	{
		this._Production_Product = default(EntityRef<Production_Product>);
		this._Production_ProductPhoto = default(EntityRef<Production_ProductPhoto>);
		OnCreated();
	}
	
	public int ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				if (this._Production_Product.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProductIDChanging(value);
				this.SendPropertyChanging();
				this._ProductID = value;
				this.SendPropertyChanged("ProductID");
				this.OnProductIDChanged();
			}
		}
	}
	
	public int ProductPhotoID
	{
		get
		{
			return this._ProductPhotoID;
		}
		set
		{
			if ((this._ProductPhotoID != value))
			{
				if (this._Production_ProductPhoto.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProductPhotoIDChanging(value);
				this.SendPropertyChanging();
				this._ProductPhotoID = value;
				this.SendPropertyChanged("ProductPhotoID");
				this.OnProductPhotoIDChanged();
			}
		}
	}
	
	public bool Primary
	{
		get
		{
			return this._Primary;
		}
		set
		{
			if ((this._Primary != value))
			{
				this.OnPrimaryChanging(value);
				this.SendPropertyChanging();
				this._Primary = value;
				this.SendPropertyChanged("Primary");
				this.OnPrimaryChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public Production_Product Production_Product
	{
		get
		{
			return this._Production_Product.Entity;
		}
		set
		{
			Production_Product previousValue = this._Production_Product.Entity;
			if (((previousValue != value) 
						|| (this._Production_Product.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Production_Product.Entity = null;
					previousValue.Production_ProductProductPhoto.Remove(this);
				}
				this._Production_Product.Entity = value;
				if ((value != null))
				{
					value.Production_ProductProductPhoto.Add(this);
					this._ProductID = value.ProductID;
				}
				else
				{
					this._ProductID = default(int);
				}
				this.SendPropertyChanged("Production_Product");
			}
		}
	}
	
	public Production_ProductPhoto Production_ProductPhoto
	{
		get
		{
			return this._Production_ProductPhoto.Entity;
		}
		set
		{
			Production_ProductPhoto previousValue = this._Production_ProductPhoto.Entity;
			if (((previousValue != value) 
						|| (this._Production_ProductPhoto.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Production_ProductPhoto.Entity = null;
					previousValue.Production_ProductProductPhoto.Remove(this);
				}
				this._Production_ProductPhoto.Entity = value;
				if ((value != null))
				{
					value.Production_ProductProductPhoto.Add(this);
					this._ProductPhotoID = value.ProductPhotoID;
				}
				else
				{
					this._ProductPhotoID = default(int);
				}
				this.SendPropertyChanged("Production_ProductPhoto");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

public partial class Production_ProductReview : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ProductReviewID;
	
	private int _ProductID;
	
	private string _ReviewerName;
	
	private System.DateTime _ReviewDate;
	
	private string _EmailAddress;
	
	private int _Rating;
	
	private string _Comments;
	
	private System.DateTime _ModifiedDate;
	
	private EntityRef<Production_Product> _Production_Product;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductReviewIDChanging(int value);
    partial void OnProductReviewIDChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnReviewerNameChanging(string value);
    partial void OnReviewerNameChanged();
    partial void OnReviewDateChanging(System.DateTime value);
    partial void OnReviewDateChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnRatingChanging(int value);
    partial void OnRatingChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Production_ProductReview()
	{
		this._Production_Product = default(EntityRef<Production_Product>);
		OnCreated();
	}
	
	public int ProductReviewID
	{
		get
		{
			return this._ProductReviewID;
		}
		set
		{
			if ((this._ProductReviewID != value))
			{
				this.OnProductReviewIDChanging(value);
				this.SendPropertyChanging();
				this._ProductReviewID = value;
				this.SendPropertyChanged("ProductReviewID");
				this.OnProductReviewIDChanged();
			}
		}
	}
	
	public int ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				if (this._Production_Product.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProductIDChanging(value);
				this.SendPropertyChanging();
				this._ProductID = value;
				this.SendPropertyChanged("ProductID");
				this.OnProductIDChanged();
			}
		}
	}
	
	public string ReviewerName
	{
		get
		{
			return this._ReviewerName;
		}
		set
		{
			if ((this._ReviewerName != value))
			{
				this.OnReviewerNameChanging(value);
				this.SendPropertyChanging();
				this._ReviewerName = value;
				this.SendPropertyChanged("ReviewerName");
				this.OnReviewerNameChanged();
			}
		}
	}
	
	public System.DateTime ReviewDate
	{
		get
		{
			return this._ReviewDate;
		}
		set
		{
			if ((this._ReviewDate != value))
			{
				this.OnReviewDateChanging(value);
				this.SendPropertyChanging();
				this._ReviewDate = value;
				this.SendPropertyChanged("ReviewDate");
				this.OnReviewDateChanged();
			}
		}
	}
	
	public string EmailAddress
	{
		get
		{
			return this._EmailAddress;
		}
		set
		{
			if ((this._EmailAddress != value))
			{
				this.OnEmailAddressChanging(value);
				this.SendPropertyChanging();
				this._EmailAddress = value;
				this.SendPropertyChanged("EmailAddress");
				this.OnEmailAddressChanged();
			}
		}
	}
	
	public int Rating
	{
		get
		{
			return this._Rating;
		}
		set
		{
			if ((this._Rating != value))
			{
				this.OnRatingChanging(value);
				this.SendPropertyChanging();
				this._Rating = value;
				this.SendPropertyChanged("Rating");
				this.OnRatingChanged();
			}
		}
	}
	
	public string Comments
	{
		get
		{
			return this._Comments;
		}
		set
		{
			if ((this._Comments != value))
			{
				this.OnCommentsChanging(value);
				this.SendPropertyChanging();
				this._Comments = value;
				this.SendPropertyChanged("Comments");
				this.OnCommentsChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public Production_Product Production_Product
	{
		get
		{
			return this._Production_Product.Entity;
		}
		set
		{
			Production_Product previousValue = this._Production_Product.Entity;
			if (((previousValue != value) 
						|| (this._Production_Product.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Production_Product.Entity = null;
					previousValue.Production_ProductReview.Remove(this);
				}
				this._Production_Product.Entity = value;
				if ((value != null))
				{
					value.Production_ProductReview.Add(this);
					this._ProductID = value.ProductID;
				}
				else
				{
					this._ProductID = default(int);
				}
				this.SendPropertyChanged("Production_Product");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

public partial class Production_ProductSubcategory : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ProductSubcategoryID;
	
	private int _ProductCategoryID;
	
	private string _Name;
	
	private System.Guid _Rowguid;
	
	private System.DateTime _ModifiedDate;
	
	private EntitySet<Production_Product> _Production_Product;
	
	private EntityRef<Production_ProductCategory> _Production_ProductCategory;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductSubcategoryIDChanging(int value);
    partial void OnProductSubcategoryIDChanged();
    partial void OnProductCategoryIDChanging(int value);
    partial void OnProductCategoryIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnRowguidChanging(System.Guid value);
    partial void OnRowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Production_ProductSubcategory()
	{
		this._Production_Product = new EntitySet<Production_Product>(new Action<Production_Product>(this.attach_Production_Product), new Action<Production_Product>(this.detach_Production_Product));
		this._Production_ProductCategory = default(EntityRef<Production_ProductCategory>);
		OnCreated();
	}
	
	public int ProductSubcategoryID
	{
		get
		{
			return this._ProductSubcategoryID;
		}
		set
		{
			if ((this._ProductSubcategoryID != value))
			{
				this.OnProductSubcategoryIDChanging(value);
				this.SendPropertyChanging();
				this._ProductSubcategoryID = value;
				this.SendPropertyChanged("ProductSubcategoryID");
				this.OnProductSubcategoryIDChanged();
			}
		}
	}
	
	public int ProductCategoryID
	{
		get
		{
			return this._ProductCategoryID;
		}
		set
		{
			if ((this._ProductCategoryID != value))
			{
				if (this._Production_ProductCategory.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProductCategoryIDChanging(value);
				this.SendPropertyChanging();
				this._ProductCategoryID = value;
				this.SendPropertyChanged("ProductCategoryID");
				this.OnProductCategoryIDChanged();
			}
		}
	}
	
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	public System.Guid Rowguid
	{
		get
		{
			return this._Rowguid;
		}
		set
		{
			if ((this._Rowguid != value))
			{
				this.OnRowguidChanging(value);
				this.SendPropertyChanging();
				this._Rowguid = value;
				this.SendPropertyChanged("Rowguid");
				this.OnRowguidChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public EntitySet<Production_Product> Production_Product
	{
		get
		{
			return this._Production_Product;
		}
		set
		{
			this._Production_Product.Assign(value);
		}
	}
	
	public Production_ProductCategory Production_ProductCategory
	{
		get
		{
			return this._Production_ProductCategory.Entity;
		}
		set
		{
			Production_ProductCategory previousValue = this._Production_ProductCategory.Entity;
			if (((previousValue != value) 
						|| (this._Production_ProductCategory.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Production_ProductCategory.Entity = null;
					previousValue.Production_ProductSubcategory.Remove(this);
				}
				this._Production_ProductCategory.Entity = value;
				if ((value != null))
				{
					value.Production_ProductSubcategory.Add(this);
					this._ProductCategoryID = value.ProductCategoryID;
				}
				else
				{
					this._ProductCategoryID = default(int);
				}
				this.SendPropertyChanged("Production_ProductCategory");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Production_Product(Production_Product entity)
	{
		this.SendPropertyChanging();
		entity.Production_ProductSubcategory = this;
	}
	
	private void detach_Production_Product(Production_Product entity)
	{
		this.SendPropertyChanging();
		entity.Production_ProductSubcategory = null;
	}
}

public partial class Purchasing_ProductVendor : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ProductID;
	
	private int _VendorID;
	
	private int _AverageLeadTime;
	
	private decimal _StandardPrice;
	
	private System.Nullable<decimal> _LastReceiptCost;
	
	private System.Nullable<System.DateTime> _LastReceiptDate;
	
	private int _MinOrderQty;
	
	private int _MaxOrderQty;
	
	private System.Nullable<int> _OnOrderQty;
	
	private string _UnitMeasureCode;
	
	private System.DateTime _ModifiedDate;
	
	private EntityRef<Production_Product> _Production_Product;
	
	private EntityRef<Production_UnitMeasure> _Production_UnitMeasure;
	
	private EntityRef<Purchasing_Vendor> _Purchasing_Vendor;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnVendorIDChanging(int value);
    partial void OnVendorIDChanged();
    partial void OnAverageLeadTimeChanging(int value);
    partial void OnAverageLeadTimeChanged();
    partial void OnStandardPriceChanging(decimal value);
    partial void OnStandardPriceChanged();
    partial void OnLastReceiptCostChanging(System.Nullable<decimal> value);
    partial void OnLastReceiptCostChanged();
    partial void OnLastReceiptDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastReceiptDateChanged();
    partial void OnMinOrderQtyChanging(int value);
    partial void OnMinOrderQtyChanged();
    partial void OnMaxOrderQtyChanging(int value);
    partial void OnMaxOrderQtyChanged();
    partial void OnOnOrderQtyChanging(System.Nullable<int> value);
    partial void OnOnOrderQtyChanged();
    partial void OnUnitMeasureCodeChanging(string value);
    partial void OnUnitMeasureCodeChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Purchasing_ProductVendor()
	{
		this._Production_Product = default(EntityRef<Production_Product>);
		this._Production_UnitMeasure = default(EntityRef<Production_UnitMeasure>);
		this._Purchasing_Vendor = default(EntityRef<Purchasing_Vendor>);
		OnCreated();
	}
	
	public int ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				if (this._Production_Product.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProductIDChanging(value);
				this.SendPropertyChanging();
				this._ProductID = value;
				this.SendPropertyChanged("ProductID");
				this.OnProductIDChanged();
			}
		}
	}
	
	public int VendorID
	{
		get
		{
			return this._VendorID;
		}
		set
		{
			if ((this._VendorID != value))
			{
				if (this._Purchasing_Vendor.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnVendorIDChanging(value);
				this.SendPropertyChanging();
				this._VendorID = value;
				this.SendPropertyChanged("VendorID");
				this.OnVendorIDChanged();
			}
		}
	}
	
	public int AverageLeadTime
	{
		get
		{
			return this._AverageLeadTime;
		}
		set
		{
			if ((this._AverageLeadTime != value))
			{
				this.OnAverageLeadTimeChanging(value);
				this.SendPropertyChanging();
				this._AverageLeadTime = value;
				this.SendPropertyChanged("AverageLeadTime");
				this.OnAverageLeadTimeChanged();
			}
		}
	}
	
	public decimal StandardPrice
	{
		get
		{
			return this._StandardPrice;
		}
		set
		{
			if ((this._StandardPrice != value))
			{
				this.OnStandardPriceChanging(value);
				this.SendPropertyChanging();
				this._StandardPrice = value;
				this.SendPropertyChanged("StandardPrice");
				this.OnStandardPriceChanged();
			}
		}
	}
	
	public System.Nullable<decimal> LastReceiptCost
	{
		get
		{
			return this._LastReceiptCost;
		}
		set
		{
			if ((this._LastReceiptCost != value))
			{
				this.OnLastReceiptCostChanging(value);
				this.SendPropertyChanging();
				this._LastReceiptCost = value;
				this.SendPropertyChanged("LastReceiptCost");
				this.OnLastReceiptCostChanged();
			}
		}
	}
	
	public System.Nullable<System.DateTime> LastReceiptDate
	{
		get
		{
			return this._LastReceiptDate;
		}
		set
		{
			if ((this._LastReceiptDate != value))
			{
				this.OnLastReceiptDateChanging(value);
				this.SendPropertyChanging();
				this._LastReceiptDate = value;
				this.SendPropertyChanged("LastReceiptDate");
				this.OnLastReceiptDateChanged();
			}
		}
	}
	
	public int MinOrderQty
	{
		get
		{
			return this._MinOrderQty;
		}
		set
		{
			if ((this._MinOrderQty != value))
			{
				this.OnMinOrderQtyChanging(value);
				this.SendPropertyChanging();
				this._MinOrderQty = value;
				this.SendPropertyChanged("MinOrderQty");
				this.OnMinOrderQtyChanged();
			}
		}
	}
	
	public int MaxOrderQty
	{
		get
		{
			return this._MaxOrderQty;
		}
		set
		{
			if ((this._MaxOrderQty != value))
			{
				this.OnMaxOrderQtyChanging(value);
				this.SendPropertyChanging();
				this._MaxOrderQty = value;
				this.SendPropertyChanged("MaxOrderQty");
				this.OnMaxOrderQtyChanged();
			}
		}
	}
	
	public System.Nullable<int> OnOrderQty
	{
		get
		{
			return this._OnOrderQty;
		}
		set
		{
			if ((this._OnOrderQty != value))
			{
				this.OnOnOrderQtyChanging(value);
				this.SendPropertyChanging();
				this._OnOrderQty = value;
				this.SendPropertyChanged("OnOrderQty");
				this.OnOnOrderQtyChanged();
			}
		}
	}
	
	public string UnitMeasureCode
	{
		get
		{
			return this._UnitMeasureCode;
		}
		set
		{
			if ((this._UnitMeasureCode != value))
			{
				if (this._Production_UnitMeasure.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUnitMeasureCodeChanging(value);
				this.SendPropertyChanging();
				this._UnitMeasureCode = value;
				this.SendPropertyChanged("UnitMeasureCode");
				this.OnUnitMeasureCodeChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public Production_Product Production_Product
	{
		get
		{
			return this._Production_Product.Entity;
		}
		set
		{
			Production_Product previousValue = this._Production_Product.Entity;
			if (((previousValue != value) 
						|| (this._Production_Product.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Production_Product.Entity = null;
					previousValue.Purchasing_ProductVendor.Remove(this);
				}
				this._Production_Product.Entity = value;
				if ((value != null))
				{
					value.Purchasing_ProductVendor.Add(this);
					this._ProductID = value.ProductID;
				}
				else
				{
					this._ProductID = default(int);
				}
				this.SendPropertyChanged("Production_Product");
			}
		}
	}
	
	public Production_UnitMeasure Production_UnitMeasure
	{
		get
		{
			return this._Production_UnitMeasure.Entity;
		}
		set
		{
			Production_UnitMeasure previousValue = this._Production_UnitMeasure.Entity;
			if (((previousValue != value) 
						|| (this._Production_UnitMeasure.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Production_UnitMeasure.Entity = null;
					previousValue.Purchasing_ProductVendor.Remove(this);
				}
				this._Production_UnitMeasure.Entity = value;
				if ((value != null))
				{
					value.Purchasing_ProductVendor.Add(this);
					this._UnitMeasureCode = value.UnitMeasureCode;
				}
				else
				{
					this._UnitMeasureCode = default(string);
				}
				this.SendPropertyChanged("Production_UnitMeasure");
			}
		}
	}
	
	public Purchasing_Vendor Purchasing_Vendor
	{
		get
		{
			return this._Purchasing_Vendor.Entity;
		}
		set
		{
			Purchasing_Vendor previousValue = this._Purchasing_Vendor.Entity;
			if (((previousValue != value) 
						|| (this._Purchasing_Vendor.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Purchasing_Vendor.Entity = null;
					previousValue.Purchasing_ProductVendor.Remove(this);
				}
				this._Purchasing_Vendor.Entity = value;
				if ((value != null))
				{
					value.Purchasing_ProductVendor.Add(this);
					this._VendorID = value.VendorID;
				}
				else
				{
					this._VendorID = default(int);
				}
				this.SendPropertyChanged("Purchasing_Vendor");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

public partial class Purchasing_PurchaseOrderDetail : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _PurchaseOrderID;
	
	private int _PurchaseOrderDetailID;
	
	private System.DateTime _DueDate;
	
	private short _OrderQty;
	
	private int _ProductID;
	
	private decimal _UnitPrice;
	
	private decimal _LineTotal;
	
	private decimal _ReceivedQty;
	
	private decimal _RejectedQty;
	
	private decimal _StockedQty;
	
	private System.DateTime _ModifiedDate;
	
	private EntityRef<Production_Product> _Production_Product;
	
	private EntityRef<Purchasing_PurchaseOrderHeader> _Purchasing_PurchaseOrderHeader;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPurchaseOrderIDChanging(int value);
    partial void OnPurchaseOrderIDChanged();
    partial void OnPurchaseOrderDetailIDChanging(int value);
    partial void OnPurchaseOrderDetailIDChanged();
    partial void OnDueDateChanging(System.DateTime value);
    partial void OnDueDateChanged();
    partial void OnOrderQtyChanging(short value);
    partial void OnOrderQtyChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnUnitPriceChanging(decimal value);
    partial void OnUnitPriceChanged();
    partial void OnLineTotalChanging(decimal value);
    partial void OnLineTotalChanged();
    partial void OnReceivedQtyChanging(decimal value);
    partial void OnReceivedQtyChanged();
    partial void OnRejectedQtyChanging(decimal value);
    partial void OnRejectedQtyChanged();
    partial void OnStockedQtyChanging(decimal value);
    partial void OnStockedQtyChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Purchasing_PurchaseOrderDetail()
	{
		this._Production_Product = default(EntityRef<Production_Product>);
		this._Purchasing_PurchaseOrderHeader = default(EntityRef<Purchasing_PurchaseOrderHeader>);
		OnCreated();
	}
	
	public int PurchaseOrderID
	{
		get
		{
			return this._PurchaseOrderID;
		}
		set
		{
			if ((this._PurchaseOrderID != value))
			{
				if (this._Purchasing_PurchaseOrderHeader.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPurchaseOrderIDChanging(value);
				this.SendPropertyChanging();
				this._PurchaseOrderID = value;
				this.SendPropertyChanged("PurchaseOrderID");
				this.OnPurchaseOrderIDChanged();
			}
		}
	}
	
	public int PurchaseOrderDetailID
	{
		get
		{
			return this._PurchaseOrderDetailID;
		}
		set
		{
			if ((this._PurchaseOrderDetailID != value))
			{
				this.OnPurchaseOrderDetailIDChanging(value);
				this.SendPropertyChanging();
				this._PurchaseOrderDetailID = value;
				this.SendPropertyChanged("PurchaseOrderDetailID");
				this.OnPurchaseOrderDetailIDChanged();
			}
		}
	}
	
	public System.DateTime DueDate
	{
		get
		{
			return this._DueDate;
		}
		set
		{
			if ((this._DueDate != value))
			{
				this.OnDueDateChanging(value);
				this.SendPropertyChanging();
				this._DueDate = value;
				this.SendPropertyChanged("DueDate");
				this.OnDueDateChanged();
			}
		}
	}
	
	public short OrderQty
	{
		get
		{
			return this._OrderQty;
		}
		set
		{
			if ((this._OrderQty != value))
			{
				this.OnOrderQtyChanging(value);
				this.SendPropertyChanging();
				this._OrderQty = value;
				this.SendPropertyChanged("OrderQty");
				this.OnOrderQtyChanged();
			}
		}
	}
	
	public int ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				if (this._Production_Product.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProductIDChanging(value);
				this.SendPropertyChanging();
				this._ProductID = value;
				this.SendPropertyChanged("ProductID");
				this.OnProductIDChanged();
			}
		}
	}
	
	public decimal UnitPrice
	{
		get
		{
			return this._UnitPrice;
		}
		set
		{
			if ((this._UnitPrice != value))
			{
				this.OnUnitPriceChanging(value);
				this.SendPropertyChanging();
				this._UnitPrice = value;
				this.SendPropertyChanged("UnitPrice");
				this.OnUnitPriceChanged();
			}
		}
	}
	
	public decimal LineTotal
	{
		get
		{
			return this._LineTotal;
		}
		set
		{
			if ((this._LineTotal != value))
			{
				this.OnLineTotalChanging(value);
				this.SendPropertyChanging();
				this._LineTotal = value;
				this.SendPropertyChanged("LineTotal");
				this.OnLineTotalChanged();
			}
		}
	}
	
	public decimal ReceivedQty
	{
		get
		{
			return this._ReceivedQty;
		}
		set
		{
			if ((this._ReceivedQty != value))
			{
				this.OnReceivedQtyChanging(value);
				this.SendPropertyChanging();
				this._ReceivedQty = value;
				this.SendPropertyChanged("ReceivedQty");
				this.OnReceivedQtyChanged();
			}
		}
	}
	
	public decimal RejectedQty
	{
		get
		{
			return this._RejectedQty;
		}
		set
		{
			if ((this._RejectedQty != value))
			{
				this.OnRejectedQtyChanging(value);
				this.SendPropertyChanging();
				this._RejectedQty = value;
				this.SendPropertyChanged("RejectedQty");
				this.OnRejectedQtyChanged();
			}
		}
	}
	
	public decimal StockedQty
	{
		get
		{
			return this._StockedQty;
		}
		set
		{
			if ((this._StockedQty != value))
			{
				this.OnStockedQtyChanging(value);
				this.SendPropertyChanging();
				this._StockedQty = value;
				this.SendPropertyChanged("StockedQty");
				this.OnStockedQtyChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public Production_Product Production_Product
	{
		get
		{
			return this._Production_Product.Entity;
		}
		set
		{
			Production_Product previousValue = this._Production_Product.Entity;
			if (((previousValue != value) 
						|| (this._Production_Product.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Production_Product.Entity = null;
					previousValue.Purchasing_PurchaseOrderDetail.Remove(this);
				}
				this._Production_Product.Entity = value;
				if ((value != null))
				{
					value.Purchasing_PurchaseOrderDetail.Add(this);
					this._ProductID = value.ProductID;
				}
				else
				{
					this._ProductID = default(int);
				}
				this.SendPropertyChanged("Production_Product");
			}
		}
	}
	
	public Purchasing_PurchaseOrderHeader Purchasing_PurchaseOrderHeader
	{
		get
		{
			return this._Purchasing_PurchaseOrderHeader.Entity;
		}
		set
		{
			Purchasing_PurchaseOrderHeader previousValue = this._Purchasing_PurchaseOrderHeader.Entity;
			if (((previousValue != value) 
						|| (this._Purchasing_PurchaseOrderHeader.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Purchasing_PurchaseOrderHeader.Entity = null;
					previousValue.Purchasing_PurchaseOrderDetail.Remove(this);
				}
				this._Purchasing_PurchaseOrderHeader.Entity = value;
				if ((value != null))
				{
					value.Purchasing_PurchaseOrderDetail.Add(this);
					this._PurchaseOrderID = value.PurchaseOrderID;
				}
				else
				{
					this._PurchaseOrderID = default(int);
				}
				this.SendPropertyChanged("Purchasing_PurchaseOrderHeader");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

public partial class Purchasing_PurchaseOrderHeader : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _PurchaseOrderID;
	
	private byte _RevisionNumber;
	
	private byte _Status;
	
	private int _EmployeeID;
	
	private int _VendorID;
	
	private int _ShipMethodID;
	
	private System.DateTime _OrderDate;
	
	private System.Nullable<System.DateTime> _ShipDate;
	
	private decimal _SubTotal;
	
	private decimal _TaxAmt;
	
	private decimal _Freight;
	
	private decimal _TotalDue;
	
	private System.DateTime _ModifiedDate;
	
	private EntitySet<Purchasing_PurchaseOrderDetail> _Purchasing_PurchaseOrderDetail;
	
	private EntityRef<HumanResources_Employee> _HumanResources_Employee;
	
	private EntityRef<Purchasing_ShipMethod> _Purchasing_ShipMethod;
	
	private EntityRef<Purchasing_Vendor> _Purchasing_Vendor;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPurchaseOrderIDChanging(int value);
    partial void OnPurchaseOrderIDChanged();
    partial void OnRevisionNumberChanging(byte value);
    partial void OnRevisionNumberChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnEmployeeIDChanging(int value);
    partial void OnEmployeeIDChanged();
    partial void OnVendorIDChanging(int value);
    partial void OnVendorIDChanged();
    partial void OnShipMethodIDChanging(int value);
    partial void OnShipMethodIDChanged();
    partial void OnOrderDateChanging(System.DateTime value);
    partial void OnOrderDateChanged();
    partial void OnShipDateChanging(System.Nullable<System.DateTime> value);
    partial void OnShipDateChanged();
    partial void OnSubTotalChanging(decimal value);
    partial void OnSubTotalChanged();
    partial void OnTaxAmtChanging(decimal value);
    partial void OnTaxAmtChanged();
    partial void OnFreightChanging(decimal value);
    partial void OnFreightChanged();
    partial void OnTotalDueChanging(decimal value);
    partial void OnTotalDueChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Purchasing_PurchaseOrderHeader()
	{
		this._Purchasing_PurchaseOrderDetail = new EntitySet<Purchasing_PurchaseOrderDetail>(new Action<Purchasing_PurchaseOrderDetail>(this.attach_Purchasing_PurchaseOrderDetail), new Action<Purchasing_PurchaseOrderDetail>(this.detach_Purchasing_PurchaseOrderDetail));
		this._HumanResources_Employee = default(EntityRef<HumanResources_Employee>);
		this._Purchasing_ShipMethod = default(EntityRef<Purchasing_ShipMethod>);
		this._Purchasing_Vendor = default(EntityRef<Purchasing_Vendor>);
		OnCreated();
	}
	
	public int PurchaseOrderID
	{
		get
		{
			return this._PurchaseOrderID;
		}
		set
		{
			if ((this._PurchaseOrderID != value))
			{
				this.OnPurchaseOrderIDChanging(value);
				this.SendPropertyChanging();
				this._PurchaseOrderID = value;
				this.SendPropertyChanged("PurchaseOrderID");
				this.OnPurchaseOrderIDChanged();
			}
		}
	}
	
	public byte RevisionNumber
	{
		get
		{
			return this._RevisionNumber;
		}
		set
		{
			if ((this._RevisionNumber != value))
			{
				this.OnRevisionNumberChanging(value);
				this.SendPropertyChanging();
				this._RevisionNumber = value;
				this.SendPropertyChanged("RevisionNumber");
				this.OnRevisionNumberChanged();
			}
		}
	}
	
	public byte Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}
	
	public int EmployeeID
	{
		get
		{
			return this._EmployeeID;
		}
		set
		{
			if ((this._EmployeeID != value))
			{
				if (this._HumanResources_Employee.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnEmployeeIDChanging(value);
				this.SendPropertyChanging();
				this._EmployeeID = value;
				this.SendPropertyChanged("EmployeeID");
				this.OnEmployeeIDChanged();
			}
		}
	}
	
	public int VendorID
	{
		get
		{
			return this._VendorID;
		}
		set
		{
			if ((this._VendorID != value))
			{
				if (this._Purchasing_Vendor.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnVendorIDChanging(value);
				this.SendPropertyChanging();
				this._VendorID = value;
				this.SendPropertyChanged("VendorID");
				this.OnVendorIDChanged();
			}
		}
	}
	
	public int ShipMethodID
	{
		get
		{
			return this._ShipMethodID;
		}
		set
		{
			if ((this._ShipMethodID != value))
			{
				if (this._Purchasing_ShipMethod.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnShipMethodIDChanging(value);
				this.SendPropertyChanging();
				this._ShipMethodID = value;
				this.SendPropertyChanged("ShipMethodID");
				this.OnShipMethodIDChanged();
			}
		}
	}
	
	public System.DateTime OrderDate
	{
		get
		{
			return this._OrderDate;
		}
		set
		{
			if ((this._OrderDate != value))
			{
				this.OnOrderDateChanging(value);
				this.SendPropertyChanging();
				this._OrderDate = value;
				this.SendPropertyChanged("OrderDate");
				this.OnOrderDateChanged();
			}
		}
	}
	
	public System.Nullable<System.DateTime> ShipDate
	{
		get
		{
			return this._ShipDate;
		}
		set
		{
			if ((this._ShipDate != value))
			{
				this.OnShipDateChanging(value);
				this.SendPropertyChanging();
				this._ShipDate = value;
				this.SendPropertyChanged("ShipDate");
				this.OnShipDateChanged();
			}
		}
	}
	
	public decimal SubTotal
	{
		get
		{
			return this._SubTotal;
		}
		set
		{
			if ((this._SubTotal != value))
			{
				this.OnSubTotalChanging(value);
				this.SendPropertyChanging();
				this._SubTotal = value;
				this.SendPropertyChanged("SubTotal");
				this.OnSubTotalChanged();
			}
		}
	}
	
	public decimal TaxAmt
	{
		get
		{
			return this._TaxAmt;
		}
		set
		{
			if ((this._TaxAmt != value))
			{
				this.OnTaxAmtChanging(value);
				this.SendPropertyChanging();
				this._TaxAmt = value;
				this.SendPropertyChanged("TaxAmt");
				this.OnTaxAmtChanged();
			}
		}
	}
	
	public decimal Freight
	{
		get
		{
			return this._Freight;
		}
		set
		{
			if ((this._Freight != value))
			{
				this.OnFreightChanging(value);
				this.SendPropertyChanging();
				this._Freight = value;
				this.SendPropertyChanged("Freight");
				this.OnFreightChanged();
			}
		}
	}
	
	public decimal TotalDue
	{
		get
		{
			return this._TotalDue;
		}
		set
		{
			if ((this._TotalDue != value))
			{
				this.OnTotalDueChanging(value);
				this.SendPropertyChanging();
				this._TotalDue = value;
				this.SendPropertyChanged("TotalDue");
				this.OnTotalDueChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public EntitySet<Purchasing_PurchaseOrderDetail> Purchasing_PurchaseOrderDetail
	{
		get
		{
			return this._Purchasing_PurchaseOrderDetail;
		}
		set
		{
			this._Purchasing_PurchaseOrderDetail.Assign(value);
		}
	}
	
	public HumanResources_Employee HumanResources_Employee
	{
		get
		{
			return this._HumanResources_Employee.Entity;
		}
		set
		{
			HumanResources_Employee previousValue = this._HumanResources_Employee.Entity;
			if (((previousValue != value) 
						|| (this._HumanResources_Employee.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._HumanResources_Employee.Entity = null;
					previousValue.Purchasing_PurchaseOrderHeader.Remove(this);
				}
				this._HumanResources_Employee.Entity = value;
				if ((value != null))
				{
					value.Purchasing_PurchaseOrderHeader.Add(this);
					this._EmployeeID = value.EmployeeID;
				}
				else
				{
					this._EmployeeID = default(int);
				}
				this.SendPropertyChanged("HumanResources_Employee");
			}
		}
	}
	
	public Purchasing_ShipMethod Purchasing_ShipMethod
	{
		get
		{
			return this._Purchasing_ShipMethod.Entity;
		}
		set
		{
			Purchasing_ShipMethod previousValue = this._Purchasing_ShipMethod.Entity;
			if (((previousValue != value) 
						|| (this._Purchasing_ShipMethod.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Purchasing_ShipMethod.Entity = null;
					previousValue.Purchasing_PurchaseOrderHeader.Remove(this);
				}
				this._Purchasing_ShipMethod.Entity = value;
				if ((value != null))
				{
					value.Purchasing_PurchaseOrderHeader.Add(this);
					this._ShipMethodID = value.ShipMethodID;
				}
				else
				{
					this._ShipMethodID = default(int);
				}
				this.SendPropertyChanged("Purchasing_ShipMethod");
			}
		}
	}
	
	public Purchasing_Vendor Purchasing_Vendor
	{
		get
		{
			return this._Purchasing_Vendor.Entity;
		}
		set
		{
			Purchasing_Vendor previousValue = this._Purchasing_Vendor.Entity;
			if (((previousValue != value) 
						|| (this._Purchasing_Vendor.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Purchasing_Vendor.Entity = null;
					previousValue.Purchasing_PurchaseOrderHeader.Remove(this);
				}
				this._Purchasing_Vendor.Entity = value;
				if ((value != null))
				{
					value.Purchasing_PurchaseOrderHeader.Add(this);
					this._VendorID = value.VendorID;
				}
				else
				{
					this._VendorID = default(int);
				}
				this.SendPropertyChanged("Purchasing_Vendor");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Purchasing_PurchaseOrderDetail(Purchasing_PurchaseOrderDetail entity)
	{
		this.SendPropertyChanging();
		entity.Purchasing_PurchaseOrderHeader = this;
	}
	
	private void detach_Purchasing_PurchaseOrderDetail(Purchasing_PurchaseOrderDetail entity)
	{
		this.SendPropertyChanging();
		entity.Purchasing_PurchaseOrderHeader = null;
	}
}

public partial class Sales_SalesOrderDetail : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _SalesOrderID;
	
	private int _SalesOrderDetailID;
	
	private string _CarrierTrackingNumber;
	
	private short _OrderQty;
	
	private int _ProductID;
	
	private int _SpecialOfferID;
	
	private decimal _UnitPrice;
	
	private decimal _UnitPriceDiscount;
	
	private decimal _LineTotal;
	
	private System.Guid _Rowguid;
	
	private System.DateTime _ModifiedDate;
	
	private EntityRef<Sales_SalesOrderHeader> _Sales_SalesOrderHeader;
	
	private EntityRef<Sales_SpecialOfferProduct> _Sales_SpecialOfferProduct;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSalesOrderIDChanging(int value);
    partial void OnSalesOrderIDChanged();
    partial void OnSalesOrderDetailIDChanging(int value);
    partial void OnSalesOrderDetailIDChanged();
    partial void OnCarrierTrackingNumberChanging(string value);
    partial void OnCarrierTrackingNumberChanged();
    partial void OnOrderQtyChanging(short value);
    partial void OnOrderQtyChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnSpecialOfferIDChanging(int value);
    partial void OnSpecialOfferIDChanged();
    partial void OnUnitPriceChanging(decimal value);
    partial void OnUnitPriceChanged();
    partial void OnUnitPriceDiscountChanging(decimal value);
    partial void OnUnitPriceDiscountChanged();
    partial void OnLineTotalChanging(decimal value);
    partial void OnLineTotalChanged();
    partial void OnRowguidChanging(System.Guid value);
    partial void OnRowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Sales_SalesOrderDetail()
	{
		this._Sales_SalesOrderHeader = default(EntityRef<Sales_SalesOrderHeader>);
		this._Sales_SpecialOfferProduct = default(EntityRef<Sales_SpecialOfferProduct>);
		OnCreated();
	}
	
	public int SalesOrderID
	{
		get
		{
			return this._SalesOrderID;
		}
		set
		{
			if ((this._SalesOrderID != value))
			{
				if (this._Sales_SalesOrderHeader.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSalesOrderIDChanging(value);
				this.SendPropertyChanging();
				this._SalesOrderID = value;
				this.SendPropertyChanged("SalesOrderID");
				this.OnSalesOrderIDChanged();
			}
		}
	}
	
	public int SalesOrderDetailID
	{
		get
		{
			return this._SalesOrderDetailID;
		}
		set
		{
			if ((this._SalesOrderDetailID != value))
			{
				this.OnSalesOrderDetailIDChanging(value);
				this.SendPropertyChanging();
				this._SalesOrderDetailID = value;
				this.SendPropertyChanged("SalesOrderDetailID");
				this.OnSalesOrderDetailIDChanged();
			}
		}
	}
	
	public string CarrierTrackingNumber
	{
		get
		{
			return this._CarrierTrackingNumber;
		}
		set
		{
			if ((this._CarrierTrackingNumber != value))
			{
				this.OnCarrierTrackingNumberChanging(value);
				this.SendPropertyChanging();
				this._CarrierTrackingNumber = value;
				this.SendPropertyChanged("CarrierTrackingNumber");
				this.OnCarrierTrackingNumberChanged();
			}
		}
	}
	
	public short OrderQty
	{
		get
		{
			return this._OrderQty;
		}
		set
		{
			if ((this._OrderQty != value))
			{
				this.OnOrderQtyChanging(value);
				this.SendPropertyChanging();
				this._OrderQty = value;
				this.SendPropertyChanged("OrderQty");
				this.OnOrderQtyChanged();
			}
		}
	}
	
	public int ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				if (this._Sales_SpecialOfferProduct.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProductIDChanging(value);
				this.SendPropertyChanging();
				this._ProductID = value;
				this.SendPropertyChanged("ProductID");
				this.OnProductIDChanged();
			}
		}
	}
	
	public int SpecialOfferID
	{
		get
		{
			return this._SpecialOfferID;
		}
		set
		{
			if ((this._SpecialOfferID != value))
			{
				if (this._Sales_SpecialOfferProduct.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSpecialOfferIDChanging(value);
				this.SendPropertyChanging();
				this._SpecialOfferID = value;
				this.SendPropertyChanged("SpecialOfferID");
				this.OnSpecialOfferIDChanged();
			}
		}
	}
	
	public decimal UnitPrice
	{
		get
		{
			return this._UnitPrice;
		}
		set
		{
			if ((this._UnitPrice != value))
			{
				this.OnUnitPriceChanging(value);
				this.SendPropertyChanging();
				this._UnitPrice = value;
				this.SendPropertyChanged("UnitPrice");
				this.OnUnitPriceChanged();
			}
		}
	}
	
	public decimal UnitPriceDiscount
	{
		get
		{
			return this._UnitPriceDiscount;
		}
		set
		{
			if ((this._UnitPriceDiscount != value))
			{
				this.OnUnitPriceDiscountChanging(value);
				this.SendPropertyChanging();
				this._UnitPriceDiscount = value;
				this.SendPropertyChanged("UnitPriceDiscount");
				this.OnUnitPriceDiscountChanged();
			}
		}
	}
	
	public decimal LineTotal
	{
		get
		{
			return this._LineTotal;
		}
		set
		{
			if ((this._LineTotal != value))
			{
				this.OnLineTotalChanging(value);
				this.SendPropertyChanging();
				this._LineTotal = value;
				this.SendPropertyChanged("LineTotal");
				this.OnLineTotalChanged();
			}
		}
	}
	
	public System.Guid Rowguid
	{
		get
		{
			return this._Rowguid;
		}
		set
		{
			if ((this._Rowguid != value))
			{
				this.OnRowguidChanging(value);
				this.SendPropertyChanging();
				this._Rowguid = value;
				this.SendPropertyChanged("Rowguid");
				this.OnRowguidChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public Sales_SalesOrderHeader Sales_SalesOrderHeader
	{
		get
		{
			return this._Sales_SalesOrderHeader.Entity;
		}
		set
		{
			Sales_SalesOrderHeader previousValue = this._Sales_SalesOrderHeader.Entity;
			if (((previousValue != value) 
						|| (this._Sales_SalesOrderHeader.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Sales_SalesOrderHeader.Entity = null;
					previousValue.Sales_SalesOrderDetail.Remove(this);
				}
				this._Sales_SalesOrderHeader.Entity = value;
				if ((value != null))
				{
					value.Sales_SalesOrderDetail.Add(this);
					this._SalesOrderID = value.SalesOrderID;
				}
				else
				{
					this._SalesOrderID = default(int);
				}
				this.SendPropertyChanged("Sales_SalesOrderHeader");
			}
		}
	}
	
	public Sales_SpecialOfferProduct Sales_SpecialOfferProduct
	{
		get
		{
			return this._Sales_SpecialOfferProduct.Entity;
		}
		set
		{
			Sales_SpecialOfferProduct previousValue = this._Sales_SpecialOfferProduct.Entity;
			if (((previousValue != value) 
						|| (this._Sales_SpecialOfferProduct.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Sales_SpecialOfferProduct.Entity = null;
					previousValue.Sales_SalesOrderDetail.Remove(this);
				}
				this._Sales_SpecialOfferProduct.Entity = value;
				if ((value != null))
				{
					value.Sales_SalesOrderDetail.Add(this);
					this._SpecialOfferID = value.SpecialOfferID;
					this._ProductID = value.ProductID;
				}
				else
				{
					this._SpecialOfferID = default(int);
					this._ProductID = default(int);
				}
				this.SendPropertyChanged("Sales_SpecialOfferProduct");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

public partial class Sales_SalesOrderHeader : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _SalesOrderID;
	
	private byte _RevisionNumber;
	
	private System.DateTime _OrderDate;
	
	private System.DateTime _DueDate;
	
	private System.Nullable<System.DateTime> _ShipDate;
	
	private byte _Status;
	
	private bool _OnlineOrderFlag;
	
	private string _SalesOrderNumber;
	
	private string _PurchaseOrderNumber;
	
	private string _AccountNumber;
	
	private int _CustomerID;
	
	private int _ContactID;
	
	private System.Nullable<int> _SalesPersonID;
	
	private System.Nullable<int> _TerritoryID;
	
	private int _BillToAddressID;
	
	private int _ShipToAddressID;
	
	private int _ShipMethodID;
	
	private System.Nullable<int> _CreditCardID;
	
	private string _CreditCardApprovalCode;
	
	private System.Nullable<int> _CurrencyRateID;
	
	private decimal _SubTotal;
	
	private decimal _TaxAmt;
	
	private decimal _Freight;
	
	private decimal _TotalDue;
	
	private string _Comment;
	
	private System.Guid _Rowguid;
	
	private System.DateTime _ModifiedDate;
	
	private EntitySet<Sales_SalesOrderDetail> _Sales_SalesOrderDetail;
	
	private EntityRef<Person_Address> _Person_Address;
	
	private EntityRef<Person_Address> _ShipToAddress;
	
	private EntityRef<Person_Contact> _Person_Contact;
	
	private EntityRef<Sales_CreditCard> _Sales_CreditCard;
	
	private EntityRef<Sales_CurrencyRate> _Sales_CurrencyRate;
	
	private EntityRef<Sales_Customer> _Sales_Customer;
	
	private EntityRef<Sales_SalesPerson> _Sales_SalesPerson;
	
	private EntityRef<Sales_SalesTerritory> _Sales_SalesTerritory;
	
	private EntityRef<Purchasing_ShipMethod> _Purchasing_ShipMethod;
	
	private EntitySet<Sales_SalesOrderHeaderSalesReason> _Sales_SalesOrderHeaderSalesReason;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSalesOrderIDChanging(int value);
    partial void OnSalesOrderIDChanged();
    partial void OnRevisionNumberChanging(byte value);
    partial void OnRevisionNumberChanged();
    partial void OnOrderDateChanging(System.DateTime value);
    partial void OnOrderDateChanged();
    partial void OnDueDateChanging(System.DateTime value);
    partial void OnDueDateChanged();
    partial void OnShipDateChanging(System.Nullable<System.DateTime> value);
    partial void OnShipDateChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnOnlineOrderFlagChanging(bool value);
    partial void OnOnlineOrderFlagChanged();
    partial void OnSalesOrderNumberChanging(string value);
    partial void OnSalesOrderNumberChanged();
    partial void OnPurchaseOrderNumberChanging(string value);
    partial void OnPurchaseOrderNumberChanged();
    partial void OnAccountNumberChanging(string value);
    partial void OnAccountNumberChanged();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnContactIDChanging(int value);
    partial void OnContactIDChanged();
    partial void OnSalesPersonIDChanging(System.Nullable<int> value);
    partial void OnSalesPersonIDChanged();
    partial void OnTerritoryIDChanging(System.Nullable<int> value);
    partial void OnTerritoryIDChanged();
    partial void OnBillToAddressIDChanging(int value);
    partial void OnBillToAddressIDChanged();
    partial void OnShipToAddressIDChanging(int value);
    partial void OnShipToAddressIDChanged();
    partial void OnShipMethodIDChanging(int value);
    partial void OnShipMethodIDChanged();
    partial void OnCreditCardIDChanging(System.Nullable<int> value);
    partial void OnCreditCardIDChanged();
    partial void OnCreditCardApprovalCodeChanging(string value);
    partial void OnCreditCardApprovalCodeChanged();
    partial void OnCurrencyRateIDChanging(System.Nullable<int> value);
    partial void OnCurrencyRateIDChanged();
    partial void OnSubTotalChanging(decimal value);
    partial void OnSubTotalChanged();
    partial void OnTaxAmtChanging(decimal value);
    partial void OnTaxAmtChanged();
    partial void OnFreightChanging(decimal value);
    partial void OnFreightChanged();
    partial void OnTotalDueChanging(decimal value);
    partial void OnTotalDueChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnRowguidChanging(System.Guid value);
    partial void OnRowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Sales_SalesOrderHeader()
	{
		this._Sales_SalesOrderDetail = new EntitySet<Sales_SalesOrderDetail>(new Action<Sales_SalesOrderDetail>(this.attach_Sales_SalesOrderDetail), new Action<Sales_SalesOrderDetail>(this.detach_Sales_SalesOrderDetail));
		this._Person_Address = default(EntityRef<Person_Address>);
		this._ShipToAddress = default(EntityRef<Person_Address>);
		this._Person_Contact = default(EntityRef<Person_Contact>);
		this._Sales_CreditCard = default(EntityRef<Sales_CreditCard>);
		this._Sales_CurrencyRate = default(EntityRef<Sales_CurrencyRate>);
		this._Sales_Customer = default(EntityRef<Sales_Customer>);
		this._Sales_SalesPerson = default(EntityRef<Sales_SalesPerson>);
		this._Sales_SalesTerritory = default(EntityRef<Sales_SalesTerritory>);
		this._Purchasing_ShipMethod = default(EntityRef<Purchasing_ShipMethod>);
		this._Sales_SalesOrderHeaderSalesReason = new EntitySet<Sales_SalesOrderHeaderSalesReason>(new Action<Sales_SalesOrderHeaderSalesReason>(this.attach_Sales_SalesOrderHeaderSalesReason), new Action<Sales_SalesOrderHeaderSalesReason>(this.detach_Sales_SalesOrderHeaderSalesReason));
		OnCreated();
	}
	
	public int SalesOrderID
	{
		get
		{
			return this._SalesOrderID;
		}
		set
		{
			if ((this._SalesOrderID != value))
			{
				this.OnSalesOrderIDChanging(value);
				this.SendPropertyChanging();
				this._SalesOrderID = value;
				this.SendPropertyChanged("SalesOrderID");
				this.OnSalesOrderIDChanged();
			}
		}
	}
	
	public byte RevisionNumber
	{
		get
		{
			return this._RevisionNumber;
		}
		set
		{
			if ((this._RevisionNumber != value))
			{
				this.OnRevisionNumberChanging(value);
				this.SendPropertyChanging();
				this._RevisionNumber = value;
				this.SendPropertyChanged("RevisionNumber");
				this.OnRevisionNumberChanged();
			}
		}
	}
	
	public System.DateTime OrderDate
	{
		get
		{
			return this._OrderDate;
		}
		set
		{
			if ((this._OrderDate != value))
			{
				this.OnOrderDateChanging(value);
				this.SendPropertyChanging();
				this._OrderDate = value;
				this.SendPropertyChanged("OrderDate");
				this.OnOrderDateChanged();
			}
		}
	}
	
	public System.DateTime DueDate
	{
		get
		{
			return this._DueDate;
		}
		set
		{
			if ((this._DueDate != value))
			{
				this.OnDueDateChanging(value);
				this.SendPropertyChanging();
				this._DueDate = value;
				this.SendPropertyChanged("DueDate");
				this.OnDueDateChanged();
			}
		}
	}
	
	public System.Nullable<System.DateTime> ShipDate
	{
		get
		{
			return this._ShipDate;
		}
		set
		{
			if ((this._ShipDate != value))
			{
				this.OnShipDateChanging(value);
				this.SendPropertyChanging();
				this._ShipDate = value;
				this.SendPropertyChanged("ShipDate");
				this.OnShipDateChanged();
			}
		}
	}
	
	public byte Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}
	
	public bool OnlineOrderFlag
	{
		get
		{
			return this._OnlineOrderFlag;
		}
		set
		{
			if ((this._OnlineOrderFlag != value))
			{
				this.OnOnlineOrderFlagChanging(value);
				this.SendPropertyChanging();
				this._OnlineOrderFlag = value;
				this.SendPropertyChanged("OnlineOrderFlag");
				this.OnOnlineOrderFlagChanged();
			}
		}
	}
	
	public string SalesOrderNumber
	{
		get
		{
			return this._SalesOrderNumber;
		}
		set
		{
			if ((this._SalesOrderNumber != value))
			{
				this.OnSalesOrderNumberChanging(value);
				this.SendPropertyChanging();
				this._SalesOrderNumber = value;
				this.SendPropertyChanged("SalesOrderNumber");
				this.OnSalesOrderNumberChanged();
			}
		}
	}
	
	public string PurchaseOrderNumber
	{
		get
		{
			return this._PurchaseOrderNumber;
		}
		set
		{
			if ((this._PurchaseOrderNumber != value))
			{
				this.OnPurchaseOrderNumberChanging(value);
				this.SendPropertyChanging();
				this._PurchaseOrderNumber = value;
				this.SendPropertyChanged("PurchaseOrderNumber");
				this.OnPurchaseOrderNumberChanged();
			}
		}
	}
	
	public string AccountNumber
	{
		get
		{
			return this._AccountNumber;
		}
		set
		{
			if ((this._AccountNumber != value))
			{
				this.OnAccountNumberChanging(value);
				this.SendPropertyChanging();
				this._AccountNumber = value;
				this.SendPropertyChanged("AccountNumber");
				this.OnAccountNumberChanged();
			}
		}
	}
	
	public int CustomerID
	{
		get
		{
			return this._CustomerID;
		}
		set
		{
			if ((this._CustomerID != value))
			{
				if (this._Sales_Customer.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCustomerIDChanging(value);
				this.SendPropertyChanging();
				this._CustomerID = value;
				this.SendPropertyChanged("CustomerID");
				this.OnCustomerIDChanged();
			}
		}
	}
	
	public int ContactID
	{
		get
		{
			return this._ContactID;
		}
		set
		{
			if ((this._ContactID != value))
			{
				if (this._Person_Contact.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnContactIDChanging(value);
				this.SendPropertyChanging();
				this._ContactID = value;
				this.SendPropertyChanged("ContactID");
				this.OnContactIDChanged();
			}
		}
	}
	
	public System.Nullable<int> SalesPersonID
	{
		get
		{
			return this._SalesPersonID;
		}
		set
		{
			if ((this._SalesPersonID != value))
			{
				if (this._Sales_SalesPerson.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSalesPersonIDChanging(value);
				this.SendPropertyChanging();
				this._SalesPersonID = value;
				this.SendPropertyChanged("SalesPersonID");
				this.OnSalesPersonIDChanged();
			}
		}
	}
	
	public System.Nullable<int> TerritoryID
	{
		get
		{
			return this._TerritoryID;
		}
		set
		{
			if ((this._TerritoryID != value))
			{
				if (this._Sales_SalesTerritory.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnTerritoryIDChanging(value);
				this.SendPropertyChanging();
				this._TerritoryID = value;
				this.SendPropertyChanged("TerritoryID");
				this.OnTerritoryIDChanged();
			}
		}
	}
	
	public int BillToAddressID
	{
		get
		{
			return this._BillToAddressID;
		}
		set
		{
			if ((this._BillToAddressID != value))
			{
				if (this._Person_Address.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnBillToAddressIDChanging(value);
				this.SendPropertyChanging();
				this._BillToAddressID = value;
				this.SendPropertyChanged("BillToAddressID");
				this.OnBillToAddressIDChanged();
			}
		}
	}
	
	public int ShipToAddressID
	{
		get
		{
			return this._ShipToAddressID;
		}
		set
		{
			if ((this._ShipToAddressID != value))
			{
				if (this._ShipToAddress.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnShipToAddressIDChanging(value);
				this.SendPropertyChanging();
				this._ShipToAddressID = value;
				this.SendPropertyChanged("ShipToAddressID");
				this.OnShipToAddressIDChanged();
			}
		}
	}
	
	public int ShipMethodID
	{
		get
		{
			return this._ShipMethodID;
		}
		set
		{
			if ((this._ShipMethodID != value))
			{
				if (this._Purchasing_ShipMethod.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnShipMethodIDChanging(value);
				this.SendPropertyChanging();
				this._ShipMethodID = value;
				this.SendPropertyChanged("ShipMethodID");
				this.OnShipMethodIDChanged();
			}
		}
	}
	
	public System.Nullable<int> CreditCardID
	{
		get
		{
			return this._CreditCardID;
		}
		set
		{
			if ((this._CreditCardID != value))
			{
				if (this._Sales_CreditCard.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCreditCardIDChanging(value);
				this.SendPropertyChanging();
				this._CreditCardID = value;
				this.SendPropertyChanged("CreditCardID");
				this.OnCreditCardIDChanged();
			}
		}
	}
	
	public string CreditCardApprovalCode
	{
		get
		{
			return this._CreditCardApprovalCode;
		}
		set
		{
			if ((this._CreditCardApprovalCode != value))
			{
				this.OnCreditCardApprovalCodeChanging(value);
				this.SendPropertyChanging();
				this._CreditCardApprovalCode = value;
				this.SendPropertyChanged("CreditCardApprovalCode");
				this.OnCreditCardApprovalCodeChanged();
			}
		}
	}
	
	public System.Nullable<int> CurrencyRateID
	{
		get
		{
			return this._CurrencyRateID;
		}
		set
		{
			if ((this._CurrencyRateID != value))
			{
				if (this._Sales_CurrencyRate.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCurrencyRateIDChanging(value);
				this.SendPropertyChanging();
				this._CurrencyRateID = value;
				this.SendPropertyChanged("CurrencyRateID");
				this.OnCurrencyRateIDChanged();
			}
		}
	}
	
	public decimal SubTotal
	{
		get
		{
			return this._SubTotal;
		}
		set
		{
			if ((this._SubTotal != value))
			{
				this.OnSubTotalChanging(value);
				this.SendPropertyChanging();
				this._SubTotal = value;
				this.SendPropertyChanged("SubTotal");
				this.OnSubTotalChanged();
			}
		}
	}
	
	public decimal TaxAmt
	{
		get
		{
			return this._TaxAmt;
		}
		set
		{
			if ((this._TaxAmt != value))
			{
				this.OnTaxAmtChanging(value);
				this.SendPropertyChanging();
				this._TaxAmt = value;
				this.SendPropertyChanged("TaxAmt");
				this.OnTaxAmtChanged();
			}
		}
	}
	
	public decimal Freight
	{
		get
		{
			return this._Freight;
		}
		set
		{
			if ((this._Freight != value))
			{
				this.OnFreightChanging(value);
				this.SendPropertyChanging();
				this._Freight = value;
				this.SendPropertyChanged("Freight");
				this.OnFreightChanged();
			}
		}
	}
	
	public decimal TotalDue
	{
		get
		{
			return this._TotalDue;
		}
		set
		{
			if ((this._TotalDue != value))
			{
				this.OnTotalDueChanging(value);
				this.SendPropertyChanging();
				this._TotalDue = value;
				this.SendPropertyChanged("TotalDue");
				this.OnTotalDueChanged();
			}
		}
	}
	
	public string Comment
	{
		get
		{
			return this._Comment;
		}
		set
		{
			if ((this._Comment != value))
			{
				this.OnCommentChanging(value);
				this.SendPropertyChanging();
				this._Comment = value;
				this.SendPropertyChanged("Comment");
				this.OnCommentChanged();
			}
		}
	}
	
	public System.Guid Rowguid
	{
		get
		{
			return this._Rowguid;
		}
		set
		{
			if ((this._Rowguid != value))
			{
				this.OnRowguidChanging(value);
				this.SendPropertyChanging();
				this._Rowguid = value;
				this.SendPropertyChanged("Rowguid");
				this.OnRowguidChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public EntitySet<Sales_SalesOrderDetail> Sales_SalesOrderDetail
	{
		get
		{
			return this._Sales_SalesOrderDetail;
		}
		set
		{
			this._Sales_SalesOrderDetail.Assign(value);
		}
	}
	
	public Person_Address Person_Address
	{
		get
		{
			return this._Person_Address.Entity;
		}
		set
		{
			Person_Address previousValue = this._Person_Address.Entity;
			if (((previousValue != value) 
						|| (this._Person_Address.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Person_Address.Entity = null;
					previousValue.Sales_SalesOrderHeader.Remove(this);
				}
				this._Person_Address.Entity = value;
				if ((value != null))
				{
					value.Sales_SalesOrderHeader.Add(this);
					this._BillToAddressID = value.AddressID;
				}
				else
				{
					this._BillToAddressID = default(int);
				}
				this.SendPropertyChanged("Person_Address");
			}
		}
	}
	
	public Person_Address ShipToAddress
	{
		get
		{
			return this._ShipToAddress.Entity;
		}
		set
		{
			Person_Address previousValue = this._ShipToAddress.Entity;
			if (((previousValue != value) 
						|| (this._ShipToAddress.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ShipToAddress.Entity = null;
					previousValue.Address.Remove(this);
				}
				this._ShipToAddress.Entity = value;
				if ((value != null))
				{
					value.Address.Add(this);
					this._ShipToAddressID = value.AddressID;
				}
				else
				{
					this._ShipToAddressID = default(int);
				}
				this.SendPropertyChanged("ShipToAddress");
			}
		}
	}
	
	public Person_Contact Person_Contact
	{
		get
		{
			return this._Person_Contact.Entity;
		}
		set
		{
			Person_Contact previousValue = this._Person_Contact.Entity;
			if (((previousValue != value) 
						|| (this._Person_Contact.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Person_Contact.Entity = null;
					previousValue.Sales_SalesOrderHeader.Remove(this);
				}
				this._Person_Contact.Entity = value;
				if ((value != null))
				{
					value.Sales_SalesOrderHeader.Add(this);
					this._ContactID = value.ContactID;
				}
				else
				{
					this._ContactID = default(int);
				}
				this.SendPropertyChanged("Person_Contact");
			}
		}
	}
	
	public Sales_CreditCard Sales_CreditCard
	{
		get
		{
			return this._Sales_CreditCard.Entity;
		}
		set
		{
			Sales_CreditCard previousValue = this._Sales_CreditCard.Entity;
			if (((previousValue != value) 
						|| (this._Sales_CreditCard.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Sales_CreditCard.Entity = null;
					previousValue.Sales_SalesOrderHeader.Remove(this);
				}
				this._Sales_CreditCard.Entity = value;
				if ((value != null))
				{
					value.Sales_SalesOrderHeader.Add(this);
					this._CreditCardID = value.CreditCardID;
				}
				else
				{
					this._CreditCardID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Sales_CreditCard");
			}
		}
	}
	
	public Sales_CurrencyRate Sales_CurrencyRate
	{
		get
		{
			return this._Sales_CurrencyRate.Entity;
		}
		set
		{
			Sales_CurrencyRate previousValue = this._Sales_CurrencyRate.Entity;
			if (((previousValue != value) 
						|| (this._Sales_CurrencyRate.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Sales_CurrencyRate.Entity = null;
					previousValue.Sales_SalesOrderHeader.Remove(this);
				}
				this._Sales_CurrencyRate.Entity = value;
				if ((value != null))
				{
					value.Sales_SalesOrderHeader.Add(this);
					this._CurrencyRateID = value.CurrencyRateID;
				}
				else
				{
					this._CurrencyRateID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Sales_CurrencyRate");
			}
		}
	}
	
	public Sales_Customer Sales_Customer
	{
		get
		{
			return this._Sales_Customer.Entity;
		}
		set
		{
			Sales_Customer previousValue = this._Sales_Customer.Entity;
			if (((previousValue != value) 
						|| (this._Sales_Customer.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Sales_Customer.Entity = null;
					previousValue.Sales_SalesOrderHeader.Remove(this);
				}
				this._Sales_Customer.Entity = value;
				if ((value != null))
				{
					value.Sales_SalesOrderHeader.Add(this);
					this._CustomerID = value.CustomerID;
				}
				else
				{
					this._CustomerID = default(int);
				}
				this.SendPropertyChanged("Sales_Customer");
			}
		}
	}
	
	public Sales_SalesPerson Sales_SalesPerson
	{
		get
		{
			return this._Sales_SalesPerson.Entity;
		}
		set
		{
			Sales_SalesPerson previousValue = this._Sales_SalesPerson.Entity;
			if (((previousValue != value) 
						|| (this._Sales_SalesPerson.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Sales_SalesPerson.Entity = null;
					previousValue.Sales_SalesOrderHeader.Remove(this);
				}
				this._Sales_SalesPerson.Entity = value;
				if ((value != null))
				{
					value.Sales_SalesOrderHeader.Add(this);
					this._SalesPersonID = value.SalesPersonID;
				}
				else
				{
					this._SalesPersonID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Sales_SalesPerson");
			}
		}
	}
	
	public Sales_SalesTerritory Sales_SalesTerritory
	{
		get
		{
			return this._Sales_SalesTerritory.Entity;
		}
		set
		{
			Sales_SalesTerritory previousValue = this._Sales_SalesTerritory.Entity;
			if (((previousValue != value) 
						|| (this._Sales_SalesTerritory.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Sales_SalesTerritory.Entity = null;
					previousValue.Sales_SalesOrderHeader.Remove(this);
				}
				this._Sales_SalesTerritory.Entity = value;
				if ((value != null))
				{
					value.Sales_SalesOrderHeader.Add(this);
					this._TerritoryID = value.TerritoryID;
				}
				else
				{
					this._TerritoryID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Sales_SalesTerritory");
			}
		}
	}
	
	public Purchasing_ShipMethod Purchasing_ShipMethod
	{
		get
		{
			return this._Purchasing_ShipMethod.Entity;
		}
		set
		{
			Purchasing_ShipMethod previousValue = this._Purchasing_ShipMethod.Entity;
			if (((previousValue != value) 
						|| (this._Purchasing_ShipMethod.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Purchasing_ShipMethod.Entity = null;
					previousValue.Sales_SalesOrderHeader.Remove(this);
				}
				this._Purchasing_ShipMethod.Entity = value;
				if ((value != null))
				{
					value.Sales_SalesOrderHeader.Add(this);
					this._ShipMethodID = value.ShipMethodID;
				}
				else
				{
					this._ShipMethodID = default(int);
				}
				this.SendPropertyChanged("Purchasing_ShipMethod");
			}
		}
	}
	
	public EntitySet<Sales_SalesOrderHeaderSalesReason> Sales_SalesOrderHeaderSalesReason
	{
		get
		{
			return this._Sales_SalesOrderHeaderSalesReason;
		}
		set
		{
			this._Sales_SalesOrderHeaderSalesReason.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Sales_SalesOrderDetail(Sales_SalesOrderDetail entity)
	{
		this.SendPropertyChanging();
		entity.Sales_SalesOrderHeader = this;
	}
	
	private void detach_Sales_SalesOrderDetail(Sales_SalesOrderDetail entity)
	{
		this.SendPropertyChanging();
		entity.Sales_SalesOrderHeader = null;
	}
	
	private void attach_Sales_SalesOrderHeaderSalesReason(Sales_SalesOrderHeaderSalesReason entity)
	{
		this.SendPropertyChanging();
		entity.Sales_SalesOrderHeader = this;
	}
	
	private void detach_Sales_SalesOrderHeaderSalesReason(Sales_SalesOrderHeaderSalesReason entity)
	{
		this.SendPropertyChanging();
		entity.Sales_SalesOrderHeader = null;
	}
}

public partial class Sales_SalesOrderHeaderSalesReason : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _SalesOrderID;
	
	private int _SalesReasonID;
	
	private System.DateTime _ModifiedDate;
	
	private EntityRef<Sales_SalesOrderHeader> _Sales_SalesOrderHeader;
	
	private EntityRef<Sales_SalesReason> _Sales_SalesReason;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSalesOrderIDChanging(int value);
    partial void OnSalesOrderIDChanged();
    partial void OnSalesReasonIDChanging(int value);
    partial void OnSalesReasonIDChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Sales_SalesOrderHeaderSalesReason()
	{
		this._Sales_SalesOrderHeader = default(EntityRef<Sales_SalesOrderHeader>);
		this._Sales_SalesReason = default(EntityRef<Sales_SalesReason>);
		OnCreated();
	}
	
	public int SalesOrderID
	{
		get
		{
			return this._SalesOrderID;
		}
		set
		{
			if ((this._SalesOrderID != value))
			{
				if (this._Sales_SalesOrderHeader.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSalesOrderIDChanging(value);
				this.SendPropertyChanging();
				this._SalesOrderID = value;
				this.SendPropertyChanged("SalesOrderID");
				this.OnSalesOrderIDChanged();
			}
		}
	}
	
	public int SalesReasonID
	{
		get
		{
			return this._SalesReasonID;
		}
		set
		{
			if ((this._SalesReasonID != value))
			{
				if (this._Sales_SalesReason.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSalesReasonIDChanging(value);
				this.SendPropertyChanging();
				this._SalesReasonID = value;
				this.SendPropertyChanged("SalesReasonID");
				this.OnSalesReasonIDChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public Sales_SalesOrderHeader Sales_SalesOrderHeader
	{
		get
		{
			return this._Sales_SalesOrderHeader.Entity;
		}
		set
		{
			Sales_SalesOrderHeader previousValue = this._Sales_SalesOrderHeader.Entity;
			if (((previousValue != value) 
						|| (this._Sales_SalesOrderHeader.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Sales_SalesOrderHeader.Entity = null;
					previousValue.Sales_SalesOrderHeaderSalesReason.Remove(this);
				}
				this._Sales_SalesOrderHeader.Entity = value;
				if ((value != null))
				{
					value.Sales_SalesOrderHeaderSalesReason.Add(this);
					this._SalesOrderID = value.SalesOrderID;
				}
				else
				{
					this._SalesOrderID = default(int);
				}
				this.SendPropertyChanged("Sales_SalesOrderHeader");
			}
		}
	}
	
	public Sales_SalesReason Sales_SalesReason
	{
		get
		{
			return this._Sales_SalesReason.Entity;
		}
		set
		{
			Sales_SalesReason previousValue = this._Sales_SalesReason.Entity;
			if (((previousValue != value) 
						|| (this._Sales_SalesReason.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Sales_SalesReason.Entity = null;
					previousValue.Sales_SalesOrderHeaderSalesReason.Remove(this);
				}
				this._Sales_SalesReason.Entity = value;
				if ((value != null))
				{
					value.Sales_SalesOrderHeaderSalesReason.Add(this);
					this._SalesReasonID = value.SalesReasonID;
				}
				else
				{
					this._SalesReasonID = default(int);
				}
				this.SendPropertyChanged("Sales_SalesReason");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

public partial class Sales_SalesPerson : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _SalesPersonID;
	
	private System.Nullable<int> _TerritoryID;
	
	private System.Nullable<decimal> _SalesQuota;
	
	private decimal _Bonus;
	
	private decimal _CommissionPct;
	
	private decimal _SalesYTD;
	
	private decimal _SalesLastYear;
	
	private System.Guid _Rowguid;
	
	private System.DateTime _ModifiedDate;
	
	private EntitySet<Sales_SalesOrderHeader> _Sales_SalesOrderHeader;
	
	private EntityRef<HumanResources_Employee> _HumanResources_Employee;
	
	private EntityRef<Sales_SalesTerritory> _Sales_SalesTerritory;
	
	private EntitySet<Sales_SalesPersonQuotaHistory> _Sales_SalesPersonQuotaHistory;
	
	private EntitySet<Sales_SalesTerritoryHistory> _Sales_SalesTerritoryHistory;
	
	private EntitySet<Sales_Store> _Sales_Store;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSalesPersonIDChanging(int value);
    partial void OnSalesPersonIDChanged();
    partial void OnTerritoryIDChanging(System.Nullable<int> value);
    partial void OnTerritoryIDChanged();
    partial void OnSalesQuotaChanging(System.Nullable<decimal> value);
    partial void OnSalesQuotaChanged();
    partial void OnBonusChanging(decimal value);
    partial void OnBonusChanged();
    partial void OnCommissionPctChanging(decimal value);
    partial void OnCommissionPctChanged();
    partial void OnSalesYTDChanging(decimal value);
    partial void OnSalesYTDChanged();
    partial void OnSalesLastYearChanging(decimal value);
    partial void OnSalesLastYearChanged();
    partial void OnRowguidChanging(System.Guid value);
    partial void OnRowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Sales_SalesPerson()
	{
		this._Sales_SalesOrderHeader = new EntitySet<Sales_SalesOrderHeader>(new Action<Sales_SalesOrderHeader>(this.attach_Sales_SalesOrderHeader), new Action<Sales_SalesOrderHeader>(this.detach_Sales_SalesOrderHeader));
		this._HumanResources_Employee = default(EntityRef<HumanResources_Employee>);
		this._Sales_SalesTerritory = default(EntityRef<Sales_SalesTerritory>);
		this._Sales_SalesPersonQuotaHistory = new EntitySet<Sales_SalesPersonQuotaHistory>(new Action<Sales_SalesPersonQuotaHistory>(this.attach_Sales_SalesPersonQuotaHistory), new Action<Sales_SalesPersonQuotaHistory>(this.detach_Sales_SalesPersonQuotaHistory));
		this._Sales_SalesTerritoryHistory = new EntitySet<Sales_SalesTerritoryHistory>(new Action<Sales_SalesTerritoryHistory>(this.attach_Sales_SalesTerritoryHistory), new Action<Sales_SalesTerritoryHistory>(this.detach_Sales_SalesTerritoryHistory));
		this._Sales_Store = new EntitySet<Sales_Store>(new Action<Sales_Store>(this.attach_Sales_Store), new Action<Sales_Store>(this.detach_Sales_Store));
		OnCreated();
	}
	
	public int SalesPersonID
	{
		get
		{
			return this._SalesPersonID;
		}
		set
		{
			if ((this._SalesPersonID != value))
			{
				if (this._HumanResources_Employee.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSalesPersonIDChanging(value);
				this.SendPropertyChanging();
				this._SalesPersonID = value;
				this.SendPropertyChanged("SalesPersonID");
				this.OnSalesPersonIDChanged();
			}
		}
	}
	
	public System.Nullable<int> TerritoryID
	{
		get
		{
			return this._TerritoryID;
		}
		set
		{
			if ((this._TerritoryID != value))
			{
				if (this._Sales_SalesTerritory.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnTerritoryIDChanging(value);
				this.SendPropertyChanging();
				this._TerritoryID = value;
				this.SendPropertyChanged("TerritoryID");
				this.OnTerritoryIDChanged();
			}
		}
	}
	
	public System.Nullable<decimal> SalesQuota
	{
		get
		{
			return this._SalesQuota;
		}
		set
		{
			if ((this._SalesQuota != value))
			{
				this.OnSalesQuotaChanging(value);
				this.SendPropertyChanging();
				this._SalesQuota = value;
				this.SendPropertyChanged("SalesQuota");
				this.OnSalesQuotaChanged();
			}
		}
	}
	
	public decimal Bonus
	{
		get
		{
			return this._Bonus;
		}
		set
		{
			if ((this._Bonus != value))
			{
				this.OnBonusChanging(value);
				this.SendPropertyChanging();
				this._Bonus = value;
				this.SendPropertyChanged("Bonus");
				this.OnBonusChanged();
			}
		}
	}
	
	public decimal CommissionPct
	{
		get
		{
			return this._CommissionPct;
		}
		set
		{
			if ((this._CommissionPct != value))
			{
				this.OnCommissionPctChanging(value);
				this.SendPropertyChanging();
				this._CommissionPct = value;
				this.SendPropertyChanged("CommissionPct");
				this.OnCommissionPctChanged();
			}
		}
	}
	
	public decimal SalesYTD
	{
		get
		{
			return this._SalesYTD;
		}
		set
		{
			if ((this._SalesYTD != value))
			{
				this.OnSalesYTDChanging(value);
				this.SendPropertyChanging();
				this._SalesYTD = value;
				this.SendPropertyChanged("SalesYTD");
				this.OnSalesYTDChanged();
			}
		}
	}
	
	public decimal SalesLastYear
	{
		get
		{
			return this._SalesLastYear;
		}
		set
		{
			if ((this._SalesLastYear != value))
			{
				this.OnSalesLastYearChanging(value);
				this.SendPropertyChanging();
				this._SalesLastYear = value;
				this.SendPropertyChanged("SalesLastYear");
				this.OnSalesLastYearChanged();
			}
		}
	}
	
	public System.Guid Rowguid
	{
		get
		{
			return this._Rowguid;
		}
		set
		{
			if ((this._Rowguid != value))
			{
				this.OnRowguidChanging(value);
				this.SendPropertyChanging();
				this._Rowguid = value;
				this.SendPropertyChanged("Rowguid");
				this.OnRowguidChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public EntitySet<Sales_SalesOrderHeader> Sales_SalesOrderHeader
	{
		get
		{
			return this._Sales_SalesOrderHeader;
		}
		set
		{
			this._Sales_SalesOrderHeader.Assign(value);
		}
	}
	
	public HumanResources_Employee HumanResources_Employee
	{
		get
		{
			return this._HumanResources_Employee.Entity;
		}
		set
		{
			HumanResources_Employee previousValue = this._HumanResources_Employee.Entity;
			if (((previousValue != value) 
						|| (this._HumanResources_Employee.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._HumanResources_Employee.Entity = null;
					previousValue.Sales_SalesPerson = null;
				}
				this._HumanResources_Employee.Entity = value;
				if ((value != null))
				{
					value.Sales_SalesPerson = this;
					this._SalesPersonID = value.EmployeeID;
				}
				else
				{
					this._SalesPersonID = default(int);
				}
				this.SendPropertyChanged("HumanResources_Employee");
			}
		}
	}
	
	public Sales_SalesTerritory Sales_SalesTerritory
	{
		get
		{
			return this._Sales_SalesTerritory.Entity;
		}
		set
		{
			Sales_SalesTerritory previousValue = this._Sales_SalesTerritory.Entity;
			if (((previousValue != value) 
						|| (this._Sales_SalesTerritory.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Sales_SalesTerritory.Entity = null;
					previousValue.Sales_SalesPerson.Remove(this);
				}
				this._Sales_SalesTerritory.Entity = value;
				if ((value != null))
				{
					value.Sales_SalesPerson.Add(this);
					this._TerritoryID = value.TerritoryID;
				}
				else
				{
					this._TerritoryID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Sales_SalesTerritory");
			}
		}
	}
	
	public EntitySet<Sales_SalesPersonQuotaHistory> Sales_SalesPersonQuotaHistory
	{
		get
		{
			return this._Sales_SalesPersonQuotaHistory;
		}
		set
		{
			this._Sales_SalesPersonQuotaHistory.Assign(value);
		}
	}
	
	public EntitySet<Sales_SalesTerritoryHistory> Sales_SalesTerritoryHistory
	{
		get
		{
			return this._Sales_SalesTerritoryHistory;
		}
		set
		{
			this._Sales_SalesTerritoryHistory.Assign(value);
		}
	}
	
	public EntitySet<Sales_Store> Sales_Store
	{
		get
		{
			return this._Sales_Store;
		}
		set
		{
			this._Sales_Store.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Sales_SalesOrderHeader(Sales_SalesOrderHeader entity)
	{
		this.SendPropertyChanging();
		entity.Sales_SalesPerson = this;
	}
	
	private void detach_Sales_SalesOrderHeader(Sales_SalesOrderHeader entity)
	{
		this.SendPropertyChanging();
		entity.Sales_SalesPerson = null;
	}
	
	private void attach_Sales_SalesPersonQuotaHistory(Sales_SalesPersonQuotaHistory entity)
	{
		this.SendPropertyChanging();
		entity.Sales_SalesPerson = this;
	}
	
	private void detach_Sales_SalesPersonQuotaHistory(Sales_SalesPersonQuotaHistory entity)
	{
		this.SendPropertyChanging();
		entity.Sales_SalesPerson = null;
	}
	
	private void attach_Sales_SalesTerritoryHistory(Sales_SalesTerritoryHistory entity)
	{
		this.SendPropertyChanging();
		entity.Sales_SalesPerson = this;
	}
	
	private void detach_Sales_SalesTerritoryHistory(Sales_SalesTerritoryHistory entity)
	{
		this.SendPropertyChanging();
		entity.Sales_SalesPerson = null;
	}
	
	private void attach_Sales_Store(Sales_Store entity)
	{
		this.SendPropertyChanging();
		entity.Sales_SalesPerson = this;
	}
	
	private void detach_Sales_Store(Sales_Store entity)
	{
		this.SendPropertyChanging();
		entity.Sales_SalesPerson = null;
	}
}

public partial class Sales_SalesPersonQuotaHistory : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _SalesPersonID;
	
	private System.DateTime _QuotaDate;
	
	private decimal _SalesQuota;
	
	private System.Guid _Rowguid;
	
	private System.DateTime _ModifiedDate;
	
	private EntityRef<Sales_SalesPerson> _Sales_SalesPerson;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSalesPersonIDChanging(int value);
    partial void OnSalesPersonIDChanged();
    partial void OnQuotaDateChanging(System.DateTime value);
    partial void OnQuotaDateChanged();
    partial void OnSalesQuotaChanging(decimal value);
    partial void OnSalesQuotaChanged();
    partial void OnRowguidChanging(System.Guid value);
    partial void OnRowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Sales_SalesPersonQuotaHistory()
	{
		this._Sales_SalesPerson = default(EntityRef<Sales_SalesPerson>);
		OnCreated();
	}
	
	public int SalesPersonID
	{
		get
		{
			return this._SalesPersonID;
		}
		set
		{
			if ((this._SalesPersonID != value))
			{
				if (this._Sales_SalesPerson.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSalesPersonIDChanging(value);
				this.SendPropertyChanging();
				this._SalesPersonID = value;
				this.SendPropertyChanged("SalesPersonID");
				this.OnSalesPersonIDChanged();
			}
		}
	}
	
	public System.DateTime QuotaDate
	{
		get
		{
			return this._QuotaDate;
		}
		set
		{
			if ((this._QuotaDate != value))
			{
				this.OnQuotaDateChanging(value);
				this.SendPropertyChanging();
				this._QuotaDate = value;
				this.SendPropertyChanged("QuotaDate");
				this.OnQuotaDateChanged();
			}
		}
	}
	
	public decimal SalesQuota
	{
		get
		{
			return this._SalesQuota;
		}
		set
		{
			if ((this._SalesQuota != value))
			{
				this.OnSalesQuotaChanging(value);
				this.SendPropertyChanging();
				this._SalesQuota = value;
				this.SendPropertyChanged("SalesQuota");
				this.OnSalesQuotaChanged();
			}
		}
	}
	
	public System.Guid Rowguid
	{
		get
		{
			return this._Rowguid;
		}
		set
		{
			if ((this._Rowguid != value))
			{
				this.OnRowguidChanging(value);
				this.SendPropertyChanging();
				this._Rowguid = value;
				this.SendPropertyChanged("Rowguid");
				this.OnRowguidChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public Sales_SalesPerson Sales_SalesPerson
	{
		get
		{
			return this._Sales_SalesPerson.Entity;
		}
		set
		{
			Sales_SalesPerson previousValue = this._Sales_SalesPerson.Entity;
			if (((previousValue != value) 
						|| (this._Sales_SalesPerson.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Sales_SalesPerson.Entity = null;
					previousValue.Sales_SalesPersonQuotaHistory.Remove(this);
				}
				this._Sales_SalesPerson.Entity = value;
				if ((value != null))
				{
					value.Sales_SalesPersonQuotaHistory.Add(this);
					this._SalesPersonID = value.SalesPersonID;
				}
				else
				{
					this._SalesPersonID = default(int);
				}
				this.SendPropertyChanged("Sales_SalesPerson");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

public partial class Sales_SalesReason : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _SalesReasonID;
	
	private string _Name;
	
	private string _ReasonType;
	
	private System.DateTime _ModifiedDate;
	
	private EntitySet<Sales_SalesOrderHeaderSalesReason> _Sales_SalesOrderHeaderSalesReason;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSalesReasonIDChanging(int value);
    partial void OnSalesReasonIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnReasonTypeChanging(string value);
    partial void OnReasonTypeChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Sales_SalesReason()
	{
		this._Sales_SalesOrderHeaderSalesReason = new EntitySet<Sales_SalesOrderHeaderSalesReason>(new Action<Sales_SalesOrderHeaderSalesReason>(this.attach_Sales_SalesOrderHeaderSalesReason), new Action<Sales_SalesOrderHeaderSalesReason>(this.detach_Sales_SalesOrderHeaderSalesReason));
		OnCreated();
	}
	
	public int SalesReasonID
	{
		get
		{
			return this._SalesReasonID;
		}
		set
		{
			if ((this._SalesReasonID != value))
			{
				this.OnSalesReasonIDChanging(value);
				this.SendPropertyChanging();
				this._SalesReasonID = value;
				this.SendPropertyChanged("SalesReasonID");
				this.OnSalesReasonIDChanged();
			}
		}
	}
	
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	public string ReasonType
	{
		get
		{
			return this._ReasonType;
		}
		set
		{
			if ((this._ReasonType != value))
			{
				this.OnReasonTypeChanging(value);
				this.SendPropertyChanging();
				this._ReasonType = value;
				this.SendPropertyChanged("ReasonType");
				this.OnReasonTypeChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public EntitySet<Sales_SalesOrderHeaderSalesReason> Sales_SalesOrderHeaderSalesReason
	{
		get
		{
			return this._Sales_SalesOrderHeaderSalesReason;
		}
		set
		{
			this._Sales_SalesOrderHeaderSalesReason.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Sales_SalesOrderHeaderSalesReason(Sales_SalesOrderHeaderSalesReason entity)
	{
		this.SendPropertyChanging();
		entity.Sales_SalesReason = this;
	}
	
	private void detach_Sales_SalesOrderHeaderSalesReason(Sales_SalesOrderHeaderSalesReason entity)
	{
		this.SendPropertyChanging();
		entity.Sales_SalesReason = null;
	}
}

public partial class Sales_SalesTaxRate : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _SalesTaxRateID;
	
	private int _StateProvinceID;
	
	private byte _TaxType;
	
	private decimal _TaxRate;
	
	private string _Name;
	
	private System.Guid _Rowguid;
	
	private System.DateTime _ModifiedDate;
	
	private EntityRef<Person_StateProvince> _Person_StateProvince;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSalesTaxRateIDChanging(int value);
    partial void OnSalesTaxRateIDChanged();
    partial void OnStateProvinceIDChanging(int value);
    partial void OnStateProvinceIDChanged();
    partial void OnTaxTypeChanging(byte value);
    partial void OnTaxTypeChanged();
    partial void OnTaxRateChanging(decimal value);
    partial void OnTaxRateChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnRowguidChanging(System.Guid value);
    partial void OnRowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Sales_SalesTaxRate()
	{
		this._Person_StateProvince = default(EntityRef<Person_StateProvince>);
		OnCreated();
	}
	
	public int SalesTaxRateID
	{
		get
		{
			return this._SalesTaxRateID;
		}
		set
		{
			if ((this._SalesTaxRateID != value))
			{
				this.OnSalesTaxRateIDChanging(value);
				this.SendPropertyChanging();
				this._SalesTaxRateID = value;
				this.SendPropertyChanged("SalesTaxRateID");
				this.OnSalesTaxRateIDChanged();
			}
		}
	}
	
	public int StateProvinceID
	{
		get
		{
			return this._StateProvinceID;
		}
		set
		{
			if ((this._StateProvinceID != value))
			{
				if (this._Person_StateProvince.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnStateProvinceIDChanging(value);
				this.SendPropertyChanging();
				this._StateProvinceID = value;
				this.SendPropertyChanged("StateProvinceID");
				this.OnStateProvinceIDChanged();
			}
		}
	}
	
	public byte TaxType
	{
		get
		{
			return this._TaxType;
		}
		set
		{
			if ((this._TaxType != value))
			{
				this.OnTaxTypeChanging(value);
				this.SendPropertyChanging();
				this._TaxType = value;
				this.SendPropertyChanged("TaxType");
				this.OnTaxTypeChanged();
			}
		}
	}
	
	public decimal TaxRate
	{
		get
		{
			return this._TaxRate;
		}
		set
		{
			if ((this._TaxRate != value))
			{
				this.OnTaxRateChanging(value);
				this.SendPropertyChanging();
				this._TaxRate = value;
				this.SendPropertyChanged("TaxRate");
				this.OnTaxRateChanged();
			}
		}
	}
	
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	public System.Guid Rowguid
	{
		get
		{
			return this._Rowguid;
		}
		set
		{
			if ((this._Rowguid != value))
			{
				this.OnRowguidChanging(value);
				this.SendPropertyChanging();
				this._Rowguid = value;
				this.SendPropertyChanged("Rowguid");
				this.OnRowguidChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public Person_StateProvince Person_StateProvince
	{
		get
		{
			return this._Person_StateProvince.Entity;
		}
		set
		{
			Person_StateProvince previousValue = this._Person_StateProvince.Entity;
			if (((previousValue != value) 
						|| (this._Person_StateProvince.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Person_StateProvince.Entity = null;
					previousValue.Sales_SalesTaxRate.Remove(this);
				}
				this._Person_StateProvince.Entity = value;
				if ((value != null))
				{
					value.Sales_SalesTaxRate.Add(this);
					this._StateProvinceID = value.StateProvinceID;
				}
				else
				{
					this._StateProvinceID = default(int);
				}
				this.SendPropertyChanged("Person_StateProvince");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

public partial class Sales_SalesTerritory : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _TerritoryID;
	
	private string _Name;
	
	private string _CountryRegionCode;
	
	private string _Group;
	
	private decimal _SalesYTD;
	
	private decimal _SalesLastYear;
	
	private decimal _CostYTD;
	
	private decimal _CostLastYear;
	
	private System.Guid _Rowguid;
	
	private System.DateTime _ModifiedDate;
	
	private EntitySet<Person_StateProvince> _Person_StateProvince;
	
	private EntitySet<Sales_Customer> _Sales_Customer;
	
	private EntitySet<Sales_SalesOrderHeader> _Sales_SalesOrderHeader;
	
	private EntitySet<Sales_SalesPerson> _Sales_SalesPerson;
	
	private EntitySet<Sales_SalesTerritoryHistory> _Sales_SalesTerritoryHistory;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTerritoryIDChanging(int value);
    partial void OnTerritoryIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCountryRegionCodeChanging(string value);
    partial void OnCountryRegionCodeChanged();
    partial void OnGroupChanging(string value);
    partial void OnGroupChanged();
    partial void OnSalesYTDChanging(decimal value);
    partial void OnSalesYTDChanged();
    partial void OnSalesLastYearChanging(decimal value);
    partial void OnSalesLastYearChanged();
    partial void OnCostYTDChanging(decimal value);
    partial void OnCostYTDChanged();
    partial void OnCostLastYearChanging(decimal value);
    partial void OnCostLastYearChanged();
    partial void OnRowguidChanging(System.Guid value);
    partial void OnRowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Sales_SalesTerritory()
	{
		this._Person_StateProvince = new EntitySet<Person_StateProvince>(new Action<Person_StateProvince>(this.attach_Person_StateProvince), new Action<Person_StateProvince>(this.detach_Person_StateProvince));
		this._Sales_Customer = new EntitySet<Sales_Customer>(new Action<Sales_Customer>(this.attach_Sales_Customer), new Action<Sales_Customer>(this.detach_Sales_Customer));
		this._Sales_SalesOrderHeader = new EntitySet<Sales_SalesOrderHeader>(new Action<Sales_SalesOrderHeader>(this.attach_Sales_SalesOrderHeader), new Action<Sales_SalesOrderHeader>(this.detach_Sales_SalesOrderHeader));
		this._Sales_SalesPerson = new EntitySet<Sales_SalesPerson>(new Action<Sales_SalesPerson>(this.attach_Sales_SalesPerson), new Action<Sales_SalesPerson>(this.detach_Sales_SalesPerson));
		this._Sales_SalesTerritoryHistory = new EntitySet<Sales_SalesTerritoryHistory>(new Action<Sales_SalesTerritoryHistory>(this.attach_Sales_SalesTerritoryHistory), new Action<Sales_SalesTerritoryHistory>(this.detach_Sales_SalesTerritoryHistory));
		OnCreated();
	}
	
	public int TerritoryID
	{
		get
		{
			return this._TerritoryID;
		}
		set
		{
			if ((this._TerritoryID != value))
			{
				this.OnTerritoryIDChanging(value);
				this.SendPropertyChanging();
				this._TerritoryID = value;
				this.SendPropertyChanged("TerritoryID");
				this.OnTerritoryIDChanged();
			}
		}
	}
	
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	public string CountryRegionCode
	{
		get
		{
			return this._CountryRegionCode;
		}
		set
		{
			if ((this._CountryRegionCode != value))
			{
				this.OnCountryRegionCodeChanging(value);
				this.SendPropertyChanging();
				this._CountryRegionCode = value;
				this.SendPropertyChanged("CountryRegionCode");
				this.OnCountryRegionCodeChanged();
			}
		}
	}
	
	public string Group
	{
		get
		{
			return this._Group;
		}
		set
		{
			if ((this._Group != value))
			{
				this.OnGroupChanging(value);
				this.SendPropertyChanging();
				this._Group = value;
				this.SendPropertyChanged("Group");
				this.OnGroupChanged();
			}
		}
	}
	
	public decimal SalesYTD
	{
		get
		{
			return this._SalesYTD;
		}
		set
		{
			if ((this._SalesYTD != value))
			{
				this.OnSalesYTDChanging(value);
				this.SendPropertyChanging();
				this._SalesYTD = value;
				this.SendPropertyChanged("SalesYTD");
				this.OnSalesYTDChanged();
			}
		}
	}
	
	public decimal SalesLastYear
	{
		get
		{
			return this._SalesLastYear;
		}
		set
		{
			if ((this._SalesLastYear != value))
			{
				this.OnSalesLastYearChanging(value);
				this.SendPropertyChanging();
				this._SalesLastYear = value;
				this.SendPropertyChanged("SalesLastYear");
				this.OnSalesLastYearChanged();
			}
		}
	}
	
	public decimal CostYTD
	{
		get
		{
			return this._CostYTD;
		}
		set
		{
			if ((this._CostYTD != value))
			{
				this.OnCostYTDChanging(value);
				this.SendPropertyChanging();
				this._CostYTD = value;
				this.SendPropertyChanged("CostYTD");
				this.OnCostYTDChanged();
			}
		}
	}
	
	public decimal CostLastYear
	{
		get
		{
			return this._CostLastYear;
		}
		set
		{
			if ((this._CostLastYear != value))
			{
				this.OnCostLastYearChanging(value);
				this.SendPropertyChanging();
				this._CostLastYear = value;
				this.SendPropertyChanged("CostLastYear");
				this.OnCostLastYearChanged();
			}
		}
	}
	
	public System.Guid Rowguid
	{
		get
		{
			return this._Rowguid;
		}
		set
		{
			if ((this._Rowguid != value))
			{
				this.OnRowguidChanging(value);
				this.SendPropertyChanging();
				this._Rowguid = value;
				this.SendPropertyChanged("Rowguid");
				this.OnRowguidChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public EntitySet<Person_StateProvince> Person_StateProvince
	{
		get
		{
			return this._Person_StateProvince;
		}
		set
		{
			this._Person_StateProvince.Assign(value);
		}
	}
	
	public EntitySet<Sales_Customer> Sales_Customer
	{
		get
		{
			return this._Sales_Customer;
		}
		set
		{
			this._Sales_Customer.Assign(value);
		}
	}
	
	public EntitySet<Sales_SalesOrderHeader> Sales_SalesOrderHeader
	{
		get
		{
			return this._Sales_SalesOrderHeader;
		}
		set
		{
			this._Sales_SalesOrderHeader.Assign(value);
		}
	}
	
	public EntitySet<Sales_SalesPerson> Sales_SalesPerson
	{
		get
		{
			return this._Sales_SalesPerson;
		}
		set
		{
			this._Sales_SalesPerson.Assign(value);
		}
	}
	
	public EntitySet<Sales_SalesTerritoryHistory> Sales_SalesTerritoryHistory
	{
		get
		{
			return this._Sales_SalesTerritoryHistory;
		}
		set
		{
			this._Sales_SalesTerritoryHistory.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Person_StateProvince(Person_StateProvince entity)
	{
		this.SendPropertyChanging();
		entity.Sales_SalesTerritory = this;
	}
	
	private void detach_Person_StateProvince(Person_StateProvince entity)
	{
		this.SendPropertyChanging();
		entity.Sales_SalesTerritory = null;
	}
	
	private void attach_Sales_Customer(Sales_Customer entity)
	{
		this.SendPropertyChanging();
		entity.Sales_SalesTerritory = this;
	}
	
	private void detach_Sales_Customer(Sales_Customer entity)
	{
		this.SendPropertyChanging();
		entity.Sales_SalesTerritory = null;
	}
	
	private void attach_Sales_SalesOrderHeader(Sales_SalesOrderHeader entity)
	{
		this.SendPropertyChanging();
		entity.Sales_SalesTerritory = this;
	}
	
	private void detach_Sales_SalesOrderHeader(Sales_SalesOrderHeader entity)
	{
		this.SendPropertyChanging();
		entity.Sales_SalesTerritory = null;
	}
	
	private void attach_Sales_SalesPerson(Sales_SalesPerson entity)
	{
		this.SendPropertyChanging();
		entity.Sales_SalesTerritory = this;
	}
	
	private void detach_Sales_SalesPerson(Sales_SalesPerson entity)
	{
		this.SendPropertyChanging();
		entity.Sales_SalesTerritory = null;
	}
	
	private void attach_Sales_SalesTerritoryHistory(Sales_SalesTerritoryHistory entity)
	{
		this.SendPropertyChanging();
		entity.Sales_SalesTerritory = this;
	}
	
	private void detach_Sales_SalesTerritoryHistory(Sales_SalesTerritoryHistory entity)
	{
		this.SendPropertyChanging();
		entity.Sales_SalesTerritory = null;
	}
}

public partial class Sales_SalesTerritoryHistory : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _SalesPersonID;
	
	private int _TerritoryID;
	
	private System.DateTime _StartDate;
	
	private System.Nullable<System.DateTime> _EndDate;
	
	private System.Guid _Rowguid;
	
	private System.DateTime _ModifiedDate;
	
	private EntityRef<Sales_SalesPerson> _Sales_SalesPerson;
	
	private EntityRef<Sales_SalesTerritory> _Sales_SalesTerritory;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSalesPersonIDChanging(int value);
    partial void OnSalesPersonIDChanged();
    partial void OnTerritoryIDChanging(int value);
    partial void OnTerritoryIDChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnRowguidChanging(System.Guid value);
    partial void OnRowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Sales_SalesTerritoryHistory()
	{
		this._Sales_SalesPerson = default(EntityRef<Sales_SalesPerson>);
		this._Sales_SalesTerritory = default(EntityRef<Sales_SalesTerritory>);
		OnCreated();
	}
	
	public int SalesPersonID
	{
		get
		{
			return this._SalesPersonID;
		}
		set
		{
			if ((this._SalesPersonID != value))
			{
				if (this._Sales_SalesPerson.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSalesPersonIDChanging(value);
				this.SendPropertyChanging();
				this._SalesPersonID = value;
				this.SendPropertyChanged("SalesPersonID");
				this.OnSalesPersonIDChanged();
			}
		}
	}
	
	public int TerritoryID
	{
		get
		{
			return this._TerritoryID;
		}
		set
		{
			if ((this._TerritoryID != value))
			{
				if (this._Sales_SalesTerritory.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnTerritoryIDChanging(value);
				this.SendPropertyChanging();
				this._TerritoryID = value;
				this.SendPropertyChanged("TerritoryID");
				this.OnTerritoryIDChanged();
			}
		}
	}
	
	public System.DateTime StartDate
	{
		get
		{
			return this._StartDate;
		}
		set
		{
			if ((this._StartDate != value))
			{
				this.OnStartDateChanging(value);
				this.SendPropertyChanging();
				this._StartDate = value;
				this.SendPropertyChanged("StartDate");
				this.OnStartDateChanged();
			}
		}
	}
	
	public System.Nullable<System.DateTime> EndDate
	{
		get
		{
			return this._EndDate;
		}
		set
		{
			if ((this._EndDate != value))
			{
				this.OnEndDateChanging(value);
				this.SendPropertyChanging();
				this._EndDate = value;
				this.SendPropertyChanged("EndDate");
				this.OnEndDateChanged();
			}
		}
	}
	
	public System.Guid Rowguid
	{
		get
		{
			return this._Rowguid;
		}
		set
		{
			if ((this._Rowguid != value))
			{
				this.OnRowguidChanging(value);
				this.SendPropertyChanging();
				this._Rowguid = value;
				this.SendPropertyChanged("Rowguid");
				this.OnRowguidChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public Sales_SalesPerson Sales_SalesPerson
	{
		get
		{
			return this._Sales_SalesPerson.Entity;
		}
		set
		{
			Sales_SalesPerson previousValue = this._Sales_SalesPerson.Entity;
			if (((previousValue != value) 
						|| (this._Sales_SalesPerson.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Sales_SalesPerson.Entity = null;
					previousValue.Sales_SalesTerritoryHistory.Remove(this);
				}
				this._Sales_SalesPerson.Entity = value;
				if ((value != null))
				{
					value.Sales_SalesTerritoryHistory.Add(this);
					this._SalesPersonID = value.SalesPersonID;
				}
				else
				{
					this._SalesPersonID = default(int);
				}
				this.SendPropertyChanged("Sales_SalesPerson");
			}
		}
	}
	
	public Sales_SalesTerritory Sales_SalesTerritory
	{
		get
		{
			return this._Sales_SalesTerritory.Entity;
		}
		set
		{
			Sales_SalesTerritory previousValue = this._Sales_SalesTerritory.Entity;
			if (((previousValue != value) 
						|| (this._Sales_SalesTerritory.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Sales_SalesTerritory.Entity = null;
					previousValue.Sales_SalesTerritoryHistory.Remove(this);
				}
				this._Sales_SalesTerritory.Entity = value;
				if ((value != null))
				{
					value.Sales_SalesTerritoryHistory.Add(this);
					this._TerritoryID = value.TerritoryID;
				}
				else
				{
					this._TerritoryID = default(int);
				}
				this.SendPropertyChanged("Sales_SalesTerritory");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

public partial class Production_ScrapReason : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private short _ScrapReasonID;
	
	private string _Name;
	
	private System.DateTime _ModifiedDate;
	
	private EntitySet<Production_WorkOrder> _Production_WorkOrder;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnScrapReasonIDChanging(short value);
    partial void OnScrapReasonIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Production_ScrapReason()
	{
		this._Production_WorkOrder = new EntitySet<Production_WorkOrder>(new Action<Production_WorkOrder>(this.attach_Production_WorkOrder), new Action<Production_WorkOrder>(this.detach_Production_WorkOrder));
		OnCreated();
	}
	
	public short ScrapReasonID
	{
		get
		{
			return this._ScrapReasonID;
		}
		set
		{
			if ((this._ScrapReasonID != value))
			{
				this.OnScrapReasonIDChanging(value);
				this.SendPropertyChanging();
				this._ScrapReasonID = value;
				this.SendPropertyChanged("ScrapReasonID");
				this.OnScrapReasonIDChanged();
			}
		}
	}
	
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public EntitySet<Production_WorkOrder> Production_WorkOrder
	{
		get
		{
			return this._Production_WorkOrder;
		}
		set
		{
			this._Production_WorkOrder.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Production_WorkOrder(Production_WorkOrder entity)
	{
		this.SendPropertyChanging();
		entity.Production_ScrapReason = this;
	}
	
	private void detach_Production_WorkOrder(Production_WorkOrder entity)
	{
		this.SendPropertyChanging();
		entity.Production_ScrapReason = null;
	}
}

public partial class HumanResources_Shift : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private byte _ShiftID;
	
	private string _Name;
	
	private System.DateTime _StartTime;
	
	private System.DateTime _EndTime;
	
	private System.DateTime _ModifiedDate;
	
	private EntitySet<HumanResources_EmployeeDepartmentHistory> _HumanResources_EmployeeDepartmentHistory;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShiftIDChanging(byte value);
    partial void OnShiftIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStartTimeChanging(System.DateTime value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.DateTime value);
    partial void OnEndTimeChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public HumanResources_Shift()
	{
		this._HumanResources_EmployeeDepartmentHistory = new EntitySet<HumanResources_EmployeeDepartmentHistory>(new Action<HumanResources_EmployeeDepartmentHistory>(this.attach_HumanResources_EmployeeDepartmentHistory), new Action<HumanResources_EmployeeDepartmentHistory>(this.detach_HumanResources_EmployeeDepartmentHistory));
		OnCreated();
	}
	
	public byte ShiftID
	{
		get
		{
			return this._ShiftID;
		}
		set
		{
			if ((this._ShiftID != value))
			{
				this.OnShiftIDChanging(value);
				this.SendPropertyChanging();
				this._ShiftID = value;
				this.SendPropertyChanged("ShiftID");
				this.OnShiftIDChanged();
			}
		}
	}
	
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	public System.DateTime StartTime
	{
		get
		{
			return this._StartTime;
		}
		set
		{
			if ((this._StartTime != value))
			{
				this.OnStartTimeChanging(value);
				this.SendPropertyChanging();
				this._StartTime = value;
				this.SendPropertyChanged("StartTime");
				this.OnStartTimeChanged();
			}
		}
	}
	
	public System.DateTime EndTime
	{
		get
		{
			return this._EndTime;
		}
		set
		{
			if ((this._EndTime != value))
			{
				this.OnEndTimeChanging(value);
				this.SendPropertyChanging();
				this._EndTime = value;
				this.SendPropertyChanged("EndTime");
				this.OnEndTimeChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public EntitySet<HumanResources_EmployeeDepartmentHistory> HumanResources_EmployeeDepartmentHistory
	{
		get
		{
			return this._HumanResources_EmployeeDepartmentHistory;
		}
		set
		{
			this._HumanResources_EmployeeDepartmentHistory.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_HumanResources_EmployeeDepartmentHistory(HumanResources_EmployeeDepartmentHistory entity)
	{
		this.SendPropertyChanging();
		entity.HumanResources_Shift = this;
	}
	
	private void detach_HumanResources_EmployeeDepartmentHistory(HumanResources_EmployeeDepartmentHistory entity)
	{
		this.SendPropertyChanging();
		entity.HumanResources_Shift = null;
	}
}

public partial class Purchasing_ShipMethod : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ShipMethodID;
	
	private string _Name;
	
	private decimal _ShipBase;
	
	private decimal _ShipRate;
	
	private System.Guid _Rowguid;
	
	private System.DateTime _ModifiedDate;
	
	private EntitySet<Purchasing_PurchaseOrderHeader> _Purchasing_PurchaseOrderHeader;
	
	private EntitySet<Sales_SalesOrderHeader> _Sales_SalesOrderHeader;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShipMethodIDChanging(int value);
    partial void OnShipMethodIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShipBaseChanging(decimal value);
    partial void OnShipBaseChanged();
    partial void OnShipRateChanging(decimal value);
    partial void OnShipRateChanged();
    partial void OnRowguidChanging(System.Guid value);
    partial void OnRowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Purchasing_ShipMethod()
	{
		this._Purchasing_PurchaseOrderHeader = new EntitySet<Purchasing_PurchaseOrderHeader>(new Action<Purchasing_PurchaseOrderHeader>(this.attach_Purchasing_PurchaseOrderHeader), new Action<Purchasing_PurchaseOrderHeader>(this.detach_Purchasing_PurchaseOrderHeader));
		this._Sales_SalesOrderHeader = new EntitySet<Sales_SalesOrderHeader>(new Action<Sales_SalesOrderHeader>(this.attach_Sales_SalesOrderHeader), new Action<Sales_SalesOrderHeader>(this.detach_Sales_SalesOrderHeader));
		OnCreated();
	}
	
	public int ShipMethodID
	{
		get
		{
			return this._ShipMethodID;
		}
		set
		{
			if ((this._ShipMethodID != value))
			{
				this.OnShipMethodIDChanging(value);
				this.SendPropertyChanging();
				this._ShipMethodID = value;
				this.SendPropertyChanged("ShipMethodID");
				this.OnShipMethodIDChanged();
			}
		}
	}
	
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	public decimal ShipBase
	{
		get
		{
			return this._ShipBase;
		}
		set
		{
			if ((this._ShipBase != value))
			{
				this.OnShipBaseChanging(value);
				this.SendPropertyChanging();
				this._ShipBase = value;
				this.SendPropertyChanged("ShipBase");
				this.OnShipBaseChanged();
			}
		}
	}
	
	public decimal ShipRate
	{
		get
		{
			return this._ShipRate;
		}
		set
		{
			if ((this._ShipRate != value))
			{
				this.OnShipRateChanging(value);
				this.SendPropertyChanging();
				this._ShipRate = value;
				this.SendPropertyChanged("ShipRate");
				this.OnShipRateChanged();
			}
		}
	}
	
	public System.Guid Rowguid
	{
		get
		{
			return this._Rowguid;
		}
		set
		{
			if ((this._Rowguid != value))
			{
				this.OnRowguidChanging(value);
				this.SendPropertyChanging();
				this._Rowguid = value;
				this.SendPropertyChanged("Rowguid");
				this.OnRowguidChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public EntitySet<Purchasing_PurchaseOrderHeader> Purchasing_PurchaseOrderHeader
	{
		get
		{
			return this._Purchasing_PurchaseOrderHeader;
		}
		set
		{
			this._Purchasing_PurchaseOrderHeader.Assign(value);
		}
	}
	
	public EntitySet<Sales_SalesOrderHeader> Sales_SalesOrderHeader
	{
		get
		{
			return this._Sales_SalesOrderHeader;
		}
		set
		{
			this._Sales_SalesOrderHeader.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Purchasing_PurchaseOrderHeader(Purchasing_PurchaseOrderHeader entity)
	{
		this.SendPropertyChanging();
		entity.Purchasing_ShipMethod = this;
	}
	
	private void detach_Purchasing_PurchaseOrderHeader(Purchasing_PurchaseOrderHeader entity)
	{
		this.SendPropertyChanging();
		entity.Purchasing_ShipMethod = null;
	}
	
	private void attach_Sales_SalesOrderHeader(Sales_SalesOrderHeader entity)
	{
		this.SendPropertyChanging();
		entity.Purchasing_ShipMethod = this;
	}
	
	private void detach_Sales_SalesOrderHeader(Sales_SalesOrderHeader entity)
	{
		this.SendPropertyChanging();
		entity.Purchasing_ShipMethod = null;
	}
}

public partial class Sales_ShoppingCartItem : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ShoppingCartItemID;
	
	private string _ShoppingCartID;
	
	private int _Quantity;
	
	private int _ProductID;
	
	private System.DateTime _DateCreated;
	
	private System.DateTime _ModifiedDate;
	
	private EntityRef<Production_Product> _Production_Product;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShoppingCartItemIDChanging(int value);
    partial void OnShoppingCartItemIDChanged();
    partial void OnShoppingCartIDChanging(string value);
    partial void OnShoppingCartIDChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Sales_ShoppingCartItem()
	{
		this._Production_Product = default(EntityRef<Production_Product>);
		OnCreated();
	}
	
	public int ShoppingCartItemID
	{
		get
		{
			return this._ShoppingCartItemID;
		}
		set
		{
			if ((this._ShoppingCartItemID != value))
			{
				this.OnShoppingCartItemIDChanging(value);
				this.SendPropertyChanging();
				this._ShoppingCartItemID = value;
				this.SendPropertyChanged("ShoppingCartItemID");
				this.OnShoppingCartItemIDChanged();
			}
		}
	}
	
	public string ShoppingCartID
	{
		get
		{
			return this._ShoppingCartID;
		}
		set
		{
			if ((this._ShoppingCartID != value))
			{
				this.OnShoppingCartIDChanging(value);
				this.SendPropertyChanging();
				this._ShoppingCartID = value;
				this.SendPropertyChanged("ShoppingCartID");
				this.OnShoppingCartIDChanged();
			}
		}
	}
	
	public int Quantity
	{
		get
		{
			return this._Quantity;
		}
		set
		{
			if ((this._Quantity != value))
			{
				this.OnQuantityChanging(value);
				this.SendPropertyChanging();
				this._Quantity = value;
				this.SendPropertyChanged("Quantity");
				this.OnQuantityChanged();
			}
		}
	}
	
	public int ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				if (this._Production_Product.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProductIDChanging(value);
				this.SendPropertyChanging();
				this._ProductID = value;
				this.SendPropertyChanged("ProductID");
				this.OnProductIDChanged();
			}
		}
	}
	
	public System.DateTime DateCreated
	{
		get
		{
			return this._DateCreated;
		}
		set
		{
			if ((this._DateCreated != value))
			{
				this.OnDateCreatedChanging(value);
				this.SendPropertyChanging();
				this._DateCreated = value;
				this.SendPropertyChanged("DateCreated");
				this.OnDateCreatedChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public Production_Product Production_Product
	{
		get
		{
			return this._Production_Product.Entity;
		}
		set
		{
			Production_Product previousValue = this._Production_Product.Entity;
			if (((previousValue != value) 
						|| (this._Production_Product.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Production_Product.Entity = null;
					previousValue.Sales_ShoppingCartItem.Remove(this);
				}
				this._Production_Product.Entity = value;
				if ((value != null))
				{
					value.Sales_ShoppingCartItem.Add(this);
					this._ProductID = value.ProductID;
				}
				else
				{
					this._ProductID = default(int);
				}
				this.SendPropertyChanged("Production_Product");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

public partial class Sales_SpecialOffer : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _SpecialOfferID;
	
	private string _Description;
	
	private decimal _DiscountPct;
	
	private string _Type;
	
	private string _Category;
	
	private System.DateTime _StartDate;
	
	private System.DateTime _EndDate;
	
	private int _MinQty;
	
	private System.Nullable<int> _MaxQty;
	
	private System.Guid _Rowguid;
	
	private System.DateTime _ModifiedDate;
	
	private EntitySet<Sales_SpecialOfferProduct> _Sales_SpecialOfferProduct;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSpecialOfferIDChanging(int value);
    partial void OnSpecialOfferIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDiscountPctChanging(decimal value);
    partial void OnDiscountPctChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnMinQtyChanging(int value);
    partial void OnMinQtyChanged();
    partial void OnMaxQtyChanging(System.Nullable<int> value);
    partial void OnMaxQtyChanged();
    partial void OnRowguidChanging(System.Guid value);
    partial void OnRowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Sales_SpecialOffer()
	{
		this._Sales_SpecialOfferProduct = new EntitySet<Sales_SpecialOfferProduct>(new Action<Sales_SpecialOfferProduct>(this.attach_Sales_SpecialOfferProduct), new Action<Sales_SpecialOfferProduct>(this.detach_Sales_SpecialOfferProduct));
		OnCreated();
	}
	
	public int SpecialOfferID
	{
		get
		{
			return this._SpecialOfferID;
		}
		set
		{
			if ((this._SpecialOfferID != value))
			{
				this.OnSpecialOfferIDChanging(value);
				this.SendPropertyChanging();
				this._SpecialOfferID = value;
				this.SendPropertyChanged("SpecialOfferID");
				this.OnSpecialOfferIDChanged();
			}
		}
	}
	
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	public decimal DiscountPct
	{
		get
		{
			return this._DiscountPct;
		}
		set
		{
			if ((this._DiscountPct != value))
			{
				this.OnDiscountPctChanging(value);
				this.SendPropertyChanging();
				this._DiscountPct = value;
				this.SendPropertyChanged("DiscountPct");
				this.OnDiscountPctChanged();
			}
		}
	}
	
	public string Type
	{
		get
		{
			return this._Type;
		}
		set
		{
			if ((this._Type != value))
			{
				this.OnTypeChanging(value);
				this.SendPropertyChanging();
				this._Type = value;
				this.SendPropertyChanged("Type");
				this.OnTypeChanged();
			}
		}
	}
	
	public string Category
	{
		get
		{
			return this._Category;
		}
		set
		{
			if ((this._Category != value))
			{
				this.OnCategoryChanging(value);
				this.SendPropertyChanging();
				this._Category = value;
				this.SendPropertyChanged("Category");
				this.OnCategoryChanged();
			}
		}
	}
	
	public System.DateTime StartDate
	{
		get
		{
			return this._StartDate;
		}
		set
		{
			if ((this._StartDate != value))
			{
				this.OnStartDateChanging(value);
				this.SendPropertyChanging();
				this._StartDate = value;
				this.SendPropertyChanged("StartDate");
				this.OnStartDateChanged();
			}
		}
	}
	
	public System.DateTime EndDate
	{
		get
		{
			return this._EndDate;
		}
		set
		{
			if ((this._EndDate != value))
			{
				this.OnEndDateChanging(value);
				this.SendPropertyChanging();
				this._EndDate = value;
				this.SendPropertyChanged("EndDate");
				this.OnEndDateChanged();
			}
		}
	}
	
	public int MinQty
	{
		get
		{
			return this._MinQty;
		}
		set
		{
			if ((this._MinQty != value))
			{
				this.OnMinQtyChanging(value);
				this.SendPropertyChanging();
				this._MinQty = value;
				this.SendPropertyChanged("MinQty");
				this.OnMinQtyChanged();
			}
		}
	}
	
	public System.Nullable<int> MaxQty
	{
		get
		{
			return this._MaxQty;
		}
		set
		{
			if ((this._MaxQty != value))
			{
				this.OnMaxQtyChanging(value);
				this.SendPropertyChanging();
				this._MaxQty = value;
				this.SendPropertyChanged("MaxQty");
				this.OnMaxQtyChanged();
			}
		}
	}
	
	public System.Guid Rowguid
	{
		get
		{
			return this._Rowguid;
		}
		set
		{
			if ((this._Rowguid != value))
			{
				this.OnRowguidChanging(value);
				this.SendPropertyChanging();
				this._Rowguid = value;
				this.SendPropertyChanged("Rowguid");
				this.OnRowguidChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public EntitySet<Sales_SpecialOfferProduct> Sales_SpecialOfferProduct
	{
		get
		{
			return this._Sales_SpecialOfferProduct;
		}
		set
		{
			this._Sales_SpecialOfferProduct.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Sales_SpecialOfferProduct(Sales_SpecialOfferProduct entity)
	{
		this.SendPropertyChanging();
		entity.Sales_SpecialOffer = this;
	}
	
	private void detach_Sales_SpecialOfferProduct(Sales_SpecialOfferProduct entity)
	{
		this.SendPropertyChanging();
		entity.Sales_SpecialOffer = null;
	}
}

public partial class Sales_SpecialOfferProduct : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _SpecialOfferID;
	
	private int _ProductID;
	
	private System.Guid _Rowguid;
	
	private System.DateTime _ModifiedDate;
	
	private EntitySet<Sales_SalesOrderDetail> _Sales_SalesOrderDetail;
	
	private EntityRef<Production_Product> _Production_Product;
	
	private EntityRef<Sales_SpecialOffer> _Sales_SpecialOffer;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSpecialOfferIDChanging(int value);
    partial void OnSpecialOfferIDChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnRowguidChanging(System.Guid value);
    partial void OnRowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Sales_SpecialOfferProduct()
	{
		this._Sales_SalesOrderDetail = new EntitySet<Sales_SalesOrderDetail>(new Action<Sales_SalesOrderDetail>(this.attach_Sales_SalesOrderDetail), new Action<Sales_SalesOrderDetail>(this.detach_Sales_SalesOrderDetail));
		this._Production_Product = default(EntityRef<Production_Product>);
		this._Sales_SpecialOffer = default(EntityRef<Sales_SpecialOffer>);
		OnCreated();
	}
	
	public int SpecialOfferID
	{
		get
		{
			return this._SpecialOfferID;
		}
		set
		{
			if ((this._SpecialOfferID != value))
			{
				if (this._Sales_SpecialOffer.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSpecialOfferIDChanging(value);
				this.SendPropertyChanging();
				this._SpecialOfferID = value;
				this.SendPropertyChanged("SpecialOfferID");
				this.OnSpecialOfferIDChanged();
			}
		}
	}
	
	public int ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				if (this._Production_Product.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProductIDChanging(value);
				this.SendPropertyChanging();
				this._ProductID = value;
				this.SendPropertyChanged("ProductID");
				this.OnProductIDChanged();
			}
		}
	}
	
	public System.Guid Rowguid
	{
		get
		{
			return this._Rowguid;
		}
		set
		{
			if ((this._Rowguid != value))
			{
				this.OnRowguidChanging(value);
				this.SendPropertyChanging();
				this._Rowguid = value;
				this.SendPropertyChanged("Rowguid");
				this.OnRowguidChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public EntitySet<Sales_SalesOrderDetail> Sales_SalesOrderDetail
	{
		get
		{
			return this._Sales_SalesOrderDetail;
		}
		set
		{
			this._Sales_SalesOrderDetail.Assign(value);
		}
	}
	
	public Production_Product Production_Product
	{
		get
		{
			return this._Production_Product.Entity;
		}
		set
		{
			Production_Product previousValue = this._Production_Product.Entity;
			if (((previousValue != value) 
						|| (this._Production_Product.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Production_Product.Entity = null;
					previousValue.Sales_SpecialOfferProduct.Remove(this);
				}
				this._Production_Product.Entity = value;
				if ((value != null))
				{
					value.Sales_SpecialOfferProduct.Add(this);
					this._ProductID = value.ProductID;
				}
				else
				{
					this._ProductID = default(int);
				}
				this.SendPropertyChanged("Production_Product");
			}
		}
	}
	
	public Sales_SpecialOffer Sales_SpecialOffer
	{
		get
		{
			return this._Sales_SpecialOffer.Entity;
		}
		set
		{
			Sales_SpecialOffer previousValue = this._Sales_SpecialOffer.Entity;
			if (((previousValue != value) 
						|| (this._Sales_SpecialOffer.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Sales_SpecialOffer.Entity = null;
					previousValue.Sales_SpecialOfferProduct.Remove(this);
				}
				this._Sales_SpecialOffer.Entity = value;
				if ((value != null))
				{
					value.Sales_SpecialOfferProduct.Add(this);
					this._SpecialOfferID = value.SpecialOfferID;
				}
				else
				{
					this._SpecialOfferID = default(int);
				}
				this.SendPropertyChanged("Sales_SpecialOffer");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Sales_SalesOrderDetail(Sales_SalesOrderDetail entity)
	{
		this.SendPropertyChanging();
		entity.Sales_SpecialOfferProduct = this;
	}
	
	private void detach_Sales_SalesOrderDetail(Sales_SalesOrderDetail entity)
	{
		this.SendPropertyChanging();
		entity.Sales_SpecialOfferProduct = null;
	}
}

public partial class Person_StateProvince : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _StateProvinceID;
	
	private string _StateProvinceCode;
	
	private string _CountryRegionCode;
	
	private bool _IsOnlyStateProvinceFlag;
	
	private string _Name;
	
	private int _TerritoryID;
	
	private System.Guid _Rowguid;
	
	private System.DateTime _ModifiedDate;
	
	private EntitySet<Person_Address> _Person_Address;
	
	private EntityRef<Person_CountryRegion> _Person_CountryRegion;
	
	private EntityRef<Sales_SalesTerritory> _Sales_SalesTerritory;
	
	private EntitySet<Sales_SalesTaxRate> _Sales_SalesTaxRate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStateProvinceIDChanging(int value);
    partial void OnStateProvinceIDChanged();
    partial void OnStateProvinceCodeChanging(string value);
    partial void OnStateProvinceCodeChanged();
    partial void OnCountryRegionCodeChanging(string value);
    partial void OnCountryRegionCodeChanged();
    partial void OnIsOnlyStateProvinceFlagChanging(bool value);
    partial void OnIsOnlyStateProvinceFlagChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTerritoryIDChanging(int value);
    partial void OnTerritoryIDChanged();
    partial void OnRowguidChanging(System.Guid value);
    partial void OnRowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Person_StateProvince()
	{
		this._Person_Address = new EntitySet<Person_Address>(new Action<Person_Address>(this.attach_Person_Address), new Action<Person_Address>(this.detach_Person_Address));
		this._Person_CountryRegion = default(EntityRef<Person_CountryRegion>);
		this._Sales_SalesTerritory = default(EntityRef<Sales_SalesTerritory>);
		this._Sales_SalesTaxRate = new EntitySet<Sales_SalesTaxRate>(new Action<Sales_SalesTaxRate>(this.attach_Sales_SalesTaxRate), new Action<Sales_SalesTaxRate>(this.detach_Sales_SalesTaxRate));
		OnCreated();
	}
	
	public int StateProvinceID
	{
		get
		{
			return this._StateProvinceID;
		}
		set
		{
			if ((this._StateProvinceID != value))
			{
				this.OnStateProvinceIDChanging(value);
				this.SendPropertyChanging();
				this._StateProvinceID = value;
				this.SendPropertyChanged("StateProvinceID");
				this.OnStateProvinceIDChanged();
			}
		}
	}
	
	public string StateProvinceCode
	{
		get
		{
			return this._StateProvinceCode;
		}
		set
		{
			if ((this._StateProvinceCode != value))
			{
				this.OnStateProvinceCodeChanging(value);
				this.SendPropertyChanging();
				this._StateProvinceCode = value;
				this.SendPropertyChanged("StateProvinceCode");
				this.OnStateProvinceCodeChanged();
			}
		}
	}
	
	public string CountryRegionCode
	{
		get
		{
			return this._CountryRegionCode;
		}
		set
		{
			if ((this._CountryRegionCode != value))
			{
				if (this._Person_CountryRegion.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCountryRegionCodeChanging(value);
				this.SendPropertyChanging();
				this._CountryRegionCode = value;
				this.SendPropertyChanged("CountryRegionCode");
				this.OnCountryRegionCodeChanged();
			}
		}
	}
	
	public bool IsOnlyStateProvinceFlag
	{
		get
		{
			return this._IsOnlyStateProvinceFlag;
		}
		set
		{
			if ((this._IsOnlyStateProvinceFlag != value))
			{
				this.OnIsOnlyStateProvinceFlagChanging(value);
				this.SendPropertyChanging();
				this._IsOnlyStateProvinceFlag = value;
				this.SendPropertyChanged("IsOnlyStateProvinceFlag");
				this.OnIsOnlyStateProvinceFlagChanged();
			}
		}
	}
	
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	public int TerritoryID
	{
		get
		{
			return this._TerritoryID;
		}
		set
		{
			if ((this._TerritoryID != value))
			{
				if (this._Sales_SalesTerritory.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnTerritoryIDChanging(value);
				this.SendPropertyChanging();
				this._TerritoryID = value;
				this.SendPropertyChanged("TerritoryID");
				this.OnTerritoryIDChanged();
			}
		}
	}
	
	public System.Guid Rowguid
	{
		get
		{
			return this._Rowguid;
		}
		set
		{
			if ((this._Rowguid != value))
			{
				this.OnRowguidChanging(value);
				this.SendPropertyChanging();
				this._Rowguid = value;
				this.SendPropertyChanged("Rowguid");
				this.OnRowguidChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public EntitySet<Person_Address> Person_Address
	{
		get
		{
			return this._Person_Address;
		}
		set
		{
			this._Person_Address.Assign(value);
		}
	}
	
	public Person_CountryRegion Person_CountryRegion
	{
		get
		{
			return this._Person_CountryRegion.Entity;
		}
		set
		{
			Person_CountryRegion previousValue = this._Person_CountryRegion.Entity;
			if (((previousValue != value) 
						|| (this._Person_CountryRegion.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Person_CountryRegion.Entity = null;
					previousValue.Person_StateProvince.Remove(this);
				}
				this._Person_CountryRegion.Entity = value;
				if ((value != null))
				{
					value.Person_StateProvince.Add(this);
					this._CountryRegionCode = value.CountryRegionCode;
				}
				else
				{
					this._CountryRegionCode = default(string);
				}
				this.SendPropertyChanged("Person_CountryRegion");
			}
		}
	}
	
	public Sales_SalesTerritory Sales_SalesTerritory
	{
		get
		{
			return this._Sales_SalesTerritory.Entity;
		}
		set
		{
			Sales_SalesTerritory previousValue = this._Sales_SalesTerritory.Entity;
			if (((previousValue != value) 
						|| (this._Sales_SalesTerritory.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Sales_SalesTerritory.Entity = null;
					previousValue.Person_StateProvince.Remove(this);
				}
				this._Sales_SalesTerritory.Entity = value;
				if ((value != null))
				{
					value.Person_StateProvince.Add(this);
					this._TerritoryID = value.TerritoryID;
				}
				else
				{
					this._TerritoryID = default(int);
				}
				this.SendPropertyChanged("Sales_SalesTerritory");
			}
		}
	}
	
	public EntitySet<Sales_SalesTaxRate> Sales_SalesTaxRate
	{
		get
		{
			return this._Sales_SalesTaxRate;
		}
		set
		{
			this._Sales_SalesTaxRate.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Person_Address(Person_Address entity)
	{
		this.SendPropertyChanging();
		entity.Person_StateProvince = this;
	}
	
	private void detach_Person_Address(Person_Address entity)
	{
		this.SendPropertyChanging();
		entity.Person_StateProvince = null;
	}
	
	private void attach_Sales_SalesTaxRate(Sales_SalesTaxRate entity)
	{
		this.SendPropertyChanging();
		entity.Person_StateProvince = this;
	}
	
	private void detach_Sales_SalesTaxRate(Sales_SalesTaxRate entity)
	{
		this.SendPropertyChanging();
		entity.Person_StateProvince = null;
	}
}

public partial class Sales_Store : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _CustomerID;
	
	private string _Name;
	
	private System.Nullable<int> _SalesPersonID;
	
	private System.Xml.Linq.XElement _Demographics;
	
	private System.Guid _Rowguid;
	
	private System.DateTime _ModifiedDate;
	
	private EntityRef<Sales_Customer> _Sales_Customer;
	
	private EntityRef<Sales_SalesPerson> _Sales_SalesPerson;
	
	private EntitySet<Sales_StoreContact> _Sales_StoreContact;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSalesPersonIDChanging(System.Nullable<int> value);
    partial void OnSalesPersonIDChanged();
    partial void OnDemographicsChanging(System.Xml.Linq.XElement value);
    partial void OnDemographicsChanged();
    partial void OnRowguidChanging(System.Guid value);
    partial void OnRowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Sales_Store()
	{
		this._Sales_Customer = default(EntityRef<Sales_Customer>);
		this._Sales_SalesPerson = default(EntityRef<Sales_SalesPerson>);
		this._Sales_StoreContact = new EntitySet<Sales_StoreContact>(new Action<Sales_StoreContact>(this.attach_Sales_StoreContact), new Action<Sales_StoreContact>(this.detach_Sales_StoreContact));
		OnCreated();
	}
	
	public int CustomerID
	{
		get
		{
			return this._CustomerID;
		}
		set
		{
			if ((this._CustomerID != value))
			{
				if (this._Sales_Customer.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCustomerIDChanging(value);
				this.SendPropertyChanging();
				this._CustomerID = value;
				this.SendPropertyChanged("CustomerID");
				this.OnCustomerIDChanged();
			}
		}
	}
	
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	public System.Nullable<int> SalesPersonID
	{
		get
		{
			return this._SalesPersonID;
		}
		set
		{
			if ((this._SalesPersonID != value))
			{
				if (this._Sales_SalesPerson.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSalesPersonIDChanging(value);
				this.SendPropertyChanging();
				this._SalesPersonID = value;
				this.SendPropertyChanged("SalesPersonID");
				this.OnSalesPersonIDChanged();
			}
		}
	}
	
	public System.Xml.Linq.XElement Demographics
	{
		get
		{
			return this._Demographics;
		}
		set
		{
			if ((this._Demographics != value))
			{
				this.OnDemographicsChanging(value);
				this.SendPropertyChanging();
				this._Demographics = value;
				this.SendPropertyChanged("Demographics");
				this.OnDemographicsChanged();
			}
		}
	}
	
	public System.Guid Rowguid
	{
		get
		{
			return this._Rowguid;
		}
		set
		{
			if ((this._Rowguid != value))
			{
				this.OnRowguidChanging(value);
				this.SendPropertyChanging();
				this._Rowguid = value;
				this.SendPropertyChanged("Rowguid");
				this.OnRowguidChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public Sales_Customer Sales_Customer
	{
		get
		{
			return this._Sales_Customer.Entity;
		}
		set
		{
			Sales_Customer previousValue = this._Sales_Customer.Entity;
			if (((previousValue != value) 
						|| (this._Sales_Customer.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Sales_Customer.Entity = null;
					previousValue.Sales_Store = null;
				}
				this._Sales_Customer.Entity = value;
				if ((value != null))
				{
					value.Sales_Store = this;
					this._CustomerID = value.CustomerID;
				}
				else
				{
					this._CustomerID = default(int);
				}
				this.SendPropertyChanged("Sales_Customer");
			}
		}
	}
	
	public Sales_SalesPerson Sales_SalesPerson
	{
		get
		{
			return this._Sales_SalesPerson.Entity;
		}
		set
		{
			Sales_SalesPerson previousValue = this._Sales_SalesPerson.Entity;
			if (((previousValue != value) 
						|| (this._Sales_SalesPerson.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Sales_SalesPerson.Entity = null;
					previousValue.Sales_Store.Remove(this);
				}
				this._Sales_SalesPerson.Entity = value;
				if ((value != null))
				{
					value.Sales_Store.Add(this);
					this._SalesPersonID = value.SalesPersonID;
				}
				else
				{
					this._SalesPersonID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Sales_SalesPerson");
			}
		}
	}
	
	public EntitySet<Sales_StoreContact> Sales_StoreContact
	{
		get
		{
			return this._Sales_StoreContact;
		}
		set
		{
			this._Sales_StoreContact.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Sales_StoreContact(Sales_StoreContact entity)
	{
		this.SendPropertyChanging();
		entity.Sales_Store = this;
	}
	
	private void detach_Sales_StoreContact(Sales_StoreContact entity)
	{
		this.SendPropertyChanging();
		entity.Sales_Store = null;
	}
}

public partial class Sales_StoreContact : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _CustomerID;
	
	private int _ContactID;
	
	private int _ContactTypeID;
	
	private System.Guid _Rowguid;
	
	private System.DateTime _ModifiedDate;
	
	private EntityRef<Person_Contact> _Person_Contact;
	
	private EntityRef<Person_ContactType> _Person_ContactType;
	
	private EntityRef<Sales_Store> _Sales_Store;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnContactIDChanging(int value);
    partial void OnContactIDChanged();
    partial void OnContactTypeIDChanging(int value);
    partial void OnContactTypeIDChanged();
    partial void OnRowguidChanging(System.Guid value);
    partial void OnRowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Sales_StoreContact()
	{
		this._Person_Contact = default(EntityRef<Person_Contact>);
		this._Person_ContactType = default(EntityRef<Person_ContactType>);
		this._Sales_Store = default(EntityRef<Sales_Store>);
		OnCreated();
	}
	
	public int CustomerID
	{
		get
		{
			return this._CustomerID;
		}
		set
		{
			if ((this._CustomerID != value))
			{
				if (this._Sales_Store.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCustomerIDChanging(value);
				this.SendPropertyChanging();
				this._CustomerID = value;
				this.SendPropertyChanged("CustomerID");
				this.OnCustomerIDChanged();
			}
		}
	}
	
	public int ContactID
	{
		get
		{
			return this._ContactID;
		}
		set
		{
			if ((this._ContactID != value))
			{
				if (this._Person_Contact.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnContactIDChanging(value);
				this.SendPropertyChanging();
				this._ContactID = value;
				this.SendPropertyChanged("ContactID");
				this.OnContactIDChanged();
			}
		}
	}
	
	public int ContactTypeID
	{
		get
		{
			return this._ContactTypeID;
		}
		set
		{
			if ((this._ContactTypeID != value))
			{
				if (this._Person_ContactType.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnContactTypeIDChanging(value);
				this.SendPropertyChanging();
				this._ContactTypeID = value;
				this.SendPropertyChanged("ContactTypeID");
				this.OnContactTypeIDChanged();
			}
		}
	}
	
	public System.Guid Rowguid
	{
		get
		{
			return this._Rowguid;
		}
		set
		{
			if ((this._Rowguid != value))
			{
				this.OnRowguidChanging(value);
				this.SendPropertyChanging();
				this._Rowguid = value;
				this.SendPropertyChanged("Rowguid");
				this.OnRowguidChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public Person_Contact Person_Contact
	{
		get
		{
			return this._Person_Contact.Entity;
		}
		set
		{
			Person_Contact previousValue = this._Person_Contact.Entity;
			if (((previousValue != value) 
						|| (this._Person_Contact.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Person_Contact.Entity = null;
					previousValue.Sales_StoreContact.Remove(this);
				}
				this._Person_Contact.Entity = value;
				if ((value != null))
				{
					value.Sales_StoreContact.Add(this);
					this._ContactID = value.ContactID;
				}
				else
				{
					this._ContactID = default(int);
				}
				this.SendPropertyChanged("Person_Contact");
			}
		}
	}
	
	public Person_ContactType Person_ContactType
	{
		get
		{
			return this._Person_ContactType.Entity;
		}
		set
		{
			Person_ContactType previousValue = this._Person_ContactType.Entity;
			if (((previousValue != value) 
						|| (this._Person_ContactType.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Person_ContactType.Entity = null;
					previousValue.Sales_StoreContact.Remove(this);
				}
				this._Person_ContactType.Entity = value;
				if ((value != null))
				{
					value.Sales_StoreContact.Add(this);
					this._ContactTypeID = value.ContactTypeID;
				}
				else
				{
					this._ContactTypeID = default(int);
				}
				this.SendPropertyChanged("Person_ContactType");
			}
		}
	}
	
	public Sales_Store Sales_Store
	{
		get
		{
			return this._Sales_Store.Entity;
		}
		set
		{
			Sales_Store previousValue = this._Sales_Store.Entity;
			if (((previousValue != value) 
						|| (this._Sales_Store.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Sales_Store.Entity = null;
					previousValue.Sales_StoreContact.Remove(this);
				}
				this._Sales_Store.Entity = value;
				if ((value != null))
				{
					value.Sales_StoreContact.Add(this);
					this._CustomerID = value.CustomerID;
				}
				else
				{
					this._CustomerID = default(int);
				}
				this.SendPropertyChanged("Sales_Store");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

public partial class Production_TransactionHistory : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _TransactionID;
	
	private int _ProductID;
	
	private int _ReferenceOrderID;
	
	private int _ReferenceOrderLineID;
	
	private System.DateTime _TransactionDate;
	
	private string _TransactionType;
	
	private int _Quantity;
	
	private decimal _ActualCost;
	
	private System.DateTime _ModifiedDate;
	
	private EntityRef<Production_Product> _Production_Product;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransactionIDChanging(int value);
    partial void OnTransactionIDChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnReferenceOrderIDChanging(int value);
    partial void OnReferenceOrderIDChanged();
    partial void OnReferenceOrderLineIDChanging(int value);
    partial void OnReferenceOrderLineIDChanged();
    partial void OnTransactionDateChanging(System.DateTime value);
    partial void OnTransactionDateChanged();
    partial void OnTransactionTypeChanging(string value);
    partial void OnTransactionTypeChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnActualCostChanging(decimal value);
    partial void OnActualCostChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Production_TransactionHistory()
	{
		this._Production_Product = default(EntityRef<Production_Product>);
		OnCreated();
	}
	
	public int TransactionID
	{
		get
		{
			return this._TransactionID;
		}
		set
		{
			if ((this._TransactionID != value))
			{
				this.OnTransactionIDChanging(value);
				this.SendPropertyChanging();
				this._TransactionID = value;
				this.SendPropertyChanged("TransactionID");
				this.OnTransactionIDChanged();
			}
		}
	}
	
	public int ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				if (this._Production_Product.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProductIDChanging(value);
				this.SendPropertyChanging();
				this._ProductID = value;
				this.SendPropertyChanged("ProductID");
				this.OnProductIDChanged();
			}
		}
	}
	
	public int ReferenceOrderID
	{
		get
		{
			return this._ReferenceOrderID;
		}
		set
		{
			if ((this._ReferenceOrderID != value))
			{
				this.OnReferenceOrderIDChanging(value);
				this.SendPropertyChanging();
				this._ReferenceOrderID = value;
				this.SendPropertyChanged("ReferenceOrderID");
				this.OnReferenceOrderIDChanged();
			}
		}
	}
	
	public int ReferenceOrderLineID
	{
		get
		{
			return this._ReferenceOrderLineID;
		}
		set
		{
			if ((this._ReferenceOrderLineID != value))
			{
				this.OnReferenceOrderLineIDChanging(value);
				this.SendPropertyChanging();
				this._ReferenceOrderLineID = value;
				this.SendPropertyChanged("ReferenceOrderLineID");
				this.OnReferenceOrderLineIDChanged();
			}
		}
	}
	
	public System.DateTime TransactionDate
	{
		get
		{
			return this._TransactionDate;
		}
		set
		{
			if ((this._TransactionDate != value))
			{
				this.OnTransactionDateChanging(value);
				this.SendPropertyChanging();
				this._TransactionDate = value;
				this.SendPropertyChanged("TransactionDate");
				this.OnTransactionDateChanged();
			}
		}
	}
	
	public string TransactionType
	{
		get
		{
			return this._TransactionType;
		}
		set
		{
			if ((this._TransactionType != value))
			{
				this.OnTransactionTypeChanging(value);
				this.SendPropertyChanging();
				this._TransactionType = value;
				this.SendPropertyChanged("TransactionType");
				this.OnTransactionTypeChanged();
			}
		}
	}
	
	public int Quantity
	{
		get
		{
			return this._Quantity;
		}
		set
		{
			if ((this._Quantity != value))
			{
				this.OnQuantityChanging(value);
				this.SendPropertyChanging();
				this._Quantity = value;
				this.SendPropertyChanged("Quantity");
				this.OnQuantityChanged();
			}
		}
	}
	
	public decimal ActualCost
	{
		get
		{
			return this._ActualCost;
		}
		set
		{
			if ((this._ActualCost != value))
			{
				this.OnActualCostChanging(value);
				this.SendPropertyChanging();
				this._ActualCost = value;
				this.SendPropertyChanged("ActualCost");
				this.OnActualCostChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public Production_Product Production_Product
	{
		get
		{
			return this._Production_Product.Entity;
		}
		set
		{
			Production_Product previousValue = this._Production_Product.Entity;
			if (((previousValue != value) 
						|| (this._Production_Product.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Production_Product.Entity = null;
					previousValue.Production_TransactionHistory.Remove(this);
				}
				this._Production_Product.Entity = value;
				if ((value != null))
				{
					value.Production_TransactionHistory.Add(this);
					this._ProductID = value.ProductID;
				}
				else
				{
					this._ProductID = default(int);
				}
				this.SendPropertyChanged("Production_Product");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

public partial class Production_TransactionHistoryArchive : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _TransactionID;
	
	private int _ProductID;
	
	private int _ReferenceOrderID;
	
	private int _ReferenceOrderLineID;
	
	private System.DateTime _TransactionDate;
	
	private string _TransactionType;
	
	private int _Quantity;
	
	private decimal _ActualCost;
	
	private System.DateTime _ModifiedDate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransactionIDChanging(int value);
    partial void OnTransactionIDChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnReferenceOrderIDChanging(int value);
    partial void OnReferenceOrderIDChanged();
    partial void OnReferenceOrderLineIDChanging(int value);
    partial void OnReferenceOrderLineIDChanged();
    partial void OnTransactionDateChanging(System.DateTime value);
    partial void OnTransactionDateChanged();
    partial void OnTransactionTypeChanging(string value);
    partial void OnTransactionTypeChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnActualCostChanging(decimal value);
    partial void OnActualCostChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Production_TransactionHistoryArchive()
	{
		OnCreated();
	}
	
	public int TransactionID
	{
		get
		{
			return this._TransactionID;
		}
		set
		{
			if ((this._TransactionID != value))
			{
				this.OnTransactionIDChanging(value);
				this.SendPropertyChanging();
				this._TransactionID = value;
				this.SendPropertyChanged("TransactionID");
				this.OnTransactionIDChanged();
			}
		}
	}
	
	public int ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				this.OnProductIDChanging(value);
				this.SendPropertyChanging();
				this._ProductID = value;
				this.SendPropertyChanged("ProductID");
				this.OnProductIDChanged();
			}
		}
	}
	
	public int ReferenceOrderID
	{
		get
		{
			return this._ReferenceOrderID;
		}
		set
		{
			if ((this._ReferenceOrderID != value))
			{
				this.OnReferenceOrderIDChanging(value);
				this.SendPropertyChanging();
				this._ReferenceOrderID = value;
				this.SendPropertyChanged("ReferenceOrderID");
				this.OnReferenceOrderIDChanged();
			}
		}
	}
	
	public int ReferenceOrderLineID
	{
		get
		{
			return this._ReferenceOrderLineID;
		}
		set
		{
			if ((this._ReferenceOrderLineID != value))
			{
				this.OnReferenceOrderLineIDChanging(value);
				this.SendPropertyChanging();
				this._ReferenceOrderLineID = value;
				this.SendPropertyChanged("ReferenceOrderLineID");
				this.OnReferenceOrderLineIDChanged();
			}
		}
	}
	
	public System.DateTime TransactionDate
	{
		get
		{
			return this._TransactionDate;
		}
		set
		{
			if ((this._TransactionDate != value))
			{
				this.OnTransactionDateChanging(value);
				this.SendPropertyChanging();
				this._TransactionDate = value;
				this.SendPropertyChanged("TransactionDate");
				this.OnTransactionDateChanged();
			}
		}
	}
	
	public string TransactionType
	{
		get
		{
			return this._TransactionType;
		}
		set
		{
			if ((this._TransactionType != value))
			{
				this.OnTransactionTypeChanging(value);
				this.SendPropertyChanging();
				this._TransactionType = value;
				this.SendPropertyChanged("TransactionType");
				this.OnTransactionTypeChanged();
			}
		}
	}
	
	public int Quantity
	{
		get
		{
			return this._Quantity;
		}
		set
		{
			if ((this._Quantity != value))
			{
				this.OnQuantityChanging(value);
				this.SendPropertyChanging();
				this._Quantity = value;
				this.SendPropertyChanged("Quantity");
				this.OnQuantityChanged();
			}
		}
	}
	
	public decimal ActualCost
	{
		get
		{
			return this._ActualCost;
		}
		set
		{
			if ((this._ActualCost != value))
			{
				this.OnActualCostChanging(value);
				this.SendPropertyChanging();
				this._ActualCost = value;
				this.SendPropertyChanged("ActualCost");
				this.OnActualCostChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

public partial class Production_UnitMeasure : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _UnitMeasureCode;
	
	private string _Name;
	
	private System.DateTime _ModifiedDate;
	
	private EntitySet<Production_BillOfMaterials> _Production_BillOfMaterials;
	
	private EntitySet<Production_Product> _Production_Product;
	
	private EntitySet<Production_Product> _UnitMeasureCodeProduction_Product;
	
	private EntitySet<Purchasing_ProductVendor> _Purchasing_ProductVendor;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUnitMeasureCodeChanging(string value);
    partial void OnUnitMeasureCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Production_UnitMeasure()
	{
		this._Production_BillOfMaterials = new EntitySet<Production_BillOfMaterials>(new Action<Production_BillOfMaterials>(this.attach_Production_BillOfMaterials), new Action<Production_BillOfMaterials>(this.detach_Production_BillOfMaterials));
		this._Production_Product = new EntitySet<Production_Product>(new Action<Production_Product>(this.attach_Production_Product), new Action<Production_Product>(this.detach_Production_Product));
		this._UnitMeasureCodeProduction_Product = new EntitySet<Production_Product>(new Action<Production_Product>(this.attach_UnitMeasureCodeProduction_Product), new Action<Production_Product>(this.detach_UnitMeasureCodeProduction_Product));
		this._Purchasing_ProductVendor = new EntitySet<Purchasing_ProductVendor>(new Action<Purchasing_ProductVendor>(this.attach_Purchasing_ProductVendor), new Action<Purchasing_ProductVendor>(this.detach_Purchasing_ProductVendor));
		OnCreated();
	}
	
	public string UnitMeasureCode
	{
		get
		{
			return this._UnitMeasureCode;
		}
		set
		{
			if ((this._UnitMeasureCode != value))
			{
				this.OnUnitMeasureCodeChanging(value);
				this.SendPropertyChanging();
				this._UnitMeasureCode = value;
				this.SendPropertyChanged("UnitMeasureCode");
				this.OnUnitMeasureCodeChanged();
			}
		}
	}
	
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public EntitySet<Production_BillOfMaterials> Production_BillOfMaterials
	{
		get
		{
			return this._Production_BillOfMaterials;
		}
		set
		{
			this._Production_BillOfMaterials.Assign(value);
		}
	}
	
	public EntitySet<Production_Product> Production_Product
	{
		get
		{
			return this._Production_Product;
		}
		set
		{
			this._Production_Product.Assign(value);
		}
	}
	
	public EntitySet<Production_Product> UnitMeasureCodeProduction_Product
	{
		get
		{
			return this._UnitMeasureCodeProduction_Product;
		}
		set
		{
			this._UnitMeasureCodeProduction_Product.Assign(value);
		}
	}
	
	public EntitySet<Purchasing_ProductVendor> Purchasing_ProductVendor
	{
		get
		{
			return this._Purchasing_ProductVendor;
		}
		set
		{
			this._Purchasing_ProductVendor.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Production_BillOfMaterials(Production_BillOfMaterials entity)
	{
		this.SendPropertyChanging();
		entity.Production_UnitMeasure = this;
	}
	
	private void detach_Production_BillOfMaterials(Production_BillOfMaterials entity)
	{
		this.SendPropertyChanging();
		entity.Production_UnitMeasure = null;
	}
	
	private void attach_Production_Product(Production_Product entity)
	{
		this.SendPropertyChanging();
		entity.Production_UnitMeasure = this;
	}
	
	private void detach_Production_Product(Production_Product entity)
	{
		this.SendPropertyChanging();
		entity.Production_UnitMeasure = null;
	}
	
	private void attach_UnitMeasureCodeProduction_Product(Production_Product entity)
	{
		this.SendPropertyChanging();
		entity.WeightUnitMeasureCodeProduction_UnitMeasure = this;
	}
	
	private void detach_UnitMeasureCodeProduction_Product(Production_Product entity)
	{
		this.SendPropertyChanging();
		entity.WeightUnitMeasureCodeProduction_UnitMeasure = null;
	}
	
	private void attach_Purchasing_ProductVendor(Purchasing_ProductVendor entity)
	{
		this.SendPropertyChanging();
		entity.Production_UnitMeasure = this;
	}
	
	private void detach_Purchasing_ProductVendor(Purchasing_ProductVendor entity)
	{
		this.SendPropertyChanging();
		entity.Production_UnitMeasure = null;
	}
}

public partial class Purchasing_Vendor : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _VendorID;
	
	private string _AccountNumber;
	
	private string _Name;
	
	private byte _CreditRating;
	
	private bool _PreferredVendorStatus;
	
	private bool _ActiveFlag;
	
	private string _PurchasingWebServiceURL;
	
	private System.DateTime _ModifiedDate;
	
	private EntitySet<Purchasing_ProductVendor> _Purchasing_ProductVendor;
	
	private EntitySet<Purchasing_PurchaseOrderHeader> _Purchasing_PurchaseOrderHeader;
	
	private EntitySet<Purchasing_VendorAddress> _Purchasing_VendorAddress;
	
	private EntitySet<Purchasing_VendorContact> _Purchasing_VendorContact;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVendorIDChanging(int value);
    partial void OnVendorIDChanged();
    partial void OnAccountNumberChanging(string value);
    partial void OnAccountNumberChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreditRatingChanging(byte value);
    partial void OnCreditRatingChanged();
    partial void OnPreferredVendorStatusChanging(bool value);
    partial void OnPreferredVendorStatusChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnPurchasingWebServiceURLChanging(string value);
    partial void OnPurchasingWebServiceURLChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Purchasing_Vendor()
	{
		this._Purchasing_ProductVendor = new EntitySet<Purchasing_ProductVendor>(new Action<Purchasing_ProductVendor>(this.attach_Purchasing_ProductVendor), new Action<Purchasing_ProductVendor>(this.detach_Purchasing_ProductVendor));
		this._Purchasing_PurchaseOrderHeader = new EntitySet<Purchasing_PurchaseOrderHeader>(new Action<Purchasing_PurchaseOrderHeader>(this.attach_Purchasing_PurchaseOrderHeader), new Action<Purchasing_PurchaseOrderHeader>(this.detach_Purchasing_PurchaseOrderHeader));
		this._Purchasing_VendorAddress = new EntitySet<Purchasing_VendorAddress>(new Action<Purchasing_VendorAddress>(this.attach_Purchasing_VendorAddress), new Action<Purchasing_VendorAddress>(this.detach_Purchasing_VendorAddress));
		this._Purchasing_VendorContact = new EntitySet<Purchasing_VendorContact>(new Action<Purchasing_VendorContact>(this.attach_Purchasing_VendorContact), new Action<Purchasing_VendorContact>(this.detach_Purchasing_VendorContact));
		OnCreated();
	}
	
	public int VendorID
	{
		get
		{
			return this._VendorID;
		}
		set
		{
			if ((this._VendorID != value))
			{
				this.OnVendorIDChanging(value);
				this.SendPropertyChanging();
				this._VendorID = value;
				this.SendPropertyChanged("VendorID");
				this.OnVendorIDChanged();
			}
		}
	}
	
	public string AccountNumber
	{
		get
		{
			return this._AccountNumber;
		}
		set
		{
			if ((this._AccountNumber != value))
			{
				this.OnAccountNumberChanging(value);
				this.SendPropertyChanging();
				this._AccountNumber = value;
				this.SendPropertyChanged("AccountNumber");
				this.OnAccountNumberChanged();
			}
		}
	}
	
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	public byte CreditRating
	{
		get
		{
			return this._CreditRating;
		}
		set
		{
			if ((this._CreditRating != value))
			{
				this.OnCreditRatingChanging(value);
				this.SendPropertyChanging();
				this._CreditRating = value;
				this.SendPropertyChanged("CreditRating");
				this.OnCreditRatingChanged();
			}
		}
	}
	
	public bool PreferredVendorStatus
	{
		get
		{
			return this._PreferredVendorStatus;
		}
		set
		{
			if ((this._PreferredVendorStatus != value))
			{
				this.OnPreferredVendorStatusChanging(value);
				this.SendPropertyChanging();
				this._PreferredVendorStatus = value;
				this.SendPropertyChanged("PreferredVendorStatus");
				this.OnPreferredVendorStatusChanged();
			}
		}
	}
	
	public bool ActiveFlag
	{
		get
		{
			return this._ActiveFlag;
		}
		set
		{
			if ((this._ActiveFlag != value))
			{
				this.OnActiveFlagChanging(value);
				this.SendPropertyChanging();
				this._ActiveFlag = value;
				this.SendPropertyChanged("ActiveFlag");
				this.OnActiveFlagChanged();
			}
		}
	}
	
	public string PurchasingWebServiceURL
	{
		get
		{
			return this._PurchasingWebServiceURL;
		}
		set
		{
			if ((this._PurchasingWebServiceURL != value))
			{
				this.OnPurchasingWebServiceURLChanging(value);
				this.SendPropertyChanging();
				this._PurchasingWebServiceURL = value;
				this.SendPropertyChanged("PurchasingWebServiceURL");
				this.OnPurchasingWebServiceURLChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public EntitySet<Purchasing_ProductVendor> Purchasing_ProductVendor
	{
		get
		{
			return this._Purchasing_ProductVendor;
		}
		set
		{
			this._Purchasing_ProductVendor.Assign(value);
		}
	}
	
	public EntitySet<Purchasing_PurchaseOrderHeader> Purchasing_PurchaseOrderHeader
	{
		get
		{
			return this._Purchasing_PurchaseOrderHeader;
		}
		set
		{
			this._Purchasing_PurchaseOrderHeader.Assign(value);
		}
	}
	
	public EntitySet<Purchasing_VendorAddress> Purchasing_VendorAddress
	{
		get
		{
			return this._Purchasing_VendorAddress;
		}
		set
		{
			this._Purchasing_VendorAddress.Assign(value);
		}
	}
	
	public EntitySet<Purchasing_VendorContact> Purchasing_VendorContact
	{
		get
		{
			return this._Purchasing_VendorContact;
		}
		set
		{
			this._Purchasing_VendorContact.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Purchasing_ProductVendor(Purchasing_ProductVendor entity)
	{
		this.SendPropertyChanging();
		entity.Purchasing_Vendor = this;
	}
	
	private void detach_Purchasing_ProductVendor(Purchasing_ProductVendor entity)
	{
		this.SendPropertyChanging();
		entity.Purchasing_Vendor = null;
	}
	
	private void attach_Purchasing_PurchaseOrderHeader(Purchasing_PurchaseOrderHeader entity)
	{
		this.SendPropertyChanging();
		entity.Purchasing_Vendor = this;
	}
	
	private void detach_Purchasing_PurchaseOrderHeader(Purchasing_PurchaseOrderHeader entity)
	{
		this.SendPropertyChanging();
		entity.Purchasing_Vendor = null;
	}
	
	private void attach_Purchasing_VendorAddress(Purchasing_VendorAddress entity)
	{
		this.SendPropertyChanging();
		entity.Purchasing_Vendor = this;
	}
	
	private void detach_Purchasing_VendorAddress(Purchasing_VendorAddress entity)
	{
		this.SendPropertyChanging();
		entity.Purchasing_Vendor = null;
	}
	
	private void attach_Purchasing_VendorContact(Purchasing_VendorContact entity)
	{
		this.SendPropertyChanging();
		entity.Purchasing_Vendor = this;
	}
	
	private void detach_Purchasing_VendorContact(Purchasing_VendorContact entity)
	{
		this.SendPropertyChanging();
		entity.Purchasing_Vendor = null;
	}
}

public partial class Purchasing_VendorAddress : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _VendorID;
	
	private int _AddressID;
	
	private int _AddressTypeID;
	
	private System.DateTime _ModifiedDate;
	
	private EntityRef<Person_Address> _Person_Address;
	
	private EntityRef<Person_AddressType> _Person_AddressType;
	
	private EntityRef<Purchasing_Vendor> _Purchasing_Vendor;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVendorIDChanging(int value);
    partial void OnVendorIDChanged();
    partial void OnAddressIDChanging(int value);
    partial void OnAddressIDChanged();
    partial void OnAddressTypeIDChanging(int value);
    partial void OnAddressTypeIDChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Purchasing_VendorAddress()
	{
		this._Person_Address = default(EntityRef<Person_Address>);
		this._Person_AddressType = default(EntityRef<Person_AddressType>);
		this._Purchasing_Vendor = default(EntityRef<Purchasing_Vendor>);
		OnCreated();
	}
	
	public int VendorID
	{
		get
		{
			return this._VendorID;
		}
		set
		{
			if ((this._VendorID != value))
			{
				if (this._Purchasing_Vendor.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnVendorIDChanging(value);
				this.SendPropertyChanging();
				this._VendorID = value;
				this.SendPropertyChanged("VendorID");
				this.OnVendorIDChanged();
			}
		}
	}
	
	public int AddressID
	{
		get
		{
			return this._AddressID;
		}
		set
		{
			if ((this._AddressID != value))
			{
				if (this._Person_Address.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAddressIDChanging(value);
				this.SendPropertyChanging();
				this._AddressID = value;
				this.SendPropertyChanged("AddressID");
				this.OnAddressIDChanged();
			}
		}
	}
	
	public int AddressTypeID
	{
		get
		{
			return this._AddressTypeID;
		}
		set
		{
			if ((this._AddressTypeID != value))
			{
				if (this._Person_AddressType.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAddressTypeIDChanging(value);
				this.SendPropertyChanging();
				this._AddressTypeID = value;
				this.SendPropertyChanged("AddressTypeID");
				this.OnAddressTypeIDChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public Person_Address Person_Address
	{
		get
		{
			return this._Person_Address.Entity;
		}
		set
		{
			Person_Address previousValue = this._Person_Address.Entity;
			if (((previousValue != value) 
						|| (this._Person_Address.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Person_Address.Entity = null;
					previousValue.Purchasing_VendorAddress.Remove(this);
				}
				this._Person_Address.Entity = value;
				if ((value != null))
				{
					value.Purchasing_VendorAddress.Add(this);
					this._AddressID = value.AddressID;
				}
				else
				{
					this._AddressID = default(int);
				}
				this.SendPropertyChanged("Person_Address");
			}
		}
	}
	
	public Person_AddressType Person_AddressType
	{
		get
		{
			return this._Person_AddressType.Entity;
		}
		set
		{
			Person_AddressType previousValue = this._Person_AddressType.Entity;
			if (((previousValue != value) 
						|| (this._Person_AddressType.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Person_AddressType.Entity = null;
					previousValue.Purchasing_VendorAddress.Remove(this);
				}
				this._Person_AddressType.Entity = value;
				if ((value != null))
				{
					value.Purchasing_VendorAddress.Add(this);
					this._AddressTypeID = value.AddressTypeID;
				}
				else
				{
					this._AddressTypeID = default(int);
				}
				this.SendPropertyChanged("Person_AddressType");
			}
		}
	}
	
	public Purchasing_Vendor Purchasing_Vendor
	{
		get
		{
			return this._Purchasing_Vendor.Entity;
		}
		set
		{
			Purchasing_Vendor previousValue = this._Purchasing_Vendor.Entity;
			if (((previousValue != value) 
						|| (this._Purchasing_Vendor.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Purchasing_Vendor.Entity = null;
					previousValue.Purchasing_VendorAddress.Remove(this);
				}
				this._Purchasing_Vendor.Entity = value;
				if ((value != null))
				{
					value.Purchasing_VendorAddress.Add(this);
					this._VendorID = value.VendorID;
				}
				else
				{
					this._VendorID = default(int);
				}
				this.SendPropertyChanged("Purchasing_Vendor");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

public partial class Purchasing_VendorContact : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _VendorID;
	
	private int _ContactID;
	
	private int _ContactTypeID;
	
	private System.DateTime _ModifiedDate;
	
	private EntityRef<Person_Contact> _Person_Contact;
	
	private EntityRef<Person_ContactType> _Person_ContactType;
	
	private EntityRef<Purchasing_Vendor> _Purchasing_Vendor;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVendorIDChanging(int value);
    partial void OnVendorIDChanged();
    partial void OnContactIDChanging(int value);
    partial void OnContactIDChanged();
    partial void OnContactTypeIDChanging(int value);
    partial void OnContactTypeIDChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Purchasing_VendorContact()
	{
		this._Person_Contact = default(EntityRef<Person_Contact>);
		this._Person_ContactType = default(EntityRef<Person_ContactType>);
		this._Purchasing_Vendor = default(EntityRef<Purchasing_Vendor>);
		OnCreated();
	}
	
	public int VendorID
	{
		get
		{
			return this._VendorID;
		}
		set
		{
			if ((this._VendorID != value))
			{
				if (this._Purchasing_Vendor.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnVendorIDChanging(value);
				this.SendPropertyChanging();
				this._VendorID = value;
				this.SendPropertyChanged("VendorID");
				this.OnVendorIDChanged();
			}
		}
	}
	
	public int ContactID
	{
		get
		{
			return this._ContactID;
		}
		set
		{
			if ((this._ContactID != value))
			{
				if (this._Person_Contact.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnContactIDChanging(value);
				this.SendPropertyChanging();
				this._ContactID = value;
				this.SendPropertyChanged("ContactID");
				this.OnContactIDChanged();
			}
		}
	}
	
	public int ContactTypeID
	{
		get
		{
			return this._ContactTypeID;
		}
		set
		{
			if ((this._ContactTypeID != value))
			{
				if (this._Person_ContactType.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnContactTypeIDChanging(value);
				this.SendPropertyChanging();
				this._ContactTypeID = value;
				this.SendPropertyChanged("ContactTypeID");
				this.OnContactTypeIDChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public Person_Contact Person_Contact
	{
		get
		{
			return this._Person_Contact.Entity;
		}
		set
		{
			Person_Contact previousValue = this._Person_Contact.Entity;
			if (((previousValue != value) 
						|| (this._Person_Contact.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Person_Contact.Entity = null;
					previousValue.Purchasing_VendorContact.Remove(this);
				}
				this._Person_Contact.Entity = value;
				if ((value != null))
				{
					value.Purchasing_VendorContact.Add(this);
					this._ContactID = value.ContactID;
				}
				else
				{
					this._ContactID = default(int);
				}
				this.SendPropertyChanged("Person_Contact");
			}
		}
	}
	
	public Person_ContactType Person_ContactType
	{
		get
		{
			return this._Person_ContactType.Entity;
		}
		set
		{
			Person_ContactType previousValue = this._Person_ContactType.Entity;
			if (((previousValue != value) 
						|| (this._Person_ContactType.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Person_ContactType.Entity = null;
					previousValue.Purchasing_VendorContact.Remove(this);
				}
				this._Person_ContactType.Entity = value;
				if ((value != null))
				{
					value.Purchasing_VendorContact.Add(this);
					this._ContactTypeID = value.ContactTypeID;
				}
				else
				{
					this._ContactTypeID = default(int);
				}
				this.SendPropertyChanged("Person_ContactType");
			}
		}
	}
	
	public Purchasing_Vendor Purchasing_Vendor
	{
		get
		{
			return this._Purchasing_Vendor.Entity;
		}
		set
		{
			Purchasing_Vendor previousValue = this._Purchasing_Vendor.Entity;
			if (((previousValue != value) 
						|| (this._Purchasing_Vendor.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Purchasing_Vendor.Entity = null;
					previousValue.Purchasing_VendorContact.Remove(this);
				}
				this._Purchasing_Vendor.Entity = value;
				if ((value != null))
				{
					value.Purchasing_VendorContact.Add(this);
					this._VendorID = value.VendorID;
				}
				else
				{
					this._VendorID = default(int);
				}
				this.SendPropertyChanged("Purchasing_Vendor");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

public partial class Production_WorkOrder : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _WorkOrderID;
	
	private int _ProductID;
	
	private int _OrderQty;
	
	private int _StockedQty;
	
	private short _ScrappedQty;
	
	private System.DateTime _StartDate;
	
	private System.Nullable<System.DateTime> _EndDate;
	
	private System.DateTime _DueDate;
	
	private System.Nullable<short> _ScrapReasonID;
	
	private System.DateTime _ModifiedDate;
	
	private EntityRef<Production_Product> _Production_Product;
	
	private EntityRef<Production_ScrapReason> _Production_ScrapReason;
	
	private EntitySet<Production_WorkOrderRouting> _Production_WorkOrderRouting;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWorkOrderIDChanging(int value);
    partial void OnWorkOrderIDChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnOrderQtyChanging(int value);
    partial void OnOrderQtyChanged();
    partial void OnStockedQtyChanging(int value);
    partial void OnStockedQtyChanged();
    partial void OnScrappedQtyChanging(short value);
    partial void OnScrappedQtyChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnDueDateChanging(System.DateTime value);
    partial void OnDueDateChanged();
    partial void OnScrapReasonIDChanging(System.Nullable<short> value);
    partial void OnScrapReasonIDChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Production_WorkOrder()
	{
		this._Production_Product = default(EntityRef<Production_Product>);
		this._Production_ScrapReason = default(EntityRef<Production_ScrapReason>);
		this._Production_WorkOrderRouting = new EntitySet<Production_WorkOrderRouting>(new Action<Production_WorkOrderRouting>(this.attach_Production_WorkOrderRouting), new Action<Production_WorkOrderRouting>(this.detach_Production_WorkOrderRouting));
		OnCreated();
	}
	
	public int WorkOrderID
	{
		get
		{
			return this._WorkOrderID;
		}
		set
		{
			if ((this._WorkOrderID != value))
			{
				this.OnWorkOrderIDChanging(value);
				this.SendPropertyChanging();
				this._WorkOrderID = value;
				this.SendPropertyChanged("WorkOrderID");
				this.OnWorkOrderIDChanged();
			}
		}
	}
	
	public int ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				if (this._Production_Product.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProductIDChanging(value);
				this.SendPropertyChanging();
				this._ProductID = value;
				this.SendPropertyChanged("ProductID");
				this.OnProductIDChanged();
			}
		}
	}
	
	public int OrderQty
	{
		get
		{
			return this._OrderQty;
		}
		set
		{
			if ((this._OrderQty != value))
			{
				this.OnOrderQtyChanging(value);
				this.SendPropertyChanging();
				this._OrderQty = value;
				this.SendPropertyChanged("OrderQty");
				this.OnOrderQtyChanged();
			}
		}
	}
	
	public int StockedQty
	{
		get
		{
			return this._StockedQty;
		}
		set
		{
			if ((this._StockedQty != value))
			{
				this.OnStockedQtyChanging(value);
				this.SendPropertyChanging();
				this._StockedQty = value;
				this.SendPropertyChanged("StockedQty");
				this.OnStockedQtyChanged();
			}
		}
	}
	
	public short ScrappedQty
	{
		get
		{
			return this._ScrappedQty;
		}
		set
		{
			if ((this._ScrappedQty != value))
			{
				this.OnScrappedQtyChanging(value);
				this.SendPropertyChanging();
				this._ScrappedQty = value;
				this.SendPropertyChanged("ScrappedQty");
				this.OnScrappedQtyChanged();
			}
		}
	}
	
	public System.DateTime StartDate
	{
		get
		{
			return this._StartDate;
		}
		set
		{
			if ((this._StartDate != value))
			{
				this.OnStartDateChanging(value);
				this.SendPropertyChanging();
				this._StartDate = value;
				this.SendPropertyChanged("StartDate");
				this.OnStartDateChanged();
			}
		}
	}
	
	public System.Nullable<System.DateTime> EndDate
	{
		get
		{
			return this._EndDate;
		}
		set
		{
			if ((this._EndDate != value))
			{
				this.OnEndDateChanging(value);
				this.SendPropertyChanging();
				this._EndDate = value;
				this.SendPropertyChanged("EndDate");
				this.OnEndDateChanged();
			}
		}
	}
	
	public System.DateTime DueDate
	{
		get
		{
			return this._DueDate;
		}
		set
		{
			if ((this._DueDate != value))
			{
				this.OnDueDateChanging(value);
				this.SendPropertyChanging();
				this._DueDate = value;
				this.SendPropertyChanged("DueDate");
				this.OnDueDateChanged();
			}
		}
	}
	
	public System.Nullable<short> ScrapReasonID
	{
		get
		{
			return this._ScrapReasonID;
		}
		set
		{
			if ((this._ScrapReasonID != value))
			{
				if (this._Production_ScrapReason.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnScrapReasonIDChanging(value);
				this.SendPropertyChanging();
				this._ScrapReasonID = value;
				this.SendPropertyChanged("ScrapReasonID");
				this.OnScrapReasonIDChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public Production_Product Production_Product
	{
		get
		{
			return this._Production_Product.Entity;
		}
		set
		{
			Production_Product previousValue = this._Production_Product.Entity;
			if (((previousValue != value) 
						|| (this._Production_Product.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Production_Product.Entity = null;
					previousValue.Production_WorkOrder.Remove(this);
				}
				this._Production_Product.Entity = value;
				if ((value != null))
				{
					value.Production_WorkOrder.Add(this);
					this._ProductID = value.ProductID;
				}
				else
				{
					this._ProductID = default(int);
				}
				this.SendPropertyChanged("Production_Product");
			}
		}
	}
	
	public Production_ScrapReason Production_ScrapReason
	{
		get
		{
			return this._Production_ScrapReason.Entity;
		}
		set
		{
			Production_ScrapReason previousValue = this._Production_ScrapReason.Entity;
			if (((previousValue != value) 
						|| (this._Production_ScrapReason.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Production_ScrapReason.Entity = null;
					previousValue.Production_WorkOrder.Remove(this);
				}
				this._Production_ScrapReason.Entity = value;
				if ((value != null))
				{
					value.Production_WorkOrder.Add(this);
					this._ScrapReasonID = value.ScrapReasonID;
				}
				else
				{
					this._ScrapReasonID = default(Nullable<short>);
				}
				this.SendPropertyChanged("Production_ScrapReason");
			}
		}
	}
	
	public EntitySet<Production_WorkOrderRouting> Production_WorkOrderRouting
	{
		get
		{
			return this._Production_WorkOrderRouting;
		}
		set
		{
			this._Production_WorkOrderRouting.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Production_WorkOrderRouting(Production_WorkOrderRouting entity)
	{
		this.SendPropertyChanging();
		entity.Production_WorkOrder = this;
	}
	
	private void detach_Production_WorkOrderRouting(Production_WorkOrderRouting entity)
	{
		this.SendPropertyChanging();
		entity.Production_WorkOrder = null;
	}
}

public partial class Production_WorkOrderRouting : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _WorkOrderID;
	
	private int _ProductID;
	
	private short _OperationSequence;
	
	private short _LocationID;
	
	private System.DateTime _ScheduledStartDate;
	
	private System.DateTime _ScheduledEndDate;
	
	private System.Nullable<System.DateTime> _ActualStartDate;
	
	private System.Nullable<System.DateTime> _ActualEndDate;
	
	private System.Nullable<decimal> _ActualResourceHrs;
	
	private decimal _PlannedCost;
	
	private System.Nullable<decimal> _ActualCost;
	
	private System.DateTime _ModifiedDate;
	
	private EntityRef<Production_Location> _Production_Location;
	
	private EntityRef<Production_WorkOrder> _Production_WorkOrder;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWorkOrderIDChanging(int value);
    partial void OnWorkOrderIDChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnOperationSequenceChanging(short value);
    partial void OnOperationSequenceChanged();
    partial void OnLocationIDChanging(short value);
    partial void OnLocationIDChanged();
    partial void OnScheduledStartDateChanging(System.DateTime value);
    partial void OnScheduledStartDateChanged();
    partial void OnScheduledEndDateChanging(System.DateTime value);
    partial void OnScheduledEndDateChanged();
    partial void OnActualStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnActualStartDateChanged();
    partial void OnActualEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnActualEndDateChanged();
    partial void OnActualResourceHrsChanging(System.Nullable<decimal> value);
    partial void OnActualResourceHrsChanged();
    partial void OnPlannedCostChanging(decimal value);
    partial void OnPlannedCostChanged();
    partial void OnActualCostChanging(System.Nullable<decimal> value);
    partial void OnActualCostChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public Production_WorkOrderRouting()
	{
		this._Production_Location = default(EntityRef<Production_Location>);
		this._Production_WorkOrder = default(EntityRef<Production_WorkOrder>);
		OnCreated();
	}
	
	public int WorkOrderID
	{
		get
		{
			return this._WorkOrderID;
		}
		set
		{
			if ((this._WorkOrderID != value))
			{
				if (this._Production_WorkOrder.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnWorkOrderIDChanging(value);
				this.SendPropertyChanging();
				this._WorkOrderID = value;
				this.SendPropertyChanged("WorkOrderID");
				this.OnWorkOrderIDChanged();
			}
		}
	}
	
	public int ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				this.OnProductIDChanging(value);
				this.SendPropertyChanging();
				this._ProductID = value;
				this.SendPropertyChanged("ProductID");
				this.OnProductIDChanged();
			}
		}
	}
	
	public short OperationSequence
	{
		get
		{
			return this._OperationSequence;
		}
		set
		{
			if ((this._OperationSequence != value))
			{
				this.OnOperationSequenceChanging(value);
				this.SendPropertyChanging();
				this._OperationSequence = value;
				this.SendPropertyChanged("OperationSequence");
				this.OnOperationSequenceChanged();
			}
		}
	}
	
	public short LocationID
	{
		get
		{
			return this._LocationID;
		}
		set
		{
			if ((this._LocationID != value))
			{
				if (this._Production_Location.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnLocationIDChanging(value);
				this.SendPropertyChanging();
				this._LocationID = value;
				this.SendPropertyChanged("LocationID");
				this.OnLocationIDChanged();
			}
		}
	}
	
	public System.DateTime ScheduledStartDate
	{
		get
		{
			return this._ScheduledStartDate;
		}
		set
		{
			if ((this._ScheduledStartDate != value))
			{
				this.OnScheduledStartDateChanging(value);
				this.SendPropertyChanging();
				this._ScheduledStartDate = value;
				this.SendPropertyChanged("ScheduledStartDate");
				this.OnScheduledStartDateChanged();
			}
		}
	}
	
	public System.DateTime ScheduledEndDate
	{
		get
		{
			return this._ScheduledEndDate;
		}
		set
		{
			if ((this._ScheduledEndDate != value))
			{
				this.OnScheduledEndDateChanging(value);
				this.SendPropertyChanging();
				this._ScheduledEndDate = value;
				this.SendPropertyChanged("ScheduledEndDate");
				this.OnScheduledEndDateChanged();
			}
		}
	}
	
	public System.Nullable<System.DateTime> ActualStartDate
	{
		get
		{
			return this._ActualStartDate;
		}
		set
		{
			if ((this._ActualStartDate != value))
			{
				this.OnActualStartDateChanging(value);
				this.SendPropertyChanging();
				this._ActualStartDate = value;
				this.SendPropertyChanged("ActualStartDate");
				this.OnActualStartDateChanged();
			}
		}
	}
	
	public System.Nullable<System.DateTime> ActualEndDate
	{
		get
		{
			return this._ActualEndDate;
		}
		set
		{
			if ((this._ActualEndDate != value))
			{
				this.OnActualEndDateChanging(value);
				this.SendPropertyChanging();
				this._ActualEndDate = value;
				this.SendPropertyChanged("ActualEndDate");
				this.OnActualEndDateChanged();
			}
		}
	}
	
	public System.Nullable<decimal> ActualResourceHrs
	{
		get
		{
			return this._ActualResourceHrs;
		}
		set
		{
			if ((this._ActualResourceHrs != value))
			{
				this.OnActualResourceHrsChanging(value);
				this.SendPropertyChanging();
				this._ActualResourceHrs = value;
				this.SendPropertyChanged("ActualResourceHrs");
				this.OnActualResourceHrsChanged();
			}
		}
	}
	
	public decimal PlannedCost
	{
		get
		{
			return this._PlannedCost;
		}
		set
		{
			if ((this._PlannedCost != value))
			{
				this.OnPlannedCostChanging(value);
				this.SendPropertyChanging();
				this._PlannedCost = value;
				this.SendPropertyChanged("PlannedCost");
				this.OnPlannedCostChanged();
			}
		}
	}
	
	public System.Nullable<decimal> ActualCost
	{
		get
		{
			return this._ActualCost;
		}
		set
		{
			if ((this._ActualCost != value))
			{
				this.OnActualCostChanging(value);
				this.SendPropertyChanging();
				this._ActualCost = value;
				this.SendPropertyChanged("ActualCost");
				this.OnActualCostChanged();
			}
		}
	}
	
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public Production_Location Production_Location
	{
		get
		{
			return this._Production_Location.Entity;
		}
		set
		{
			Production_Location previousValue = this._Production_Location.Entity;
			if (((previousValue != value) 
						|| (this._Production_Location.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Production_Location.Entity = null;
					previousValue.Production_WorkOrderRouting.Remove(this);
				}
				this._Production_Location.Entity = value;
				if ((value != null))
				{
					value.Production_WorkOrderRouting.Add(this);
					this._LocationID = value.LocationID;
				}
				else
				{
					this._LocationID = default(short);
				}
				this.SendPropertyChanged("Production_Location");
			}
		}
	}
	
	public Production_WorkOrder Production_WorkOrder
	{
		get
		{
			return this._Production_WorkOrder.Entity;
		}
		set
		{
			Production_WorkOrder previousValue = this._Production_WorkOrder.Entity;
			if (((previousValue != value) 
						|| (this._Production_WorkOrder.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Production_WorkOrder.Entity = null;
					previousValue.Production_WorkOrderRouting.Remove(this);
				}
				this._Production_WorkOrder.Entity = value;
				if ((value != null))
				{
					value.Production_WorkOrderRouting.Add(this);
					this._WorkOrderID = value.WorkOrderID;
				}
				else
				{
					this._WorkOrderID = default(int);
				}
				this.SendPropertyChanged("Production_WorkOrder");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
